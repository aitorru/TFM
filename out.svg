<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3462" onload="init(evt)" viewBox="0 0 1200 3462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3462" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3445.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3445.00"> </text><svg id="frames" x="10" width="1180" total_samples="20897"><g><title>`0x7FFAA21EAA40 (3 samples, 0.01%)</title><rect x="0.0096%" y="3397" width="0.0144%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.2596%" y="3407.50"></text></g><g><title>`0x7FFAA21C536E (3 samples, 0.01%)</title><rect x="0.0239%" y="3365" width="0.0144%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="3"/><text x="0.2739%" y="3375.50"></text></g><g><title>`0x7FFAA21B3C5C (4 samples, 0.02%)</title><rect x="0.0574%" y="3301" width="0.0191%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="4"/><text x="0.3074%" y="3311.50"></text></g><g><title>`0x7FFAA21A0E7B (19 samples, 0.09%)</title><rect x="0.0431%" y="3317" width="0.0909%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="19"/><text x="0.2931%" y="3327.50"></text></g><g><title>`0x7FFAA21A0AEE (4 samples, 0.02%)</title><rect x="0.1436%" y="3301" width="0.0191%" height="15" fill="rgb(208,68,35)" fg:x="30" fg:w="4"/><text x="0.3936%" y="3311.50"></text></g><g><title>`0x7FFAA21BDB41 (3 samples, 0.01%)</title><rect x="0.1483%" y="3285" width="0.0144%" height="15" fill="rgb(232,128,0)" fg:x="31" fg:w="3"/><text x="0.3983%" y="3295.50"></text></g><g><title>`0x7FFAA21BA3F7 (3 samples, 0.01%)</title><rect x="0.1483%" y="3269" width="0.0144%" height="15" fill="rgb(207,160,47)" fg:x="31" fg:w="3"/><text x="0.3983%" y="3279.50"></text></g><g><title>`0x7FFAA21BAC39 (3 samples, 0.01%)</title><rect x="0.1483%" y="3253" width="0.0144%" height="15" fill="rgb(228,23,34)" fg:x="31" fg:w="3"/><text x="0.3983%" y="3263.50"></text></g><g><title>`0x7FFAA222F4F4 (3 samples, 0.01%)</title><rect x="0.1483%" y="3237" width="0.0144%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="3"/><text x="0.3983%" y="3247.50"></text></g><g><title>`0x7FFAA21C5976 (31 samples, 0.15%)</title><rect x="0.0383%" y="3365" width="0.1483%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="31"/><text x="0.2883%" y="3375.50"></text></g><g><title>`0x7FFAA21F23DA (30 samples, 0.14%)</title><rect x="0.0431%" y="3349" width="0.1436%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="30"/><text x="0.2931%" y="3359.50"></text></g><g><title>`0x7FFAA21A0DBB (30 samples, 0.14%)</title><rect x="0.0431%" y="3333" width="0.1436%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="30"/><text x="0.2931%" y="3343.50"></text></g><g><title>`0x7FFAA21A0F80 (9 samples, 0.04%)</title><rect x="0.1436%" y="3317" width="0.0431%" height="15" fill="rgb(216,20,37)" fg:x="30" fg:w="9"/><text x="0.3936%" y="3327.50"></text></g><g><title>`0x7FFAA21A0BB8 (5 samples, 0.02%)</title><rect x="0.1627%" y="3301" width="0.0239%" height="15" fill="rgb(206,188,39)" fg:x="34" fg:w="5"/><text x="0.4127%" y="3311.50"></text></g><g><title>`0x7FFAA21A06FF (5 samples, 0.02%)</title><rect x="0.1627%" y="3285" width="0.0239%" height="15" fill="rgb(217,207,13)" fg:x="34" fg:w="5"/><text x="0.4127%" y="3295.50"></text></g><g><title>deno.exe`deno_runtime::tokio_util::create_basic_runtime (6 samples, 0.03%)</title><rect x="0.2201%" y="3109" width="0.0287%" height="15" fill="rgb(231,73,38)" fg:x="46" fg:w="6"/><text x="0.4701%" y="3119.50"></text></g><g><title>deno.exe`tokio::runtime::builder::Builder::new_current_thread (4 samples, 0.02%)</title><rect x="0.2297%" y="3093" width="0.0191%" height="15" fill="rgb(225,20,46)" fg:x="48" fg:w="4"/><text x="0.4797%" y="3103.50"></text></g><g><title>deno.exe`tokio::runtime::builder::Builder::new (4 samples, 0.02%)</title><rect x="0.2297%" y="3077" width="0.0191%" height="15" fill="rgb(210,31,41)" fg:x="48" fg:w="4"/><text x="0.4797%" y="3087.50"></text></g><g><title>deno.exe`tokio::util::rand::RngSeed::new (4 samples, 0.02%)</title><rect x="0.2297%" y="3061" width="0.0191%" height="15" fill="rgb(221,200,47)" fg:x="48" fg:w="4"/><text x="0.4797%" y="3071.50"></text></g><g><title>deno.exe`tokio::loom::std::rand::seed (4 samples, 0.02%)</title><rect x="0.2297%" y="3045" width="0.0191%" height="15" fill="rgb(226,26,5)" fg:x="48" fg:w="4"/><text x="0.4797%" y="3055.50"></text></g><g><title>deno.exe`std::collections::hash::map::RandomState::new (4 samples, 0.02%)</title><rect x="0.2297%" y="3029" width="0.0191%" height="15" fill="rgb(249,33,26)" fg:x="48" fg:w="4"/><text x="0.4797%" y="3039.50"></text></g><g><title>deno.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (3 samples, 0.01%)</title><rect x="0.2345%" y="3013" width="0.0144%" height="15" fill="rgb(235,183,28)" fg:x="49" fg:w="3"/><text x="0.4845%" y="3023.50"></text></g><g><title>deno.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::closure_env$0,std::collections::hash::map::RandomState&gt; (3 samples, 0.01%)</title><rect x="0.2345%" y="2997" width="0.0144%" height="15" fill="rgb(221,5,38)" fg:x="49" fg:w="3"/><text x="0.4845%" y="3007.50"></text></g><g><title>deno.exe`std::collections::hash::map::impl$82::new::KEYS::__getit(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (3 samples, 0.01%)</title><rect x="0.2345%" y="2981" width="0.0144%" height="15" fill="rgb(247,18,42)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2991.50"></text></g><g><title>deno.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::get&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (3 samples, 0.01%)</title><rect x="0.2345%" y="2965" width="0.0144%" height="15" fill="rgb(241,131,45)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2975.50"></text></g><g><title>deno.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (3 samples, 0.01%)</title><rect x="0.2345%" y="2949" width="0.0144%" height="15" fill="rgb(249,31,29)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2959.50"></text></g><g><title>deno.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (3 samples, 0.01%)</title><rect x="0.2345%" y="2933" width="0.0144%" height="15" fill="rgb(225,111,53)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2943.50"></text></g><g><title>deno.exe`std::collections::hash::map::impl$82::new::KEYS::__getit::closure$0 (3 samples, 0.01%)</title><rect x="0.2345%" y="2917" width="0.0144%" height="15" fill="rgb(238,160,17)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2927.50"></text></g><g><title>deno.exe`std::collections::hash::map::impl$82::new::KEYS::__init (3 samples, 0.01%)</title><rect x="0.2345%" y="2901" width="0.0144%" height="15" fill="rgb(214,148,48)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2911.50"></text></g><g><title>deno.exe`std::sys::windows::rand::hashmap_random_keys (3 samples, 0.01%)</title><rect x="0.2345%" y="2885" width="0.0144%" height="15" fill="rgb(232,36,49)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2895.50"></text></g><g><title>deno.exe`std::sys::windows::c::nt_success (3 samples, 0.01%)</title><rect x="0.2345%" y="2869" width="0.0144%" height="15" fill="rgb(209,103,24)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2879.50"></text></g><g><title>`0x7FFA9EF3177C (3 samples, 0.01%)</title><rect x="0.2345%" y="2853" width="0.0144%" height="15" fill="rgb(229,88,8)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2863.50"></text></g><g><title>`0x7FFA9EF318D6 (3 samples, 0.01%)</title><rect x="0.2345%" y="2837" width="0.0144%" height="15" fill="rgb(213,181,19)" fg:x="49" fg:w="3"/><text x="0.4845%" y="2847.50"></text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::park (3 samples, 0.01%)</title><rect x="0.2536%" y="2997" width="0.0144%" height="15" fill="rgb(254,191,54)" fg:x="53" fg:w="3"/><text x="0.5036%" y="3007.50"></text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::enter&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$3::park::closure_env$1&gt; (3 samples, 0.01%)</title><rect x="0.2536%" y="2981" width="0.0144%" height="15" fill="rgb(241,83,37)" fg:x="53" fg:w="3"/><text x="0.5036%" y="2991.50"></text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$3::park::closure$1 (3 samples, 0.01%)</title><rect x="0.2536%" y="2965" width="0.0144%" height="15" fill="rgb(233,36,39)" fg:x="53" fg:w="3"/><text x="0.5036%" y="2975.50"></text></g><g><title>deno.exe`clap_builder::builder::command::Command::_build_self (3 samples, 0.01%)</title><rect x="0.2871%" y="2565" width="0.0144%" height="15" fill="rgb(226,3,54)" fg:x="60" fg:w="3"/><text x="0.5371%" y="2575.50"></text></g><g><title>deno.exe`clap_builder::builder::debug_asserts::assert_app (4 samples, 0.02%)</title><rect x="0.3015%" y="2501" width="0.0191%" height="15" fill="rgb(245,192,40)" fg:x="63" fg:w="4"/><text x="0.5515%" y="2511.50"></text></g><g><title>deno.exe`clap_builder::builder::command::Command::_build_self (5 samples, 0.02%)</title><rect x="0.3015%" y="2517" width="0.0239%" height="15" fill="rgb(238,167,29)" fg:x="63" fg:w="5"/><text x="0.5515%" y="2527.50"></text></g><g><title>deno.exe`clap_builder::builder::command::Command::_build_subcommand(ref$ (6 samples, 0.03%)</title><rect x="0.3015%" y="2533" width="0.0287%" height="15" fill="rgb(232,182,51)" fg:x="63" fg:w="6"/><text x="0.5515%" y="2543.50"></text></g><g><title>deno.exe`clap_builder::builder::command::Command::try_get_matches_from_mut&lt;ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,ref$&lt;alloc::string::String&gt; &gt;(alloc::vec::Vec (11 samples, 0.05%)</title><rect x="0.2871%" y="2597" width="0.0526%" height="15" fill="rgb(231,60,39)" fg:x="60" fg:w="11"/><text x="0.5371%" y="2607.50"></text></g><g><title>deno.exe`clap_builder::builder::command::Command::_do_parse (11 samples, 0.05%)</title><rect x="0.2871%" y="2581" width="0.0526%" height="15" fill="rgb(208,69,12)" fg:x="60" fg:w="11"/><text x="0.5371%" y="2591.50"></text></g><g><title>deno.exe`clap_builder::parser::parser::Parser::get_matches_with (8 samples, 0.04%)</title><rect x="0.3015%" y="2565" width="0.0383%" height="15" fill="rgb(235,93,37)" fg:x="63" fg:w="8"/><text x="0.5515%" y="2575.50"></text></g><g><title>deno.exe`clap_builder::parser::parser::Parser::parse_subcommand(ref$ (8 samples, 0.04%)</title><rect x="0.3015%" y="2549" width="0.0383%" height="15" fill="rgb(213,116,39)" fg:x="63" fg:w="8"/><text x="0.5515%" y="2559.50"></text></g><g><title>deno.exe`deno::args::flags::clap_root (5 samples, 0.02%)</title><rect x="0.3445%" y="2597" width="0.0239%" height="15" fill="rgb(222,207,29)" fg:x="72" fg:w="5"/><text x="0.5945%" y="2607.50"></text></g><g><title>deno.exe`deno::args::flags::run_subcommand (3 samples, 0.01%)</title><rect x="0.3541%" y="2581" width="0.0144%" height="15" fill="rgb(206,96,30)" fg:x="74" fg:w="3"/><text x="0.6041%" y="2591.50"></text></g><g><title>deno.exe`deno::args::flags::flags_from_vec(alloc::vec::Vec (19 samples, 0.09%)</title><rect x="0.2871%" y="2613" width="0.0909%" height="15" fill="rgb(218,138,4)" fg:x="60" fg:w="19"/><text x="0.5371%" y="2623.50"></text></g><g><title>deno.exe`__chkstk() (10 samples, 0.05%)</title><rect x="0.3780%" y="2597" width="0.0479%" height="15" fill="rgb(250,191,14)" fg:x="79" fg:w="10"/><text x="0.6280%" y="2607.50"></text></g><g><title>deno.exe`deno::run_subcommand::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (11 samples, 0.05%)</title><rect x="0.3780%" y="2613" width="0.0526%" height="15" fill="rgb(239,60,40)" fg:x="79" fg:w="11"/><text x="0.6280%" y="2623.50"></text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (35 samples, 0.17%)</title><rect x="0.2823%" y="2661" width="0.1675%" height="15" fill="rgb(206,27,48)" fg:x="59" fg:w="35"/><text x="0.5323%" y="2671.50"></text></g><g><title>deno.exe`deno_core::task::impl$6::poll&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (35 samples, 0.17%)</title><rect x="0.2823%" y="2645" width="0.1675%" height="15" fill="rgb(225,35,8)" fg:x="59" fg:w="35"/><text x="0.5323%" y="2655.50"></text></g><g><title>deno.exe`deno::main::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (35 samples, 0.17%)</title><rect x="0.2823%" y="2629" width="0.1675%" height="15" fill="rgb(250,213,24)" fg:x="59" fg:w="35"/><text x="0.5323%" y="2639.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(core::ptr::non_null::NonNull (36 samples, 0.17%)</title><rect x="0.2823%" y="2869" width="0.1723%" height="15" fill="rgb(247,123,22)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2879.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2853" width="0.1723%" height="15" fill="rgb(231,138,38)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2863.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll_inner&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (36 samples, 0.17%)</title><rect x="0.2823%" y="2837" width="0.1723%" height="15" fill="rgb(231,145,46)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2847.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2821" width="0.1723%" height="15" fill="rgb(251,118,11)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2831.50"></text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2805" width="0.1723%" height="15" fill="rgb(217,147,25)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2815.50"></text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2789" width="0.1723%" height="15" fill="rgb(247,81,37)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2799.50"></text></g><g><title>deno.exe`Unknown (36 samples, 0.17%)</title><rect x="0.2823%" y="2773" width="0.1723%" height="15" fill="rgb(209,12,38)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2783.50"></text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (36 samples, 0.17%)</title><rect x="0.2823%" y="2757" width="0.1723%" height="15" fill="rgb(227,1,9)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2767.50"></text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2741" width="0.1723%" height="15" fill="rgb(248,47,43)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2751.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2725" width="0.1723%" height="15" fill="rgb(221,10,30)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2735.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (36 samples, 0.17%)</title><rect x="0.2823%" y="2709" width="0.1723%" height="15" fill="rgb(210,229,1)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2719.50"></text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (36 samples, 0.17%)</title><rect x="0.2823%" y="2693" width="0.1723%" height="15" fill="rgb(222,148,37)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2703.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::main::async_block_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (36 samples, 0.17%)</title><rect x="0.2823%" y="2677" width="0.1723%" height="15" fill="rgb(234,67,33)" fg:x="59" fg:w="36"/><text x="0.5323%" y="2687.50"></text></g><g><title>`0x7FFA9D6129E0 (3 samples, 0.01%)</title><rect x="0.4690%" y="2117" width="0.0144%" height="15" fill="rgb(247,98,35)" fg:x="98" fg:w="3"/><text x="0.7190%" y="2127.50"></text></g><g><title>`0x7FFA9D60F5D2 (3 samples, 0.01%)</title><rect x="0.4690%" y="2101" width="0.0144%" height="15" fill="rgb(247,138,52)" fg:x="98" fg:w="3"/><text x="0.7190%" y="2111.50"></text></g><g><title>`0x7FFA9D60546C (6 samples, 0.03%)</title><rect x="0.4642%" y="2133" width="0.0287%" height="15" fill="rgb(213,79,30)" fg:x="97" fg:w="6"/><text x="0.7142%" y="2143.50"></text></g><g><title>`0x7FFA9D607EC9 (9 samples, 0.04%)</title><rect x="0.4642%" y="2165" width="0.0431%" height="15" fill="rgb(246,177,23)" fg:x="97" fg:w="9"/><text x="0.7142%" y="2175.50"></text></g><g><title>`0x7FFA9D604A29 (9 samples, 0.04%)</title><rect x="0.4642%" y="2149" width="0.0431%" height="15" fill="rgb(230,62,27)" fg:x="97" fg:w="9"/><text x="0.7142%" y="2159.50"></text></g><g><title>`0x7FFA9D60569E (3 samples, 0.01%)</title><rect x="0.4929%" y="2133" width="0.0144%" height="15" fill="rgb(216,154,8)" fg:x="103" fg:w="3"/><text x="0.7429%" y="2143.50"></text></g><g><title>`0x7FFAA21B88C4 (3 samples, 0.01%)</title><rect x="0.5072%" y="2069" width="0.0144%" height="15" fill="rgb(244,35,45)" fg:x="106" fg:w="3"/><text x="0.7572%" y="2079.50"></text></g><g><title>`0x7FFAA21A0EAF (3 samples, 0.01%)</title><rect x="0.5072%" y="2053" width="0.0144%" height="15" fill="rgb(251,115,12)" fg:x="106" fg:w="3"/><text x="0.7572%" y="2063.50"></text></g><g><title>deno.exe`deno::cache::deno_dir::dirs::cache_dir (15 samples, 0.07%)</title><rect x="0.4642%" y="2197" width="0.0718%" height="15" fill="rgb(240,54,50)" fg:x="97" fg:w="15"/><text x="0.7142%" y="2207.50"></text></g><g><title>deno.exe`deno::cache::deno_dir::dirs::known_folder (15 samples, 0.07%)</title><rect x="0.4642%" y="2181" width="0.0718%" height="15" fill="rgb(233,84,52)" fg:x="97" fg:w="15"/><text x="0.7142%" y="2191.50"></text></g><g><title>`0x7FFAA10CEA4A (6 samples, 0.03%)</title><rect x="0.5072%" y="2165" width="0.0287%" height="15" fill="rgb(207,117,47)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2175.50"></text></g><g><title>`0x7FFAA10A89D2 (6 samples, 0.03%)</title><rect x="0.5072%" y="2149" width="0.0287%" height="15" fill="rgb(249,43,39)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2159.50"></text></g><g><title>`0x7FFAA21BB9E7 (6 samples, 0.03%)</title><rect x="0.5072%" y="2133" width="0.0287%" height="15" fill="rgb(209,38,44)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2143.50"></text></g><g><title>`0x7FFAA21B2C25 (6 samples, 0.03%)</title><rect x="0.5072%" y="2117" width="0.0287%" height="15" fill="rgb(236,212,23)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2127.50"></text></g><g><title>`0x7FFAA21A5C7E (6 samples, 0.03%)</title><rect x="0.5072%" y="2101" width="0.0287%" height="15" fill="rgb(242,79,21)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2111.50"></text></g><g><title>`0x7FFAA21A8AC0 (6 samples, 0.03%)</title><rect x="0.5072%" y="2085" width="0.0287%" height="15" fill="rgb(211,96,35)" fg:x="106" fg:w="6"/><text x="0.7572%" y="2095.50"></text></g><g><title>`0x7FFAA21B8930 (3 samples, 0.01%)</title><rect x="0.5216%" y="2069" width="0.0144%" height="15" fill="rgb(253,215,40)" fg:x="109" fg:w="3"/><text x="0.7716%" y="2079.50"></text></g><g><title>`0x7FFAA21BD61D (3 samples, 0.01%)</title><rect x="0.5216%" y="2053" width="0.0144%" height="15" fill="rgb(211,81,21)" fg:x="109" fg:w="3"/><text x="0.7716%" y="2063.50"></text></g><g><title>`0x7FFAA21FCE0E (3 samples, 0.01%)</title><rect x="0.5216%" y="2037" width="0.0144%" height="15" fill="rgb(208,190,38)" fg:x="109" fg:w="3"/><text x="0.7716%" y="2047.50"></text></g><g><title>`0x7FFAA21FD05D (3 samples, 0.01%)</title><rect x="0.5216%" y="2021" width="0.0144%" height="15" fill="rgb(235,213,38)" fg:x="109" fg:w="3"/><text x="0.7716%" y="2031.50"></text></g><g><title>`0x7FFAA21B868F (3 samples, 0.01%)</title><rect x="0.5216%" y="2005" width="0.0144%" height="15" fill="rgb(237,122,38)" fg:x="109" fg:w="3"/><text x="0.7716%" y="2015.50"></text></g><g><title>deno.exe`deno::factory::CliFactory::http_cache (16 samples, 0.08%)</title><rect x="0.4642%" y="2501" width="0.0766%" height="15" fill="rgb(244,218,35)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2511.50"></text></g><g><title>deno.exe`deno::factory::Deferred&lt;alloc::sync::Arc&lt;dyn$&lt;deno_cache_dir::cache::HttpCache&gt; &gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;dyn$&lt;deno_cache_dir::cache::HttpCache&gt; &gt;,deno::factory::impl$3::http_cache::closure_env$0&gt; (16 samples, 0.08%)</title><rect x="0.4642%" y="2485" width="0.0766%" height="15" fill="rgb(240,68,47)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2495.50"></text></g><g><title>deno.exe`once_cell::unsync::OnceCell&lt;alloc::sync::Arc&lt;dyn$&lt;deno_cache_dir::cache::HttpCache&gt; &gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;dyn$&lt;deno_cache_dir::cache::HttpCache&gt; &gt;,deno::factory::impl$3::http_cache::closure_env$0,anyhow::Error&gt; (16 samples, 0.08%)</title><rect x="0.4642%" y="2469" width="0.0766%" height="15" fill="rgb(210,16,53)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2479.50"></text></g><g><title>deno.exe`deno::factory::impl$3::http_cache::closure$0 (16 samples, 0.08%)</title><rect x="0.4642%" y="2453" width="0.0766%" height="15" fill="rgb(235,124,12)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2463.50"></text></g><g><title>deno.exe`deno::factory::CliFactory::global_http_cache (16 samples, 0.08%)</title><rect x="0.4642%" y="2437" width="0.0766%" height="15" fill="rgb(224,169,11)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2447.50"></text></g><g><title>deno.exe`deno::factory::Deferred&lt;alloc::sync::Arc&lt;deno_cache_dir::global::GlobalHttpCache&lt;deno::cache::RealDenoCacheEnv&gt; &gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno_cache_dir::global::GlobalHttpCache&lt;deno::cache::RealDenoCacheEnv&gt; &gt;,deno::factory::impl$3::global_http_cache::closure_env$0&gt; (16 samples, 0.08%)</title><rect x="0.4642%" y="2421" width="0.0766%" height="15" fill="rgb(250,166,2)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2431.50"></text></g><g><title>deno.exe`once_cell::unsync::OnceCell&lt;alloc::sync::Arc&lt;deno_cache_dir::global::GlobalHttpCache&lt;deno::cache::RealDenoCacheEnv&gt; &gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno_cache_dir::global::GlobalHttpCache&lt;deno::cache::RealDenoCacheEnv&gt; &gt;,deno::factory::impl$3::global_http_cache::closure_env$0,anyhow::Error&gt; (16 samples, 0.08%)</title><rect x="0.4642%" y="2405" width="0.0766%" height="15" fill="rgb(242,216,29)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2415.50"></text></g><g><title>deno.exe`deno::factory::impl$3::global_http_cache::closure$0 (16 samples, 0.08%)</title><rect x="0.4642%" y="2389" width="0.0766%" height="15" fill="rgb(230,116,27)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2399.50"></text></g><g><title>deno.exe`deno::factory::CliFactory::deno_dir (16 samples, 0.08%)</title><rect x="0.4642%" y="2373" width="0.0766%" height="15" fill="rgb(228,99,48)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2383.50"></text></g><g><title>deno.exe`deno::cache::deno_dir::DenoDirProvider::get_or_create (16 samples, 0.08%)</title><rect x="0.4642%" y="2357" width="0.0766%" height="15" fill="rgb(253,11,6)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2367.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt; &gt;::get_or_init&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt; (16 samples, 0.08%)</title><rect x="0.4642%" y="2341" width="0.0766%" height="15" fill="rgb(247,143,39)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2351.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt; &gt;::get_or_try_init&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result (16 samples, 0.08%)</title><rect x="0.4642%" y="2325" width="0.0766%" height="15" fill="rgb(236,97,10)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2335.50"></text></g><g><title>deno.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result (16 samples, 0.08%)</title><rect x="0.4642%" y="2309" width="0.0766%" height="15" fill="rgb(233,208,19)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2319.50"></text></g><g><title>deno.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (16 samples, 0.08%)</title><rect x="0.4642%" y="2293" width="0.0766%" height="15" fill="rgb(216,164,2)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2303.50"></text></g><g><title>deno.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;&gt;,dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$&lt;Output,bool&gt; &gt; &gt; &gt;(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (16 samples, 0.08%)</title><rect x="0.4642%" y="2277" width="0.0766%" height="15" fill="rgb(220,129,5)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2287.50"></text></g><g><title>deno.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt;,enum2$ (16 samples, 0.08%)</title><rect x="0.4642%" y="2261" width="0.0766%" height="15" fill="rgb(242,17,10)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2271.50"></text></g><g><title>deno.exe`once_cell::sync::impl$6::get_or_init::closure$0&lt;enum2$&lt;core::result::Result&lt;deno::cache::deno_dir::DenoDir,std::io::error::Error&gt; &gt;,deno::cache::deno_dir::impl$0::get_or_create::closure_env$0&gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result (16 samples, 0.08%)</title><rect x="0.4642%" y="2245" width="0.0766%" height="15" fill="rgb(242,107,0)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2255.50"></text></g><g><title>deno.exe`deno::cache::deno_dir::impl$0::get_or_create::closure$0 (16 samples, 0.08%)</title><rect x="0.4642%" y="2229" width="0.0766%" height="15" fill="rgb(251,28,31)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2239.50"></text></g><g><title>deno.exe`deno::cache::deno_dir::DenoDir::new(enum2$&lt;core::option::Option (16 samples, 0.08%)</title><rect x="0.4642%" y="2213" width="0.0766%" height="15" fill="rgb(233,223,10)" fg:x="97" fg:w="16"/><text x="0.7142%" y="2223.50"></text></g><g><title>deno.exe`deno::factory::CliFactory::file_fetcher (17 samples, 0.08%)</title><rect x="0.4642%" y="2565" width="0.0814%" height="15" fill="rgb(215,21,27)" fg:x="97" fg:w="17"/><text x="0.7142%" y="2575.50"></text></g><g><title>deno.exe`deno::factory::Deferred&lt;alloc::sync::Arc&lt;deno::file_fetcher::FileFetcher&gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno::file_fetcher::FileFetcher&gt;,deno::factory::impl$3::file_fetcher::closure_env$0&gt; (17 samples, 0.08%)</title><rect x="0.4642%" y="2549" width="0.0814%" height="15" fill="rgb(232,23,21)" fg:x="97" fg:w="17"/><text x="0.7142%" y="2559.50"></text></g><g><title>deno.exe`once_cell::unsync::OnceCell&lt;alloc::sync::Arc&lt;deno::file_fetcher::FileFetcher&gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno::file_fetcher::FileFetcher&gt;,deno::factory::impl$3::file_fetcher::closure_env$0,anyhow::Error&gt; (17 samples, 0.08%)</title><rect x="0.4642%" y="2533" width="0.0814%" height="15" fill="rgb(244,5,23)" fg:x="97" fg:w="17"/><text x="0.7142%" y="2543.50"></text></g><g><title>deno.exe`deno::factory::impl$3::file_fetcher::closure$0 (17 samples, 0.08%)</title><rect x="0.4642%" y="2517" width="0.0814%" height="15" fill="rgb(226,81,46)" fg:x="97" fg:w="17"/><text x="0.7142%" y="2527.50"></text></g><g><title>deno.exe`deno::factory::impl$3::create_cli_main_worker_factory::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 0.01%)</title><rect x="0.5455%" y="2565" width="0.0144%" height="15" fill="rgb(247,70,30)" fg:x="114" fg:w="3"/><text x="0.7955%" y="2575.50"></text></g><g><title>deno.exe`deno::args::config_file::ConfigFile::discover(deno::args::flags::Flags*, ref$ (3 samples, 0.01%)</title><rect x="0.5647%" y="2517" width="0.0144%" height="15" fill="rgb(212,68,19)" fg:x="118" fg:w="3"/><text x="0.8147%" y="2527.50"></text></g><g><title>deno.exe`deno::args::config_file::ConfigFile::discover_from(ref$&lt;std::path::Path&gt;, std::collections::hash::set::HashSet (3 samples, 0.01%)</title><rect x="0.5647%" y="2501" width="0.0144%" height="15" fill="rgb(240,187,13)" fg:x="118" fg:w="3"/><text x="0.8147%" y="2511.50"></text></g><g><title>deno.exe`deno::factory::impl$3::from_flags::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (5 samples, 0.02%)</title><rect x="0.5599%" y="2565" width="0.0239%" height="15" fill="rgb(223,113,26)" fg:x="117" fg:w="5"/><text x="0.8099%" y="2575.50"></text></g><g><title>deno.exe`deno::factory::impl$0::build_from_flags::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (5 samples, 0.02%)</title><rect x="0.5599%" y="2549" width="0.0239%" height="15" fill="rgb(206,192,2)" fg:x="117" fg:w="5"/><text x="0.8099%" y="2559.50"></text></g><g><title>deno.exe`deno::args::CliOptions::from_flags (5 samples, 0.02%)</title><rect x="0.5599%" y="2533" width="0.0239%" height="15" fill="rgb(241,108,4)" fg:x="117" fg:w="5"/><text x="0.8099%" y="2543.50"></text></g><g><title>deno.exe`deno::factory::impl$3::module_load_preparer::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (7 samples, 0.03%)</title><rect x="0.5838%" y="2565" width="0.0335%" height="15" fill="rgb(247,173,49)" fg:x="122" fg:w="7"/><text x="0.8338%" y="2575.50"></text></g><g><title>deno.exe`deno::factory::impl$2::get_or_try_init_async::async_fn$0&lt;alloc::sync::Arc&lt;deno::module_loader::ModuleLoadPreparer&gt;,enum2$&lt;deno::factory::impl$3::module_load_preparer::async_fn$0::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;deno::factory::impl$2::get_or_try_init_async::async_fn_env$0&lt;alloc::sync::Arc&lt;deno::module_loader::ModuleLoadPreparer&gt;,enum2$ (7 samples, 0.03%)</title><rect x="0.5838%" y="2549" width="0.0335%" height="15" fill="rgb(224,114,35)" fg:x="122" fg:w="7"/><text x="0.8338%" y="2559.50"></text></g><g><title>deno.exe`deno::factory::impl$3::module_load_preparer::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (7 samples, 0.03%)</title><rect x="0.5838%" y="2533" width="0.0335%" height="15" fill="rgb(245,159,27)" fg:x="122" fg:w="7"/><text x="0.8338%" y="2543.50"></text></g><g><title>deno.exe`deno::factory::impl$3::module_graph_builder::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (7 samples, 0.03%)</title><rect x="0.5838%" y="2517" width="0.0335%" height="15" fill="rgb(245,172,44)" fg:x="122" fg:w="7"/><text x="0.8338%" y="2527.50"></text></g><g><title>deno.exe`deno::factory::impl$2::get_or_try_init_async::async_fn$0&lt;alloc::sync::Arc&lt;deno::graph_util::ModuleGraphBuilder&gt;,enum2$&lt;deno::factory::impl$3::module_graph_builder::async_fn$0::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;deno::factory::impl$2::get_or_try_init_async::async_fn_env$0&lt;alloc::sync::Arc&lt;deno::graph_util::ModuleGraphBuilder&gt;,enum2$ (7 samples, 0.03%)</title><rect x="0.5838%" y="2501" width="0.0335%" height="15" fill="rgb(236,23,11)" fg:x="122" fg:w="7"/><text x="0.8338%" y="2511.50"></text></g><g><title>deno.exe`deno::factory::impl$3::module_graph_builder::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (6 samples, 0.03%)</title><rect x="0.5886%" y="2485" width="0.0287%" height="15" fill="rgb(205,117,38)" fg:x="123" fg:w="6"/><text x="0.8386%" y="2495.50"></text></g><g><title>deno.exe`deno::factory::impl$3::resolver::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 0.02%)</title><rect x="0.5982%" y="2469" width="0.0191%" height="15" fill="rgb(237,72,25)" fg:x="125" fg:w="4"/><text x="0.8482%" y="2479.50"></text></g><g><title>deno.exe`deno::factory::impl$2::get_or_try_init_async::async_fn$0&lt;alloc::sync::Arc&lt;deno::resolver::CliGraphResolver&gt;,enum2$&lt;deno::factory::impl$3::resolver::async_fn$0::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;deno::factory::impl$2::get_or_try_init_async::async_fn_env$0&lt;alloc::sync::Arc&lt;deno::resolver::CliGraphResolver&gt;,enum2$ (4 samples, 0.02%)</title><rect x="0.5982%" y="2453" width="0.0191%" height="15" fill="rgb(244,70,9)" fg:x="125" fg:w="4"/><text x="0.8482%" y="2463.50"></text></g><g><title>deno.exe`deno::factory::impl$3::resolver::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 0.02%)</title><rect x="0.5982%" y="2437" width="0.0191%" height="15" fill="rgb(217,125,39)" fg:x="125" fg:w="4"/><text x="0.8482%" y="2447.50"></text></g><g><title>deno.exe`deno::factory::CliFactory::npm_api (3 samples, 0.01%)</title><rect x="0.6030%" y="2421" width="0.0144%" height="15" fill="rgb(235,36,10)" fg:x="126" fg:w="3"/><text x="0.8530%" y="2431.50"></text></g><g><title>deno.exe`deno::factory::Deferred&lt;alloc::sync::Arc&lt;deno::npm::registry::CliNpmRegistryApi&gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno::npm::registry::CliNpmRegistryApi&gt;,deno::factory::impl$3::npm_api::closure_env$0&gt; (3 samples, 0.01%)</title><rect x="0.6030%" y="2405" width="0.0144%" height="15" fill="rgb(251,123,47)" fg:x="126" fg:w="3"/><text x="0.8530%" y="2415.50"></text></g><g><title>deno.exe`once_cell::unsync::OnceCell&lt;alloc::sync::Arc&lt;deno::npm::registry::CliNpmRegistryApi&gt; &gt;::get_or_try_init&lt;alloc::sync::Arc&lt;deno::npm::registry::CliNpmRegistryApi&gt;,deno::factory::impl$3::npm_api::closure_env$0,anyhow::Error&gt; (3 samples, 0.01%)</title><rect x="0.6030%" y="2389" width="0.0144%" height="15" fill="rgb(221,13,13)" fg:x="126" fg:w="3"/><text x="0.8530%" y="2399.50"></text></g><g><title>deno.exe`deno::factory::impl$3::npm_api::closure$0 (3 samples, 0.01%)</title><rect x="0.6030%" y="2373" width="0.0144%" height="15" fill="rgb(238,131,9)" fg:x="126" fg:w="3"/><text x="0.8530%" y="2383.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$2::query_row::closure$0&lt;deno_graph::analyzer::ModuleInfo,deno::cache::parsed_source::impl$2::get_module_info::closure_env$0,ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::query_row::closure_env$0&lt;deno_graph::analyzer::ModuleInfo,deno::cache::parsed_source::impl$2::get_module_info::closure_env$0,ref$&lt;slice2$&lt;ref$&lt;dyn$ (5 samples, 0.02%)</title><rect x="0.6556%" y="2357" width="0.0239%" height="15" fill="rgb(211,50,8)" fg:x="137" fg:w="5"/><text x="0.9056%" y="2367.50"></text></g><g><title>deno.exe`rusqlite::row::Rows::next (3 samples, 0.01%)</title><rect x="0.6652%" y="2341" width="0.0144%" height="15" fill="rgb(245,182,24)" fg:x="139" fg:w="3"/><text x="0.9152%" y="2351.50"></text></g><g><title>deno.exe`rusqlite::row::impl$6::advance (3 samples, 0.01%)</title><rect x="0.6652%" y="2325" width="0.0144%" height="15" fill="rgb(242,14,37)" fg:x="139" fg:w="3"/><text x="0.9152%" y="2335.50"></text></g><g><title>deno.exe`deno::cache::parsed_source::ParsedSourceCacheModuleAnalyzer::get_module_info(url::Url*, deno_media_type::MediaType, ref$ (6 samples, 0.03%)</title><rect x="0.6556%" y="2405" width="0.0287%" height="15" fill="rgb(246,228,12)" fg:x="137" fg:w="6"/><text x="0.9056%" y="2415.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::query_row&lt;deno_graph::analyzer::ModuleInfo,deno::cache::parsed_source::impl$2::get_module_info::closure_env$0,ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$&lt;dyn$ (6 samples, 0.03%)</title><rect x="0.6556%" y="2389" width="0.0287%" height="15" fill="rgb(213,55,15)" fg:x="137" fg:w="6"/><text x="0.9056%" y="2399.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::with_connection&lt;enum2$&lt;core::option::Option&lt;deno_graph::analyzer::ModuleInfo&gt; &gt;,deno::cache::cache_db::impl$2::query_row::closure_env$0&lt;deno_graph::analyzer::ModuleInfo,deno::cache::parsed_source::impl$2::get_module_info::closure_env$0,ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::query_row::closure_env$0&lt;deno_graph::analyzer::ModuleInfo,deno::cache::parsed_source::impl$2::get_module_info::closure_env$0,ref$&lt;slice2$&lt;ref$&lt;dyn$ (6 samples, 0.03%)</title><rect x="0.6556%" y="2373" width="0.0287%" height="15" fill="rgb(209,9,3)" fg:x="137" fg:w="6"/><text x="0.9056%" y="2383.50"></text></g><g><title>deno.exe`sqlite3BtreeInsert(BtCursor*, BtreePayload const*, int, int) (5 samples, 0.02%)</title><rect x="0.6987%" y="2245" width="0.0239%" height="15" fill="rgb(230,59,30)" fg:x="146" fg:w="5"/><text x="0.9487%" y="2255.50"></text></g><g><title>deno.exe`insertCell(MemPage*, int, unsigned char*, int, unsigned char*, unsigned int) (5 samples, 0.02%)</title><rect x="0.6987%" y="2229" width="0.0239%" height="15" fill="rgb(209,121,21)" fg:x="146" fg:w="5"/><text x="0.9487%" y="2239.50"></text></g><g><title>deno.exe`sqlite3PagerWrite(PgHdr*) (5 samples, 0.02%)</title><rect x="0.6987%" y="2213" width="0.0239%" height="15" fill="rgb(220,109,13)" fg:x="146" fg:w="5"/><text x="0.9487%" y="2223.50"></text></g><g><title>deno.exe`pager_write(PgHdr*) (5 samples, 0.02%)</title><rect x="0.6987%" y="2197" width="0.0239%" height="15" fill="rgb(232,18,1)" fg:x="146" fg:w="5"/><text x="0.9487%" y="2207.50"></text></g><g><title>deno.exe`pager_open_journal(Pager*) (5 samples, 0.02%)</title><rect x="0.6987%" y="2181" width="0.0239%" height="15" fill="rgb(215,41,42)" fg:x="146" fg:w="5"/><text x="0.9487%" y="2191.50"></text></g><g><title>deno.exe`writeJournalHdr(Pager*) (4 samples, 0.02%)</title><rect x="0.7035%" y="2165" width="0.0191%" height="15" fill="rgb(224,123,36)" fg:x="147" fg:w="4"/><text x="0.9535%" y="2175.50"></text></g><g><title>deno.exe`sqlite3OsWrite(sqlite3_file*, void const*, int, long long) (4 samples, 0.02%)</title><rect x="0.7035%" y="2149" width="0.0191%" height="15" fill="rgb(240,125,3)" fg:x="147" fg:w="4"/><text x="0.9535%" y="2159.50"></text></g><g><title>deno.exe`winWrite(sqlite3_file*, void const*, int, long long) (4 samples, 0.02%)</title><rect x="0.7035%" y="2133" width="0.0191%" height="15" fill="rgb(205,98,50)" fg:x="147" fg:w="4"/><text x="0.9535%" y="2143.50"></text></g><g><title>`0x7FFA9F7D6388 (4 samples, 0.02%)</title><rect x="0.7035%" y="2117" width="0.0191%" height="15" fill="rgb(205,185,37)" fg:x="147" fg:w="4"/><text x="0.9535%" y="2127.50"></text></g><g><title>`0x7FFAA222EE54 (4 samples, 0.02%)</title><rect x="0.7035%" y="2101" width="0.0191%" height="15" fill="rgb(238,207,15)" fg:x="147" fg:w="4"/><text x="0.9535%" y="2111.50"></text></g><g><title>deno.exe`sqlite3BtreeCommitPhaseOne(Btree*, char const*) (6 samples, 0.03%)</title><rect x="0.7274%" y="2213" width="0.0287%" height="15" fill="rgb(213,199,42)" fg:x="152" fg:w="6"/><text x="0.9774%" y="2223.50"></text></g><g><title>deno.exe`sqlite3PagerCommitPhaseOne(Pager*, char const*, int) (6 samples, 0.03%)</title><rect x="0.7274%" y="2197" width="0.0287%" height="15" fill="rgb(235,201,11)" fg:x="152" fg:w="6"/><text x="0.9774%" y="2207.50"></text></g><g><title>deno.exe`sqlite3VdbeHalt(Vdbe*) (11 samples, 0.05%)</title><rect x="0.7226%" y="2245" width="0.0526%" height="15" fill="rgb(207,46,11)" fg:x="151" fg:w="11"/><text x="0.9726%" y="2255.50"></text></g><g><title>deno.exe`vdbeCommit(sqlite3*, Vdbe*) (11 samples, 0.05%)</title><rect x="0.7226%" y="2229" width="0.0526%" height="15" fill="rgb(241,35,35)" fg:x="151" fg:w="11"/><text x="0.9726%" y="2239.50"></text></g><g><title>deno.exe`sqlite3BtreeCommitPhaseTwo(Btree*, int) (4 samples, 0.02%)</title><rect x="0.7561%" y="2213" width="0.0191%" height="15" fill="rgb(243,32,47)" fg:x="158" fg:w="4"/><text x="1.0061%" y="2223.50"></text></g><g><title>deno.exe`sqlite3PagerCommitPhaseTwo(Pager*) (4 samples, 0.02%)</title><rect x="0.7561%" y="2197" width="0.0191%" height="15" fill="rgb(247,202,23)" fg:x="158" fg:w="4"/><text x="1.0061%" y="2207.50"></text></g><g><title>deno.exe`pager_end_transaction(Pager*, int, int) (4 samples, 0.02%)</title><rect x="0.7561%" y="2181" width="0.0191%" height="15" fill="rgb(219,102,11)" fg:x="158" fg:w="4"/><text x="1.0061%" y="2191.50"></text></g><g><title>deno.exe`sqlite3OsTruncate(sqlite3_file*, long long) (3 samples, 0.01%)</title><rect x="0.7609%" y="2165" width="0.0144%" height="15" fill="rgb(243,110,44)" fg:x="159" fg:w="3"/><text x="1.0109%" y="2175.50"></text></g><g><title>deno.exe`winTruncate(sqlite3_file*, long long) (3 samples, 0.01%)</title><rect x="0.7609%" y="2149" width="0.0144%" height="15" fill="rgb(222,74,54)" fg:x="159" fg:w="3"/><text x="1.0109%" y="2159.50"></text></g><g><title>`0x7FFA9F817BAD (3 samples, 0.01%)</title><rect x="0.7609%" y="2133" width="0.0144%" height="15" fill="rgb(216,99,12)" fg:x="159" fg:w="3"/><text x="1.0109%" y="2143.50"></text></g><g><title>`0x7FFAA222F234 (3 samples, 0.01%)</title><rect x="0.7609%" y="2117" width="0.0144%" height="15" fill="rgb(226,22,26)" fg:x="159" fg:w="3"/><text x="1.0109%" y="2127.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::execute&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$&lt;dyn$ (20 samples, 0.10%)</title><rect x="0.6843%" y="2389" width="0.0957%" height="15" fill="rgb(217,163,10)" fg:x="143" fg:w="20"/><text x="0.9343%" y="2399.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::with_connection&lt;usize,deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$ (20 samples, 0.10%)</title><rect x="0.6843%" y="2373" width="0.0957%" height="15" fill="rgb(213,25,53)" fg:x="143" fg:w="20"/><text x="0.9343%" y="2383.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$2::execute::closure$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$ (20 samples, 0.10%)</title><rect x="0.6843%" y="2357" width="0.0957%" height="15" fill="rgb(252,105,26)" fg:x="143" fg:w="20"/><text x="0.9343%" y="2367.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(ref$&lt;slice2$&lt;ref$&lt;dyn$ (19 samples, 0.09%)</title><rect x="0.6891%" y="2341" width="0.0909%" height="15" fill="rgb(220,39,43)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2351.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute_with_bound_parameters (19 samples, 0.09%)</title><rect x="0.6891%" y="2325" width="0.0909%" height="15" fill="rgb(229,68,48)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2335.50"></text></g><g><title>deno.exe`rusqlite::raw_statement::RawStatement::step (19 samples, 0.09%)</title><rect x="0.6891%" y="2309" width="0.0909%" height="15" fill="rgb(252,8,32)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2319.50"></text></g><g><title>deno.exe`sqlite3_step(sqlite3_stmt*) (19 samples, 0.09%)</title><rect x="0.6891%" y="2293" width="0.0909%" height="15" fill="rgb(223,20,43)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2303.50"></text></g><g><title>deno.exe`sqlite3Step(Vdbe*) (19 samples, 0.09%)</title><rect x="0.6891%" y="2277" width="0.0909%" height="15" fill="rgb(229,81,49)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2287.50"></text></g><g><title>deno.exe`sqlite3VdbeExec(Vdbe*) (19 samples, 0.09%)</title><rect x="0.6891%" y="2261" width="0.0909%" height="15" fill="rgb(236,28,36)" fg:x="144" fg:w="19"/><text x="0.9391%" y="2271.50"></text></g><g><title>deno.exe`deno::cache::parsed_source::ParsedSourceCacheModuleAnalyzer::set_module_info(url::Url*, deno_media_type::MediaType, ref$ (22 samples, 0.11%)</title><rect x="0.6843%" y="2405" width="0.1053%" height="15" fill="rgb(249,185,26)" fg:x="143" fg:w="22"/><text x="0.9343%" y="2415.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (3 samples, 0.01%)</title><rect x="0.7992%" y="2197" width="0.0144%" height="15" fill="rgb(249,174,33)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (3 samples, 0.01%)</title><rect x="0.7992%" y="2181" width="0.0144%" height="15" fill="rgb(233,201,37)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_export_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt; (3 samples, 0.01%)</title><rect x="0.7992%" y="2165" width="0.0144%" height="15" fill="rgb(221,78,26)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_export_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt; (3 samples, 0.01%)</title><rect x="0.7992%" y="2149" width="0.0144%" height="15" fill="rgb(250,127,30)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (3 samples, 0.01%)</title><rect x="0.7992%" y="2133" width="0.0144%" height="15" fill="rgb(230,49,44)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_decl&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (3 samples, 0.01%)</title><rect x="0.7992%" y="2117" width="0.0144%" height="15" fill="rgb(229,67,23)" fg:x="167" fg:w="3"/><text x="1.0492%" y="2127.50"></text></g><g><title>deno.exe`deno_graph::ast::analyze_dependencies (6 samples, 0.03%)</title><rect x="0.7896%" y="2373" width="0.0287%" height="15" fill="rgb(249,83,47)" fg:x="165" fg:w="6"/><text x="1.0396%" y="2383.50"></text></g><g><title>deno.exe`swc_ecma_dep_graph::analyze_dependencies(swc_ecma_ast::module::Module*, ref$&lt;dyn$ (5 samples, 0.02%)</title><rect x="0.7944%" y="2357" width="0.0239%" height="15" fill="rgb(215,43,3)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2367.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$437::visit_with&lt;swc_ecma_dep_graph::DependencyCollector&gt; (5 samples, 0.02%)</title><rect x="0.7944%" y="2341" width="0.0239%" height="15" fill="rgb(238,154,13)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2351.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module&lt;swc_ecma_dep_graph::DependencyCollector&gt; (5 samples, 0.02%)</title><rect x="0.7944%" y="2325" width="0.0239%" height="15" fill="rgb(219,56,2)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2335.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module&lt;swc_ecma_dep_graph::DependencyCollector&gt; (5 samples, 0.02%)</title><rect x="0.7944%" y="2309" width="0.0239%" height="15" fill="rgb(233,0,4)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2319.50"></text></g><g><title>deno.exe`swc_ecma_dep_graph::impl$3::visit_module_items(swc_ecma_dep_graph::DependencyCollector*, ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="0.7944%" y="2293" width="0.0239%" height="15" fill="rgb(235,30,7)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2303.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="0.7944%" y="2277" width="0.0239%" height="15" fill="rgb(250,79,13)" fg:x="166" fg:w="5"/><text x="1.0444%" y="2287.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_dep_graph::DependencyCollector&gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_module_items::closure_env$0 (4 samples, 0.02%)</title><rect x="0.7992%" y="2261" width="0.0191%" height="15" fill="rgb(211,146,34)" fg:x="167" fg:w="4"/><text x="1.0492%" y="2271.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items::closure$0&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_dep_graph::DependencyCollector&gt;*, enum2$ (4 samples, 0.02%)</title><rect x="0.7992%" y="2245" width="0.0191%" height="15" fill="rgb(228,22,38)" fg:x="167" fg:w="4"/><text x="1.0492%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (4 samples, 0.02%)</title><rect x="0.7992%" y="2229" width="0.0191%" height="15" fill="rgb(235,168,5)" fg:x="167" fg:w="4"/><text x="1.0492%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_dep_graph::DependencyCollector&gt;(swc_ecma_dep_graph::DependencyCollector*, enum2$ (4 samples, 0.02%)</title><rect x="0.7992%" y="2213" width="0.0191%" height="15" fill="rgb(221,155,16)" fg:x="167" fg:w="4"/><text x="1.0492%" y="2223.50"></text></g><g><title>deno.exe`regex::exec::ExecBuilder::build (5 samples, 0.02%)</title><rect x="0.8183%" y="2117" width="0.0239%" height="15" fill="rgb(215,215,53)" fg:x="171" fg:w="5"/><text x="1.0683%" y="2127.50"></text></g><g><title>deno.exe`regex::exec::ExecBuilder::parse (3 samples, 0.01%)</title><rect x="0.8279%" y="2101" width="0.0144%" height="15" fill="rgb(223,4,10)" fg:x="173" fg:w="3"/><text x="1.0779%" y="2111.50"></text></g><g><title>deno.exe`once_cell::sync::impl$12::deref&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;(once_cell::sync::Lazy&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2357" width="0.0287%" height="15" fill="rgb(234,103,6)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2367.50"></text></g><g><title>deno.exe`once_cell::sync::Lazy&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;::force&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; (6 samples, 0.03%)</title><rect x="0.8183%" y="2341" width="0.0287%" height="15" fill="rgb(227,97,0)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2351.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;regex::re_unicode::Regex&gt;::get_or_init&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;(once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2325" width="0.0287%" height="15" fill="rgb(234,150,53)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2335.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;regex::re_unicode::Regex&gt;::get_or_try_init&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2309" width="0.0287%" height="15" fill="rgb(228,201,54)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2319.50"></text></g><g><title>deno.exe`once_cell::imp::OnceCell&lt;regex::re_unicode::Regex&gt;::initialize&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2293" width="0.0287%" height="15" fill="rgb(222,22,37)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2303.50"></text></g><g><title>deno.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (6 samples, 0.03%)</title><rect x="0.8183%" y="2277" width="0.0287%" height="15" fill="rgb(237,53,32)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2287.50"></text></g><g><title>deno.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;&gt;,dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$&lt;Output,bool&gt; &gt; &gt; &gt;(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (6 samples, 0.03%)</title><rect x="0.8183%" y="2261" width="0.0287%" height="15" fill="rgb(233,25,53)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2271.50"></text></g><g><title>deno.exe`once_cell::imp::impl$4::initialize::closure$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$ (6 samples, 0.03%)</title><rect x="0.8183%" y="2245" width="0.0287%" height="15" fill="rgb(210,40,34)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2255.50"></text></g><g><title>deno.exe`once_cell::sync::impl$6::get_or_init::closure$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2229" width="0.0287%" height="15" fill="rgb(241,220,44)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2239.50"></text></g><g><title>deno.exe`once_cell::sync::impl$11::force::closure$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;(once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2213" width="0.0287%" height="15" fill="rgb(235,28,35)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2223.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;regex::re_unicode::Regex (*)(),tuple$&lt;&gt; &gt;(regex::re_unicode::Regex (*) (6 samples, 0.03%)</title><rect x="0.8183%" y="2197" width="0.0287%" height="15" fill="rgb(210,56,17)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2207.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;deno_graph::ast::TRIPLE_SLASH_REFERENCE_RE::closure_env$0,tuple$&lt;&gt; &gt; (6 samples, 0.03%)</title><rect x="0.8183%" y="2181" width="0.0287%" height="15" fill="rgb(224,130,29)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2191.50"></text></g><g><title>deno.exe`deno_graph::ast::TRIPLE_SLASH_REFERENCE_RE::closure$0 (6 samples, 0.03%)</title><rect x="0.8183%" y="2165" width="0.0287%" height="15" fill="rgb(235,212,8)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2175.50"></text></g><g><title>deno.exe`regex::re_unicode::Regex::new(ref$ (6 samples, 0.03%)</title><rect x="0.8183%" y="2149" width="0.0287%" height="15" fill="rgb(223,33,50)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2159.50"></text></g><g><title>deno.exe`regex::re_builder::unicode::RegexBuilder::build (6 samples, 0.03%)</title><rect x="0.8183%" y="2133" width="0.0287%" height="15" fill="rgb(219,149,13)" fg:x="171" fg:w="6"/><text x="1.0683%" y="2143.50"></text></g><g><title>deno.exe`deno_graph::ast::DefaultModuleAnalyzer::module_info (13 samples, 0.06%)</title><rect x="0.7896%" y="2389" width="0.0622%" height="15" fill="rgb(250,156,29)" fg:x="165" fg:w="13"/><text x="1.0396%" y="2399.50"></text></g><g><title>deno.exe`deno_graph::ast::analyze_ts_references (7 samples, 0.03%)</title><rect x="0.8183%" y="2373" width="0.0335%" height="15" fill="rgb(216,193,19)" fg:x="171" fg:w="7"/><text x="1.0683%" y="2383.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::make_method&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2 (3 samples, 0.01%)</title><rect x="0.8662%" y="2117" width="0.0144%" height="15" fill="rgb(216,135,14)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2 (3 samples, 0.01%)</title><rect x="0.8662%" y="2101" width="0.0144%" height="15" fill="rgb(241,47,5)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="0.8662%" y="2085" width="0.0144%" height="15" fill="rgb(233,42,35)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2 (3 samples, 0.01%)</title><rect x="0.8662%" y="2069" width="0.0144%" height="15" fill="rgb(231,13,6)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2 (3 samples, 0.01%)</title><rect x="0.8662%" y="2053" width="0.0144%" height="15" fill="rgb(207,181,40)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$2&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="0.8662%" y="2037" width="0.0144%" height="15" fill="rgb(254,173,49)" fg:x="181" fg:w="3"/><text x="1.1162%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8805%" y="1925" width="0.0144%" height="15" fill="rgb(221,1,38)" fg:x="184" fg:w="3"/><text x="1.1305%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr_or_spread&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1717" width="0.0144%" height="15" fill="rgb(206,124,46)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1701" width="0.0144%" height="15" fill="rgb(249,21,11)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1685" width="0.0144%" height="15" fill="rgb(222,201,40)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1669" width="0.0144%" height="15" fill="rgb(235,61,29)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1653" width="0.0144%" height="15" fill="rgb(219,207,3)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1637" width="0.0144%" height="15" fill="rgb(222,56,46)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.8949%" y="1621" width="0.0144%" height="15" fill="rgb(239,76,54)" fg:x="187" fg:w="3"/><text x="1.1449%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (7 samples, 0.03%)</title><rect x="0.8805%" y="1957" width="0.0335%" height="15" fill="rgb(231,124,27)" fg:x="184" fg:w="7"/><text x="1.1305%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (7 samples, 0.03%)</title><rect x="0.8805%" y="1941" width="0.0335%" height="15" fill="rgb(249,195,6)" fg:x="184" fg:w="7"/><text x="1.1305%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_var_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1925" width="0.0191%" height="15" fill="rgb(237,174,47)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_var_declarator&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1909" width="0.0191%" height="15" fill="rgb(206,201,31)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1893" width="0.0191%" height="15" fill="rgb(231,57,52)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1877" width="0.0191%" height="15" fill="rgb(248,177,22)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1861" width="0.0191%" height="15" fill="rgb(215,211,37)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1845" width="0.0191%" height="15" fill="rgb(241,128,51)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1829" width="0.0191%" height="15" fill="rgb(227,165,31)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_await_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1813" width="0.0191%" height="15" fill="rgb(228,167,24)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1797" width="0.0191%" height="15" fill="rgb(228,143,12)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1781" width="0.0191%" height="15" fill="rgb(249,149,8)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.8949%" y="1765" width="0.0191%" height="15" fill="rgb(243,35,44)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0 (4 samples, 0.02%)</title><rect x="0.8949%" y="1749" width="0.0191%" height="15" fill="rgb(246,89,9)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::expr::impl$0::parse_args::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (4 samples, 0.02%)</title><rect x="0.8949%" y="1733" width="0.0191%" height="15" fill="rgb(233,213,13)" fg:x="187" fg:w="4"/><text x="1.1449%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (8 samples, 0.04%)</title><rect x="0.8805%" y="2021" width="0.0383%" height="15" fill="rgb(233,141,41)" fg:x="184" fg:w="8"/><text x="1.1305%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (8 samples, 0.04%)</title><rect x="0.8805%" y="2005" width="0.0383%" height="15" fill="rgb(239,167,4)" fg:x="184" fg:w="8"/><text x="1.1305%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (8 samples, 0.04%)</title><rect x="0.8805%" y="1989" width="0.0383%" height="15" fill="rgb(209,217,16)" fg:x="184" fg:w="8"/><text x="1.1305%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (8 samples, 0.04%)</title><rect x="0.8805%" y="1973" width="0.0383%" height="15" fill="rgb(219,88,35)" fg:x="184" fg:w="8"/><text x="1.1305%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::make_method&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3 (9 samples, 0.04%)</title><rect x="0.8805%" y="2117" width="0.0431%" height="15" fill="rgb(220,193,23)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3 (9 samples, 0.04%)</title><rect x="0.8805%" y="2101" width="0.0431%" height="15" fill="rgb(230,90,52)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$1::make_method::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (9 samples, 0.04%)</title><rect x="0.8805%" y="2085" width="0.0431%" height="15" fill="rgb(252,106,19)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3 (9 samples, 0.04%)</title><rect x="0.8805%" y="2069" width="0.0431%" height="15" fill="rgb(206,74,20)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3 (9 samples, 0.04%)</title><rect x="0.8805%" y="2053" width="0.0431%" height="15" fill="rgb(230,138,44)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_member_with_is_static::closure_env$3&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (9 samples, 0.04%)</title><rect x="0.8805%" y="2037" width="0.0431%" height="15" fill="rgb(235,182,43)" fg:x="184" fg:w="9"/><text x="1.1305%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_member&lt;swc_ecma_parser::lexer::Lexer&gt; (15 samples, 0.07%)</title><rect x="0.8662%" y="2149" width="0.0718%" height="15" fill="rgb(242,16,51)" fg:x="181" fg:w="15"/><text x="1.1162%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_member_with_is_static&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::Span&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_ecma_ast::typescript::Accessibility&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::Span&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::Span&gt; &gt;, alloc::vec::Vec (15 samples, 0.07%)</title><rect x="0.8662%" y="2133" width="0.0718%" height="15" fill="rgb(248,9,4)" fg:x="181" fg:w="15"/><text x="1.1162%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (17 samples, 0.08%)</title><rect x="0.8614%" y="2245" width="0.0814%" height="15" fill="rgb(210,31,22)" fg:x="180" fg:w="17"/><text x="1.1114%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (17 samples, 0.08%)</title><rect x="0.8614%" y="2229" width="0.0814%" height="15" fill="rgb(239,54,39)" fg:x="180" fg:w="17"/><text x="1.1114%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (17 samples, 0.08%)</title><rect x="0.8614%" y="2213" width="0.0814%" height="15" fill="rgb(230,99,41)" fg:x="180" fg:w="17"/><text x="1.1114%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure_env$0 (17 samples, 0.08%)</title><rect x="0.8614%" y="2197" width="0.0814%" height="15" fill="rgb(253,106,12)" fg:x="180" fg:w="17"/><text x="1.1114%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (17 samples, 0.08%)</title><rect x="0.8614%" y="2181" width="0.0814%" height="15" fill="rgb(213,46,41)" fg:x="180" fg:w="17"/><text x="1.1114%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_body&lt;swc_ecma_parser::lexer::Lexer&gt; (16 samples, 0.08%)</title><rect x="0.8662%" y="2165" width="0.0766%" height="15" fill="rgb(215,133,35)" fg:x="181" fg:w="16"/><text x="1.1162%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr_or_spread&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2085" width="0.0239%" height="15" fill="rgb(213,28,5)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2069" width="0.0239%" height="15" fill="rgb(215,77,49)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2053" width="0.0239%" height="15" fill="rgb(248,100,22)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2037" width="0.0239%" height="15" fill="rgb(208,67,9)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2021" width="0.0239%" height="15" fill="rgb(219,133,21)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="2005" width="0.0239%" height="15" fill="rgb(246,46,29)" fg:x="197" fg:w="5"/><text x="1.1927%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="1989" width="0.0239%" height="15" fill="rgb(246,185,52)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="1973" width="0.0239%" height="15" fill="rgb(252,136,11)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="1957" width="0.0239%" height="15" fill="rgb(219,138,53)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="1941" width="0.0239%" height="15" fill="rgb(211,51,23)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_primary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9427%" y="1925" width="0.0239%" height="15" fill="rgb(247,221,28)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_paren_expr_or_arrow_fn&lt;swc_ecma_parser::lexer::Lexer&gt;(bool, enum2$&lt;core::option::Option (5 samples, 0.02%)</title><rect x="0.9427%" y="1909" width="0.0239%" height="15" fill="rgb(251,222,45)" fg:x="197" fg:w="5"/><text x="1.1927%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::BlockStmtOrExpr&gt;,alloc::alloc::Global&gt; &gt; (4 samples, 0.02%)</title><rect x="0.9475%" y="1893" width="0.0191%" height="15" fill="rgb(217,162,53)" fg:x="198" fg:w="4"/><text x="1.1975%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$7::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (4 samples, 0.02%)</title><rect x="0.9475%" y="1877" width="0.0191%" height="15" fill="rgb(229,93,14)" fg:x="198" fg:w="4"/><text x="1.1975%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="0.9475%" y="1861" width="0.0191%" height="15" fill="rgb(209,67,49)" fg:x="198" fg:w="4"/><text x="1.1975%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (4 samples, 0.02%)</title><rect x="0.9475%" y="1845" width="0.0191%" height="15" fill="rgb(213,87,29)" fg:x="198" fg:w="4"/><text x="1.1975%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (4 samples, 0.02%)</title><rect x="0.9475%" y="1829" width="0.0191%" height="15" fill="rgb(205,151,52)" fg:x="198" fg:w="4"/><text x="1.1975%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="0.9523%" y="1813" width="0.0144%" height="15" fill="rgb(253,215,39)" fg:x="199" fg:w="3"/><text x="1.2023%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args&lt;swc_ecma_parser::lexer::Lexer&gt; (6 samples, 0.03%)</title><rect x="0.9427%" y="2133" width="0.0287%" height="15" fill="rgb(221,220,41)" fg:x="197" fg:w="6"/><text x="1.1927%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0 (6 samples, 0.03%)</title><rect x="0.9427%" y="2117" width="0.0287%" height="15" fill="rgb(218,133,21)" fg:x="197" fg:w="6"/><text x="1.1927%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::expr::impl$0::parse_args::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (6 samples, 0.03%)</title><rect x="0.9427%" y="2101" width="0.0287%" height="15" fill="rgb(221,193,43)" fg:x="197" fg:w="6"/><text x="1.1927%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2245" width="0.0431%" height="15" fill="rgb(240,128,52)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2229" width="0.0431%" height="15" fill="rgb(253,114,12)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2213" width="0.0431%" height="15" fill="rgb(215,223,47)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2197" width="0.0431%" height="15" fill="rgb(248,225,23)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2181" width="0.0431%" height="15" fill="rgb(250,108,0)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2165" width="0.0431%" height="15" fill="rgb(228,208,7)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (9 samples, 0.04%)</title><rect x="0.9427%" y="2149" width="0.0431%" height="15" fill="rgb(244,45,10)" fg:x="197" fg:w="9"/><text x="1.1927%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9714%" y="2133" width="0.0144%" height="15" fill="rgb(207,125,25)" fg:x="203" fg:w="3"/><text x="1.2214%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9714%" y="2117" width="0.0144%" height="15" fill="rgb(210,195,18)" fg:x="203" fg:w="3"/><text x="1.2214%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9714%" y="2101" width="0.0144%" height="15" fill="rgb(249,80,12)" fg:x="203" fg:w="3"/><text x="1.2214%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_subscripts&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$ (3 samples, 0.01%)</title><rect x="0.9714%" y="2085" width="0.0144%" height="15" fill="rgb(221,65,9)" fg:x="203" fg:w="3"/><text x="1.2214%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_subscript&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, enum2$ (3 samples, 0.01%)</title><rect x="0.9714%" y="2069" width="0.0144%" height="15" fill="rgb(235,49,36)" fg:x="203" fg:w="3"/><text x="1.2214%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="0.9858%" y="2117" width="0.0239%" height="15" fill="rgb(225,32,20)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="0.9858%" y="2101" width="0.0239%" height="15" fill="rgb(215,141,46)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="0.9858%" y="2085" width="0.0239%" height="15" fill="rgb(250,160,47)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (5 samples, 0.02%)</title><rect x="0.9858%" y="2069" width="0.0239%" height="15" fill="rgb(216,222,40)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (5 samples, 0.02%)</title><rect x="0.9858%" y="2053" width="0.0239%" height="15" fill="rgb(234,217,39)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="0.9858%" y="2037" width="0.0239%" height="15" fill="rgb(207,178,40)" fg:x="206" fg:w="5"/><text x="1.2358%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_return_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="2021" width="0.0144%" height="15" fill="rgb(221,136,13)" fg:x="208" fg:w="3"/><text x="1.2454%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure_env$0 (3 samples, 0.01%)</title><rect x="0.9954%" y="2005" width="0.0144%" height="15" fill="rgb(249,199,10)" fg:x="208" fg:w="3"/><text x="1.2454%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="0.9954%" y="1989" width="0.0144%" height="15" fill="rgb(249,222,13)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1973" width="0.0144%" height="15" fill="rgb(244,185,38)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1957" width="0.0144%" height="15" fill="rgb(236,202,9)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1941" width="0.0144%" height="15" fill="rgb(250,229,37)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1925" width="0.0144%" height="15" fill="rgb(206,174,23)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1909" width="0.0144%" height="15" fill="rgb(211,33,43)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1893" width="0.0144%" height="15" fill="rgb(245,58,50)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="0.9954%" y="1877" width="0.0144%" height="15" fill="rgb(244,68,36)" fg:x="208" fg:w="3"/><text x="1.2454%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (9 samples, 0.04%)</title><rect x="0.9858%" y="2245" width="0.0431%" height="15" fill="rgb(232,229,15)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (9 samples, 0.04%)</title><rect x="0.9858%" y="2229" width="0.0431%" height="15" fill="rgb(254,30,23)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (9 samples, 0.04%)</title><rect x="0.9858%" y="2213" width="0.0431%" height="15" fill="rgb(235,160,14)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (9 samples, 0.04%)</title><rect x="0.9858%" y="2197" width="0.0431%" height="15" fill="rgb(212,155,44)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (9 samples, 0.04%)</title><rect x="0.9858%" y="2181" width="0.0431%" height="15" fill="rgb(226,2,50)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (9 samples, 0.04%)</title><rect x="0.9858%" y="2165" width="0.0431%" height="15" fill="rgb(234,177,6)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (9 samples, 0.04%)</title><rect x="0.9858%" y="2149" width="0.0431%" height="15" fill="rgb(217,24,9)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (9 samples, 0.04%)</title><rect x="0.9858%" y="2133" width="0.0431%" height="15" fill="rgb(220,13,46)" fg:x="206" fg:w="9"/><text x="1.2358%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (38 samples, 0.18%)</title><rect x="0.8614%" y="2261" width="0.1818%" height="15" fill="rgb(239,221,27)" fg:x="180" fg:w="38"/><text x="1.1114%" y="2271.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.0480%" y="2037" width="0.0144%" height="15" fill="rgb(222,198,25)" fg:x="219" fg:w="3"/><text x="1.2980%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.0480%" y="2021" width="0.0144%" height="15" fill="rgb(211,99,13)" fg:x="219" fg:w="3"/><text x="1.2980%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="1.0480%" y="2101" width="0.0191%" height="15" fill="rgb(232,111,31)" fg:x="219" fg:w="4"/><text x="1.2980%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (4 samples, 0.02%)</title><rect x="1.0480%" y="2085" width="0.0191%" height="15" fill="rgb(245,82,37)" fg:x="219" fg:w="4"/><text x="1.2980%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.0480%" y="2069" width="0.0191%" height="15" fill="rgb(227,149,46)" fg:x="219" fg:w="4"/><text x="1.2980%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (4 samples, 0.02%)</title><rect x="1.0480%" y="2053" width="0.0191%" height="15" fill="rgb(218,36,50)" fg:x="219" fg:w="4"/><text x="1.2980%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_async_fn_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.0480%" y="2229" width="0.0239%" height="15" fill="rgb(226,80,48)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.0480%" y="2213" width="0.0239%" height="15" fill="rgb(238,224,15)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.0480%" y="2197" width="0.0239%" height="15" fill="rgb(241,136,10)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (5 samples, 0.02%)</title><rect x="1.0480%" y="2181" width="0.0239%" height="15" fill="rgb(208,32,45)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.0480%" y="2165" width="0.0239%" height="15" fill="rgb(207,135,9)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (5 samples, 0.02%)</title><rect x="1.0480%" y="2149" width="0.0239%" height="15" fill="rgb(206,86,44)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (5 samples, 0.02%)</title><rect x="1.0480%" y="2133" width="0.0239%" height="15" fill="rgb(245,177,15)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.0480%" y="2117" width="0.0239%" height="15" fill="rgb(206,64,50)" fg:x="219" fg:w="5"/><text x="1.2980%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.0719%" y="2229" width="0.0144%" height="15" fill="rgb(234,36,40)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.0719%" y="2213" width="0.0144%" height="15" fill="rgb(213,64,8)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, swc_common::syntax_pos::BytePos, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.0719%" y="2197" width="0.0144%" height="15" fill="rgb(210,75,36)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure_env$0 (3 samples, 0.01%)</title><rect x="1.0719%" y="2181" width="0.0144%" height="15" fill="rgb(229,88,21)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_class_inner::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="1.0719%" y="2165" width="0.0144%" height="15" fill="rgb(252,204,47)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_class_body&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.0719%" y="2149" width="0.0144%" height="15" fill="rgb(208,77,27)" fg:x="224" fg:w="3"/><text x="1.3219%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.0863%" y="2005" width="0.0144%" height="15" fill="rgb(221,76,26)" fg:x="227" fg:w="3"/><text x="1.3363%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.0863%" y="1989" width="0.0144%" height="15" fill="rgb(225,139,18)" fg:x="227" fg:w="3"/><text x="1.3363%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.0863%" y="1973" width="0.0144%" height="15" fill="rgb(230,137,11)" fg:x="227" fg:w="3"/><text x="1.3363%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_for_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1557" width="0.0191%" height="15" fill="rgb(212,28,1)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1541" width="0.0191%" height="15" fill="rgb(248,164,17)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1525" width="0.0191%" height="15" fill="rgb(222,171,42)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (4 samples, 0.02%)</title><rect x="1.1006%" y="1509" width="0.0191%" height="15" fill="rgb(243,84,45)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1493" width="0.0191%" height="15" fill="rgb(252,49,23)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (4 samples, 0.02%)</title><rect x="1.1006%" y="1477" width="0.0191%" height="15" fill="rgb(215,19,7)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1461" width="0.0191%" height="15" fill="rgb(238,81,41)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (4 samples, 0.02%)</title><rect x="1.1006%" y="1445" width="0.0191%" height="15" fill="rgb(210,199,37)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1006%" y="1429" width="0.0191%" height="15" fill="rgb(244,192,49)" fg:x="230" fg:w="4"/><text x="1.3506%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1054%" y="1413" width="0.0144%" height="15" fill="rgb(226,211,11)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_parser::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.1054%" y="1397" width="0.0144%" height="15" fill="rgb(236,162,54)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1407.50"></text></g><g><title>deno.exe`stacker::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.1054%" y="1381" width="0.0144%" height="15" fill="rgb(220,229,9)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.1054%" y="1365" width="0.0144%" height="15" fill="rgb(250,87,22)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1054%" y="1349" width="0.0144%" height="15" fill="rgb(239,43,17)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.1054%" y="1333" width="0.0144%" height="15" fill="rgb(231,177,25)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.1054%" y="1317" width="0.0144%" height="15" fill="rgb(219,179,1)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1054%" y="1301" width="0.0144%" height="15" fill="rgb(238,219,53)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (3 samples, 0.01%)</title><rect x="1.1054%" y="1285" width="0.0144%" height="15" fill="rgb(232,167,36)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.1054%" y="1269" width="0.0144%" height="15" fill="rgb(244,19,51)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.1054%" y="1253" width="0.0144%" height="15" fill="rgb(224,6,22)" fg:x="231" fg:w="3"/><text x="1.3554%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.1006%" y="1781" width="0.0239%" height="15" fill="rgb(224,145,5)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.1006%" y="1765" width="0.0239%" height="15" fill="rgb(234,130,49)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.1006%" y="1749" width="0.0239%" height="15" fill="rgb(254,6,2)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (5 samples, 0.02%)</title><rect x="1.1006%" y="1733" width="0.0239%" height="15" fill="rgb(208,96,46)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.1006%" y="1717" width="0.0239%" height="15" fill="rgb(239,3,39)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (5 samples, 0.02%)</title><rect x="1.1006%" y="1701" width="0.0239%" height="15" fill="rgb(233,210,1)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (5 samples, 0.02%)</title><rect x="1.1006%" y="1685" width="0.0239%" height="15" fill="rgb(244,137,37)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.1006%" y="1669" width="0.0239%" height="15" fill="rgb(240,136,2)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="1.1006%" y="1653" width="0.0239%" height="15" fill="rgb(239,18,37)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.1006%" y="1637" width="0.0239%" height="15" fill="rgb(218,185,22)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.1006%" y="1621" width="0.0239%" height="15" fill="rgb(225,218,4)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (5 samples, 0.02%)</title><rect x="1.1006%" y="1605" width="0.0239%" height="15" fill="rgb(230,182,32)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (5 samples, 0.02%)</title><rect x="1.1006%" y="1589" width="0.0239%" height="15" fill="rgb(242,56,43)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="1.1006%" y="1573" width="0.0239%" height="15" fill="rgb(233,99,24)" fg:x="230" fg:w="5"/><text x="1.3506%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1246%" y="1781" width="0.0191%" height="15" fill="rgb(234,209,42)" fg:x="235" fg:w="4"/><text x="1.3746%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (15 samples, 0.07%)</title><rect x="1.1006%" y="1877" width="0.0718%" height="15" fill="rgb(227,7,12)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (15 samples, 0.07%)</title><rect x="1.1006%" y="1861" width="0.0718%" height="15" fill="rgb(245,203,43)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (15 samples, 0.07%)</title><rect x="1.1006%" y="1845" width="0.0718%" height="15" fill="rgb(238,205,33)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (15 samples, 0.07%)</title><rect x="1.1006%" y="1829" width="0.0718%" height="15" fill="rgb(231,56,7)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (15 samples, 0.07%)</title><rect x="1.1006%" y="1813" width="0.0718%" height="15" fill="rgb(244,186,29)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (15 samples, 0.07%)</title><rect x="1.1006%" y="1797" width="0.0718%" height="15" fill="rgb(234,111,31)" fg:x="230" fg:w="15"/><text x="1.3506%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_while_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1581%" y="1781" width="0.0144%" height="15" fill="rgb(241,149,10)" fg:x="242" fg:w="3"/><text x="1.4081%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (16 samples, 0.08%)</title><rect x="1.1006%" y="2005" width="0.0766%" height="15" fill="rgb(249,206,44)" fg:x="230" fg:w="16"/><text x="1.3506%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (16 samples, 0.08%)</title><rect x="1.1006%" y="1989" width="0.0766%" height="15" fill="rgb(251,153,30)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (16 samples, 0.08%)</title><rect x="1.1006%" y="1973" width="0.0766%" height="15" fill="rgb(239,152,38)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (16 samples, 0.08%)</title><rect x="1.1006%" y="1957" width="0.0766%" height="15" fill="rgb(249,139,47)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (16 samples, 0.08%)</title><rect x="1.1006%" y="1941" width="0.0766%" height="15" fill="rgb(244,64,35)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (16 samples, 0.08%)</title><rect x="1.1006%" y="1925" width="0.0766%" height="15" fill="rgb(216,46,15)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (16 samples, 0.08%)</title><rect x="1.1006%" y="1909" width="0.0766%" height="15" fill="rgb(250,74,19)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (16 samples, 0.08%)</title><rect x="1.1006%" y="1893" width="0.0766%" height="15" fill="rgb(249,42,33)" fg:x="230" fg:w="16"/><text x="1.3506%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_for_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1772%" y="2005" width="0.0144%" height="15" fill="rgb(242,149,17)" fg:x="246" fg:w="3"/><text x="1.4272%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1772%" y="1989" width="0.0144%" height="15" fill="rgb(244,29,21)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.1772%" y="1973" width="0.0144%" height="15" fill="rgb(220,130,37)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.1772%" y="1957" width="0.0144%" height="15" fill="rgb(211,67,2)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1772%" y="1941" width="0.0144%" height="15" fill="rgb(235,68,52)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (3 samples, 0.01%)</title><rect x="1.1772%" y="1925" width="0.0144%" height="15" fill="rgb(246,142,3)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.1772%" y="1909" width="0.0144%" height="15" fill="rgb(241,25,7)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.1772%" y="1893" width="0.0144%" height="15" fill="rgb(242,119,39)" fg:x="246" fg:w="3"/><text x="1.4272%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1829" width="0.0191%" height="15" fill="rgb(241,98,45)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1813" width="0.0191%" height="15" fill="rgb(254,28,30)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1797" width="0.0191%" height="15" fill="rgb(241,142,54)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::finish_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, enum2$ (4 samples, 0.02%)</title><rect x="1.1916%" y="1781" width="0.0191%" height="15" fill="rgb(222,85,15)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1765" width="0.0191%" height="15" fill="rgb(210,85,47)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1749" width="0.0191%" height="15" fill="rgb(224,206,25)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1733" width="0.0191%" height="15" fill="rgb(243,201,19)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1717" width="0.0191%" height="15" fill="rgb(236,59,4)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1701" width="0.0191%" height="15" fill="rgb(254,179,45)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1685" width="0.0191%" height="15" fill="rgb(226,14,10)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1669" width="0.0191%" height="15" fill="rgb(244,27,41)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1653" width="0.0191%" height="15" fill="rgb(235,35,32)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1637" width="0.0191%" height="15" fill="rgb(218,68,31)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_primary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1621" width="0.0191%" height="15" fill="rgb(207,120,37)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_tpl&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1605" width="0.0191%" height="15" fill="rgb(227,98,0)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_tpl_elements&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.1916%" y="1589" width="0.0191%" height="15" fill="rgb(207,7,3)" fg:x="249" fg:w="4"/><text x="1.4416%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_tpl_element&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1963%" y="1573" width="0.0144%" height="15" fill="rgb(206,98,19)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::cur_pos&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1963%" y="1557" width="0.0144%" height="15" fill="rgb(217,5,26)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::cur&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1963%" y="1541" width="0.0144%" height="15" fill="rgb(235,190,38)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::bump_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.1963%" y="1525" width="0.0144%" height="15" fill="rgb(247,86,24)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1535.50"></text></g><g><title>deno.exe`enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;::or_else&lt;swc_ecma_parser::token::TokenAndSpan,swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;, swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (3 samples, 0.01%)</title><rect x="1.1963%" y="1509" width="0.0144%" height="15" fill="rgb(205,101,16)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::impl$8::bump_inner::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (3 samples, 0.01%)</title><rect x="1.1963%" y="1493" width="0.0144%" height="15" fill="rgb(246,168,33)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next (3 samples, 0.01%)</title><rect x="1.1963%" y="1477" width="0.0144%" height="15" fill="rgb(231,114,1)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next::closure$0 (3 samples, 0.01%)</title><rect x="1.1963%" y="1461" width="0.0144%" height="15" fill="rgb(207,184,53)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::read_tmpl_token (3 samples, 0.01%)</title><rect x="1.1963%" y="1445" width="0.0144%" height="15" fill="rgb(224,95,51)" fg:x="250" fg:w="3"/><text x="1.4463%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.2107%" y="1829" width="0.0191%" height="15" fill="rgb(212,188,45)" fg:x="253" fg:w="4"/><text x="1.4607%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.1916%" y="1989" width="0.0479%" height="15" fill="rgb(223,154,38)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1999.50"></text></g><g><title>deno.exe`stacker::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.1916%" y="1973" width="0.0479%" height="15" fill="rgb(251,22,52)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.1916%" y="1957" width="0.0479%" height="15" fill="rgb(229,209,22)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (10 samples, 0.05%)</title><rect x="1.1916%" y="1941" width="0.0479%" height="15" fill="rgb(234,138,34)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (10 samples, 0.05%)</title><rect x="1.1916%" y="1925" width="0.0479%" height="15" fill="rgb(212,95,11)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="1.1916%" y="1909" width="0.0479%" height="15" fill="rgb(240,179,47)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (10 samples, 0.05%)</title><rect x="1.1916%" y="1893" width="0.0479%" height="15" fill="rgb(240,163,11)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (10 samples, 0.05%)</title><rect x="1.1916%" y="1877" width="0.0479%" height="15" fill="rgb(236,37,12)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (10 samples, 0.05%)</title><rect x="1.1916%" y="1861" width="0.0479%" height="15" fill="rgb(232,164,16)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="1.1916%" y="1845" width="0.0479%" height="15" fill="rgb(244,205,15)" fg:x="249" fg:w="10"/><text x="1.4416%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$2 (3 samples, 0.01%)</title><rect x="1.2394%" y="1989" width="0.0144%" height="15" fill="rgb(223,117,47)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1999.50"></text></g><g><title>deno.exe`stacker::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$2 (3 samples, 0.01%)</title><rect x="1.2394%" y="1973" width="0.0144%" height="15" fill="rgb(244,107,35)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure$2&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$2 (3 samples, 0.01%)</title><rect x="1.2394%" y="1957" width="0.0144%" height="15" fill="rgb(205,140,8)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2394%" y="1941" width="0.0144%" height="15" fill="rgb(228,84,46)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.2394%" y="1925" width="0.0144%" height="15" fill="rgb(254,188,9)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.2394%" y="1909" width="0.0144%" height="15" fill="rgb(206,112,54)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2394%" y="1893" width="0.0144%" height="15" fill="rgb(216,84,49)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (3 samples, 0.01%)</title><rect x="1.2394%" y="1877" width="0.0144%" height="15" fill="rgb(214,194,35)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.2394%" y="1861" width="0.0144%" height="15" fill="rgb(249,28,3)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.2394%" y="1845" width="0.0144%" height="15" fill="rgb(222,56,52)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2394%" y="1829" width="0.0144%" height="15" fill="rgb(245,217,50)" fg:x="259" fg:w="3"/><text x="1.4894%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (15 samples, 0.07%)</title><rect x="1.1916%" y="2005" width="0.0718%" height="15" fill="rgb(213,201,24)" fg:x="249" fg:w="15"/><text x="1.4416%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr_or_spread&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1637" width="0.0144%" height="15" fill="rgb(248,116,28)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1621" width="0.0144%" height="15" fill="rgb(219,72,43)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1605" width="0.0144%" height="15" fill="rgb(209,138,14)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1589" width="0.0144%" height="15" fill="rgb(222,18,33)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1573" width="0.0144%" height="15" fill="rgb(213,199,7)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1557" width="0.0144%" height="15" fill="rgb(250,110,10)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1541" width="0.0144%" height="15" fill="rgb(248,123,6)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1525" width="0.0144%" height="15" fill="rgb(206,91,31)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1509" width="0.0144%" height="15" fill="rgb(211,154,13)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1493" width="0.0144%" height="15" fill="rgb(225,148,7)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_primary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1477" width="0.0144%" height="15" fill="rgb(220,160,43)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_array_lit&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2633%" y="1461" width="0.0144%" height="15" fill="rgb(213,52,39)" fg:x="264" fg:w="3"/><text x="1.5133%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.2633%" y="1685" width="0.0191%" height="15" fill="rgb(243,137,7)" fg:x="264" fg:w="4"/><text x="1.5133%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0 (4 samples, 0.02%)</title><rect x="1.2633%" y="1669" width="0.0191%" height="15" fill="rgb(230,79,13)" fg:x="264" fg:w="4"/><text x="1.5133%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::expr::impl$0::parse_args::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (4 samples, 0.02%)</title><rect x="1.2633%" y="1653" width="0.0191%" height="15" fill="rgb(247,105,23)" fg:x="264" fg:w="4"/><text x="1.5133%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1845" width="0.0239%" height="15" fill="rgb(223,179,41)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0 (5 samples, 0.02%)</title><rect x="1.2633%" y="1829" width="0.0239%" height="15" fill="rgb(218,9,34)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::expr::impl$0::parse_args::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::expr::impl$0::parse_args::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.2633%" y="1813" width="0.0239%" height="15" fill="rgb(222,106,8)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr_or_spread&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1797" width="0.0239%" height="15" fill="rgb(211,220,0)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1781" width="0.0239%" height="15" fill="rgb(229,52,16)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1765" width="0.0239%" height="15" fill="rgb(212,155,18)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1749" width="0.0239%" height="15" fill="rgb(242,21,14)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1733" width="0.0239%" height="15" fill="rgb(222,19,48)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1717" width="0.0239%" height="15" fill="rgb(232,45,27)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.2633%" y="1701" width="0.0239%" height="15" fill="rgb(249,103,42)" fg:x="264" fg:w="5"/><text x="1.5133%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_parser::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.2968%" y="1141" width="0.0144%" height="15" fill="rgb(246,81,33)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1151.50"></text></g><g><title>deno.exe`stacker::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.2968%" y="1125" width="0.0144%" height="15" fill="rgb(252,33,42)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1135.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (3 samples, 0.01%)</title><rect x="1.2968%" y="1109" width="0.0144%" height="15" fill="rgb(209,212,41)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1119.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2968%" y="1093" width="0.0144%" height="15" fill="rgb(207,154,6)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1103.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.2968%" y="1077" width="0.0144%" height="15" fill="rgb(223,64,47)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1087.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.2968%" y="1061" width="0.0144%" height="15" fill="rgb(211,161,38)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1071.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.2968%" y="1045" width="0.0144%" height="15" fill="rgb(219,138,40)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1055.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (3 samples, 0.01%)</title><rect x="1.2968%" y="1029" width="0.0144%" height="15" fill="rgb(241,228,46)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1039.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (3 samples, 0.01%)</title><rect x="1.2968%" y="1013" width="0.0144%" height="15" fill="rgb(223,209,38)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1023.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="1.2968%" y="997" width="0.0144%" height="15" fill="rgb(236,164,45)" fg:x="271" fg:w="3"/><text x="1.5468%" y="1007.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (6 samples, 0.03%)</title><rect x="1.2968%" y="1157" width="0.0287%" height="15" fill="rgb(231,15,5)" fg:x="271" fg:w="6"/><text x="1.5468%" y="1167.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3112%" y="1141" width="0.0144%" height="15" fill="rgb(252,35,15)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1151.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3112%" y="1125" width="0.0144%" height="15" fill="rgb(248,181,18)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1135.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3112%" y="1109" width="0.0144%" height="15" fill="rgb(233,39,42)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1119.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3112%" y="1093" width="0.0144%" height="15" fill="rgb(238,110,33)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1103.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3112%" y="1077" width="0.0144%" height="15" fill="rgb(233,195,10)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1087.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_op_recursively&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$ (3 samples, 0.01%)</title><rect x="1.3112%" y="1061" width="0.0144%" height="15" fill="rgb(254,105,3)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1071.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_op_recursively_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$ (3 samples, 0.01%)</title><rect x="1.3112%" y="1045" width="0.0144%" height="15" fill="rgb(221,225,9)" fg:x="274" fg:w="3"/><text x="1.5612%" y="1055.50"></text></g><g><title>deno.exe`swc_ecma_parser::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.2921%" y="1317" width="0.0479%" height="15" fill="rgb(224,227,45)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1327.50"></text></g><g><title>deno.exe`stacker::maybe_grow(unsigned long long, unsigned long long, swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.2921%" y="1301" width="0.0479%" height="15" fill="rgb(229,198,43)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_if_stmt::closure_env$1 (10 samples, 0.05%)</title><rect x="1.2921%" y="1285" width="0.0479%" height="15" fill="rgb(206,209,35)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (10 samples, 0.05%)</title><rect x="1.2921%" y="1269" width="0.0479%" height="15" fill="rgb(245,195,53)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (10 samples, 0.05%)</title><rect x="1.2921%" y="1253" width="0.0479%" height="15" fill="rgb(240,92,26)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="1.2921%" y="1237" width="0.0479%" height="15" fill="rgb(207,40,23)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (10 samples, 0.05%)</title><rect x="1.2921%" y="1221" width="0.0479%" height="15" fill="rgb(223,111,35)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (10 samples, 0.05%)</title><rect x="1.2921%" y="1205" width="0.0479%" height="15" fill="rgb(229,147,28)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (10 samples, 0.05%)</title><rect x="1.2921%" y="1189" width="0.0479%" height="15" fill="rgb(211,29,28)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="1.2921%" y="1173" width="0.0479%" height="15" fill="rgb(228,72,33)" fg:x="270" fg:w="10"/><text x="1.5421%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1957" width="0.0814%" height="15" fill="rgb(205,214,31)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1941" width="0.0814%" height="15" fill="rgb(224,111,15)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1925" width="0.0814%" height="15" fill="rgb(253,21,26)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1909" width="0.0814%" height="15" fill="rgb(245,139,43)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1893" width="0.0814%" height="15" fill="rgb(252,170,7)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1877" width="0.0814%" height="15" fill="rgb(231,118,14)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (17 samples, 0.08%)</title><rect x="1.2633%" y="1861" width="0.0814%" height="15" fill="rgb(238,83,0)" fg:x="264" fg:w="17"/><text x="1.5133%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (12 samples, 0.06%)</title><rect x="1.2873%" y="1845" width="0.0574%" height="15" fill="rgb(221,39,39)" fg:x="269" fg:w="12"/><text x="1.5373%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (12 samples, 0.06%)</title><rect x="1.2873%" y="1829" width="0.0574%" height="15" fill="rgb(222,119,46)" fg:x="269" fg:w="12"/><text x="1.5373%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (12 samples, 0.06%)</title><rect x="1.2873%" y="1813" width="0.0574%" height="15" fill="rgb(222,165,49)" fg:x="269" fg:w="12"/><text x="1.5373%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_primary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (12 samples, 0.06%)</title><rect x="1.2873%" y="1797" width="0.0574%" height="15" fill="rgb(219,113,52)" fg:x="269" fg:w="12"/><text x="1.5373%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_paren_expr_or_arrow_fn&lt;swc_ecma_parser::lexer::Lexer&gt;(bool, enum2$&lt;core::option::Option (11 samples, 0.05%)</title><rect x="1.2921%" y="1781" width="0.0526%" height="15" fill="rgb(214,7,15)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args_or_pats&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1765" width="0.0526%" height="15" fill="rgb(235,32,4)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_args_or_pats_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1749" width="0.0526%" height="15" fill="rgb(238,90,54)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr_or_spread&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1733" width="0.0526%" height="15" fill="rgb(213,208,19)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1717" width="0.0526%" height="15" fill="rgb(233,156,4)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1701" width="0.0526%" height="15" fill="rgb(207,194,5)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1685" width="0.0526%" height="15" fill="rgb(206,111,30)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1669" width="0.0526%" height="15" fill="rgb(243,70,54)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1653" width="0.0526%" height="15" fill="rgb(242,28,8)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1637" width="0.0526%" height="15" fill="rgb(219,106,18)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1621" width="0.0526%" height="15" fill="rgb(244,222,10)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1605" width="0.0526%" height="15" fill="rgb(236,179,52)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1589" width="0.0526%" height="15" fill="rgb(213,23,39)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_primary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1573" width="0.0526%" height="15" fill="rgb(238,48,10)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1557" width="0.0526%" height="15" fill="rgb(251,196,23)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="1.2921%" y="1541" width="0.0526%" height="15" fill="rgb(250,152,24)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="1.2921%" y="1525" width="0.0526%" height="15" fill="rgb(209,150,17)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (11 samples, 0.05%)</title><rect x="1.2921%" y="1509" width="0.0526%" height="15" fill="rgb(234,202,34)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (11 samples, 0.05%)</title><rect x="1.2921%" y="1493" width="0.0526%" height="15" fill="rgb(253,148,53)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (11 samples, 0.05%)</title><rect x="1.2921%" y="1477" width="0.0526%" height="15" fill="rgb(218,129,16)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (11 samples, 0.05%)</title><rect x="1.2921%" y="1461" width="0.0526%" height="15" fill="rgb(216,85,19)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (11 samples, 0.05%)</title><rect x="1.2921%" y="1445" width="0.0526%" height="15" fill="rgb(235,228,7)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1429" width="0.0526%" height="15" fill="rgb(245,175,0)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (11 samples, 0.05%)</title><rect x="1.2921%" y="1413" width="0.0526%" height="15" fill="rgb(208,168,36)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1397" width="0.0526%" height="15" fill="rgb(246,171,24)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (11 samples, 0.05%)</title><rect x="1.2921%" y="1381" width="0.0526%" height="15" fill="rgb(215,142,24)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1365" width="0.0526%" height="15" fill="rgb(250,187,7)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="1.2921%" y="1349" width="0.0526%" height="15" fill="rgb(228,66,33)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_if_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.2921%" y="1333" width="0.0526%" height="15" fill="rgb(234,215,21)" fg:x="270" fg:w="11"/><text x="1.5421%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_return_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (18 samples, 0.09%)</title><rect x="1.2633%" y="2005" width="0.0861%" height="15" fill="rgb(222,191,20)" fg:x="264" fg:w="18"/><text x="1.5133%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure_env$0 (18 samples, 0.09%)</title><rect x="1.2633%" y="1989" width="0.0861%" height="15" fill="rgb(245,79,54)" fg:x="264" fg:w="18"/><text x="1.5133%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::stmt::impl$0::parse_return_stmt::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (18 samples, 0.09%)</title><rect x="1.2633%" y="1973" width="0.0861%" height="15" fill="rgb(240,10,37)" fg:x="264" fg:w="18"/><text x="1.5133%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_try_stmt&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.3543%" y="2005" width="0.0239%" height="15" fill="rgb(214,192,32)" fg:x="283" fg:w="5"/><text x="1.6043%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_catch_clause&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.3638%" y="1989" width="0.0144%" height="15" fill="rgb(209,36,54)" fg:x="285" fg:w="3"/><text x="1.6138%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt; (66 samples, 0.32%)</title><rect x="1.0863%" y="2037" width="0.3158%" height="15" fill="rgb(220,10,11)" fg:x="227" fg:w="66"/><text x="1.3363%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_internal&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_common::syntax_pos::BytePos, bool, bool, alloc::vec::Vec (66 samples, 0.32%)</title><rect x="1.0863%" y="2021" width="0.3158%" height="15" fill="rgb(221,106,17)" fg:x="227" fg:w="66"/><text x="1.3363%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$8::parse_fn_body_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser (67 samples, 0.32%)</title><rect x="1.0863%" y="2085" width="0.3206%" height="15" fill="rgb(251,142,44)" fg:x="227" fg:w="67"/><text x="1.3363%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block&lt;swc_ecma_parser::lexer::Lexer&gt; (67 samples, 0.32%)</title><rect x="1.0863%" y="2069" width="0.3206%" height="15" fill="rgb(238,13,15)" fg:x="227" fg:w="67"/><text x="1.3363%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (67 samples, 0.32%)</title><rect x="1.0863%" y="2053" width="0.3206%" height="15" fill="rgb(208,107,27)" fg:x="227" fg:w="67"/><text x="1.3363%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;core::option::Option&lt;swc_ecma_ast::stmt::BlockStmt&gt; &gt; &gt; (69 samples, 0.33%)</title><rect x="1.0863%" y="2101" width="0.3302%" height="15" fill="rgb(205,136,37)" fg:x="227" fg:w="69"/><text x="1.3363%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::cur_pos&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.4260%" y="2053" width="0.0144%" height="15" fill="rgb(250,205,27)" fg:x="298" fg:w="3"/><text x="1.6760%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::cur&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.4260%" y="2037" width="0.0144%" height="15" fill="rgb(210,80,43)" fg:x="298" fg:w="3"/><text x="1.6760%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::bump_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="1.4260%" y="2021" width="0.0144%" height="15" fill="rgb(247,160,36)" fg:x="298" fg:w="3"/><text x="1.6760%" y="2031.50"></text></g><g><title>deno.exe`enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;::or_else&lt;swc_ecma_parser::token::TokenAndSpan,swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;, swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (3 samples, 0.01%)</title><rect x="1.4260%" y="2005" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="298" fg:w="3"/><text x="1.6760%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::impl$8::bump_inner::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (3 samples, 0.01%)</title><rect x="1.4260%" y="1989" width="0.0144%" height="15" fill="rgb(234,122,0)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next (3 samples, 0.01%)</title><rect x="1.4260%" y="1973" width="0.0144%" height="15" fill="rgb(207,146,38)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next::closure$0 (3 samples, 0.01%)</title><rect x="1.4260%" y="1957" width="0.0144%" height="15" fill="rgb(207,177,25)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::read_token (3 samples, 0.01%)</title><rect x="1.4260%" y="1941" width="0.0144%" height="15" fill="rgb(211,178,42)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1951.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;swc_ecma_parser::lexer::table::IDT::closure_env$0,tuple$&lt;ref_mut$&lt;swc_ecma_parser::lexer::Lexer&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1.4260%" y="1925" width="0.0144%" height="15" fill="rgb(230,69,54)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::table::IDT::closure$0 (3 samples, 0.01%)</title><rect x="1.4260%" y="1909" width="0.0144%" height="15" fill="rgb(214,135,41)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::read_ident_or_keyword (3 samples, 0.01%)</title><rect x="1.4260%" y="1893" width="0.0144%" height="15" fill="rgb(237,67,25)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::read_word_as_str_with&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$&lt;swc_ecma_parser::token::Word&gt; &gt; (3 samples, 0.01%)</title><rect x="1.4260%" y="1877" width="0.0144%" height="15" fill="rgb(222,189,50)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::with_buf&lt;swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$&lt;swc_ecma_parser::token::Word&gt; &gt;,tuple$&lt;enum2$&lt;swc_ecma_parser::token::Word&gt;,bool&gt; &gt;(swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$ (3 samples, 0.01%)</title><rect x="1.4260%" y="1861" width="0.0144%" height="15" fill="rgb(245,148,34)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$&lt;swc_ecma_parser::token::Word&gt; &gt;(swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$ (3 samples, 0.01%)</title><rect x="1.4260%" y="1845" width="0.0144%" height="15" fill="rgb(222,29,6)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1855.50"></text></g><g><title>deno.exe`swc_common::input::impl$2::uncons_while&lt;swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure$0::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$&lt;swc_ecma_parser::token::Word&gt; &gt; &gt;(swc_common::input::StringInput*, swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure$0::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$ (3 samples, 0.01%)</title><rect x="1.4260%" y="1829" width="0.0144%" height="15" fill="rgb(221,189,43)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure$0::closure$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$&lt;swc_ecma_parser::token::Word&gt; &gt;(swc_ecma_parser::lexer::impl$7::read_word_as_str_with::closure$0::closure_env$0&lt;swc_ecma_parser::lexer::impl$7::read_ident_or_keyword::closure_env$0,enum2$ (3 samples, 0.01%)</title><rect x="1.4260%" y="1813" width="0.0144%" height="15" fill="rgb(207,36,27)" fg:x="298" fg:w="3"/><text x="1.6760%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_ts_type_or_type_predicate_ann&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$ (6 samples, 0.03%)</title><rect x="1.4165%" y="2101" width="0.0287%" height="15" fill="rgb(217,90,24)" fg:x="296" fg:w="6"/><text x="1.6665%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_or_type_predicate_ann::closure_env$0 (6 samples, 0.03%)</title><rect x="1.4165%" y="2085" width="0.0287%" height="15" fill="rgb(224,66,35)" fg:x="296" fg:w="6"/><text x="1.6665%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_or_type_predicate_ann::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_or_type_predicate_ann::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (6 samples, 0.03%)</title><rect x="1.4165%" y="2069" width="0.0287%" height="15" fill="rgb(221,13,50)" fg:x="296" fg:w="6"/><text x="1.6665%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type::closure_env$0 (3 samples, 0.01%)</title><rect x="1.4595%" y="1941" width="0.0144%" height="15" fill="rgb(236,68,49)" fg:x="305" fg:w="3"/><text x="1.7095%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::typescript::impl$0::parse_ts_type::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="1.4595%" y="1925" width="0.0144%" height="15" fill="rgb(229,146,28)" fg:x="305" fg:w="3"/><text x="1.7095%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_ts_type_ann&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.4595%" y="2005" width="0.0239%" height="15" fill="rgb(225,31,38)" fg:x="305" fg:w="5"/><text x="1.7095%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_ann::closure_env$0 (5 samples, 0.02%)</title><rect x="1.4595%" y="1989" width="0.0239%" height="15" fill="rgb(250,208,3)" fg:x="305" fg:w="5"/><text x="1.7095%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_ann::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::typescript::impl$0::parse_ts_type_ann::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (5 samples, 0.02%)</title><rect x="1.4595%" y="1973" width="0.0239%" height="15" fill="rgb(246,54,23)" fg:x="305" fg:w="5"/><text x="1.7095%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_ts_type&lt;swc_ecma_parser::lexer::Lexer&gt; (5 samples, 0.02%)</title><rect x="1.4595%" y="1957" width="0.0239%" height="15" fill="rgb(243,76,11)" fg:x="305" fg:w="5"/><text x="1.7095%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_formal_param_pat&lt;swc_ecma_parser::lexer::Lexer&gt; (6 samples, 0.03%)</title><rect x="1.4595%" y="2037" width="0.0287%" height="15" fill="rgb(245,21,50)" fg:x="305" fg:w="6"/><text x="1.7095%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::try_parse_ts_type_ann&lt;swc_ecma_parser::lexer::Lexer&gt; (6 samples, 0.03%)</title><rect x="1.4595%" y="2021" width="0.0287%" height="15" fill="rgb(228,9,43)" fg:x="305" fg:w="6"/><text x="1.7095%" y="2031.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0::closure_env$1&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (8 samples, 0.04%)</title><rect x="1.4548%" y="2101" width="0.0383%" height="15" fill="rgb(208,100,47)" fg:x="304" fg:w="8"/><text x="1.7048%" y="2111.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0::closure$1&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0::closure_env$1&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (8 samples, 0.04%)</title><rect x="1.4548%" y="2085" width="0.0383%" height="15" fill="rgb(232,26,8)" fg:x="304" fg:w="8"/><text x="1.7048%" y="2095.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (8 samples, 0.04%)</title><rect x="1.4548%" y="2069" width="0.0383%" height="15" fill="rgb(216,166,38)" fg:x="304" fg:w="8"/><text x="1.7048%" y="2079.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_formal_params&lt;swc_ecma_parser::lexer::Lexer&gt; (8 samples, 0.04%)</title><rect x="1.4548%" y="2053" width="0.0383%" height="15" fill="rgb(251,202,51)" fg:x="304" fg:w="8"/><text x="1.7048%" y="2063.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_decl&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (86 samples, 0.41%)</title><rect x="1.0863%" y="2229" width="0.4115%" height="15" fill="rgb(254,216,34)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::decl::Decl&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (86 samples, 0.41%)</title><rect x="1.0863%" y="2213" width="0.4115%" height="15" fill="rgb(251,32,27)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_inner&lt;swc_ecma_parser::lexer::Lexer&gt;(enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, enum2$&lt;core::option::Option&lt;swc_common::syntax_pos::BytePos&gt; &gt;, alloc::vec::Vec (86 samples, 0.41%)</title><rect x="1.0863%" y="2197" width="0.4115%" height="15" fill="rgb(208,127,28)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1 (86 samples, 0.41%)</title><rect x="1.0863%" y="2181" width="0.4115%" height="15" fill="rgb(224,137,22)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure_env$1&lt;swc_ecma_parser::lexer::Lexer&gt;, swc_ecma_parser::parser::Parser (86 samples, 0.41%)</title><rect x="1.0863%" y="2165" width="0.4115%" height="15" fill="rgb(254,70,32)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_fn_args_body&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(alloc::vec::Vec&lt;swc_ecma_ast::class::Decorator,alloc::alloc::Global&gt;, swc_common::syntax_pos::BytePos, swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (86 samples, 0.41%)</title><rect x="1.0863%" y="2149" width="0.4115%" height="15" fill="rgb(229,75,37)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_with(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0 (86 samples, 0.41%)</title><rect x="1.0863%" y="2133" width="0.4115%" height="15" fill="rgb(252,64,23)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2143.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_args_body::closure_env$0&lt;swc_ecma_parser::lexer::Lexer,swc_ecma_parser::parser::class_and_fn::impl$0::parse_fn_inner::closure$1::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;, swc_ecma_parser::parser::Parser (86 samples, 0.41%)</title><rect x="1.0863%" y="2117" width="0.4115%" height="15" fill="rgb(232,162,48)" fg:x="227" fg:w="86"/><text x="1.3363%" y="2127.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_export&lt;swc_ecma_parser::lexer::Lexer&gt;(alloc::vec::Vec (96 samples, 0.46%)</title><rect x="1.0432%" y="2245" width="0.4594%" height="15" fill="rgb(246,160,12)" fg:x="218" fg:w="96"/><text x="1.2932%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_stmt_like&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt; (138 samples, 0.66%)</title><rect x="0.8614%" y="2277" width="0.6604%" height="15" fill="rgb(247,166,0)" fg:x="180" fg:w="138"/><text x="1.1114%" y="2287.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::stmt::module_item::impl$2::handle_import_export&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;*, bool, alloc::vec::Vec (100 samples, 0.48%)</title><rect x="1.0432%" y="2261" width="0.4785%" height="15" fill="rgb(249,219,21)" fg:x="218" fg:w="100"/><text x="1.2932%" y="2271.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_import&lt;swc_ecma_parser::lexer::Lexer&gt; (4 samples, 0.02%)</title><rect x="1.5026%" y="2245" width="0.0191%" height="15" fill="rgb(205,209,3)" fg:x="314" fg:w="4"/><text x="1.7526%" y="2255.50"></text></g><g><title>deno.exe`swc_atoms::AtomGenerator::intern&lt;ref$&lt;str$&gt; &gt;(ref$ (3 samples, 0.01%)</title><rect x="1.5361%" y="2149" width="0.0144%" height="15" fill="rgb(243,44,1)" fg:x="321" fg:w="3"/><text x="1.7861%" y="2159.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::skip_block_comment (5 samples, 0.02%)</title><rect x="1.5361%" y="2165" width="0.0239%" height="15" fill="rgb(206,159,16)" fg:x="321" fg:w="5"/><text x="1.7861%" y="2175.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::Lexer::skip_space&lt;true&gt; (7 samples, 0.03%)</title><rect x="1.5361%" y="2181" width="0.0335%" height="15" fill="rgb(244,77,30)" fg:x="321" fg:w="7"/><text x="1.7861%" y="2191.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::cur&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.5217%" y="2277" width="0.0526%" height="15" fill="rgb(218,69,12)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2287.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::Buffer&lt;swc_ecma_parser::lexer::Lexer&gt;::bump_inner&lt;swc_ecma_parser::lexer::Lexer&gt; (11 samples, 0.05%)</title><rect x="1.5217%" y="2261" width="0.0526%" height="15" fill="rgb(212,87,7)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2271.50"></text></g><g><title>deno.exe`enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;::or_else&lt;swc_ecma_parser::token::TokenAndSpan,swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0&lt;swc_ecma_parser::lexer::Lexer&gt; &gt;(enum2$&lt;core::option::Option&lt;swc_ecma_parser::token::TokenAndSpan&gt; &gt;, swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (11 samples, 0.05%)</title><rect x="1.5217%" y="2245" width="0.0526%" height="15" fill="rgb(245,114,25)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2255.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::input::impl$8::bump_inner::closure$0&lt;swc_ecma_parser::lexer::Lexer&gt;(swc_ecma_parser::parser::input::impl$8::bump_inner::closure_env$0 (11 samples, 0.05%)</title><rect x="1.5217%" y="2229" width="0.0526%" height="15" fill="rgb(210,61,42)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2239.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next (11 samples, 0.05%)</title><rect x="1.5217%" y="2213" width="0.0526%" height="15" fill="rgb(211,52,33)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2223.50"></text></g><g><title>deno.exe`swc_ecma_parser::lexer::state::impl$3::next::closure$0 (11 samples, 0.05%)</title><rect x="1.5217%" y="2197" width="0.0526%" height="15" fill="rgb(234,58,33)" fg:x="318" fg:w="11"/><text x="1.7717%" y="2207.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_block_body&lt;swc_ecma_parser::lexer::Lexer,enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;(bool, bool, enum2$&lt;core::option::Option&lt;ref$&lt;enum2$ (150 samples, 0.72%)</title><rect x="0.8614%" y="2293" width="0.7178%" height="15" fill="rgb(220,115,36)" fg:x="180" fg:w="150"/><text x="1.1114%" y="2303.50"></text></g><g><title>deno.exe`deno_ast::parsing::parse_string_input(swc_common::input::StringInput, enum2$ (153 samples, 0.73%)</title><rect x="0.8566%" y="2325" width="0.7322%" height="15" fill="rgb(243,153,54)" fg:x="179" fg:w="153"/><text x="1.1066%" y="2335.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_module&lt;swc_ecma_parser::lexer::Lexer&gt; (152 samples, 0.73%)</title><rect x="0.8614%" y="2309" width="0.7274%" height="15" fill="rgb(251,47,18)" fg:x="180" fg:w="152"/><text x="1.1114%" y="2319.50"></text></g><g><title>deno.exe`deno_ast::parsing::parse_module (155 samples, 0.74%)</title><rect x="0.8518%" y="2357" width="0.7417%" height="15" fill="rgb(242,102,42)" fg:x="178" fg:w="155"/><text x="1.1018%" y="2367.50"></text></g><g><title>deno.exe`deno_ast::parsing::parse&lt;deno_ast::parsing::parse_module::closure_env$0&gt; (155 samples, 0.74%)</title><rect x="0.8518%" y="2341" width="0.7417%" height="15" fill="rgb(234,31,38)" fg:x="178" fg:w="155"/><text x="1.1018%" y="2351.50"></text></g><g><title>deno.exe`deno::cache::parsed_source::impl$3::analyze(deno::cache::parsed_source::ParsedSourceCacheModuleAnalyzer*, url::Url*, alloc::sync::Arc (210 samples, 1.00%)</title><rect x="0.6556%" y="2421" width="1.0049%" height="15" fill="rgb(221,117,51)" fg:x="137" fg:w="210"/><text x="0.9056%" y="2431.50"></text></g><g><title>deno.exe`deno_graph::ast::impl$6::analyze(deno_graph::ast::DefaultModuleAnalyzer*, url::Url*, alloc::sync::Arc (182 samples, 0.87%)</title><rect x="0.7896%" y="2405" width="0.8709%" height="15" fill="rgb(212,20,18)" fg:x="165" fg:w="182"/><text x="1.0396%" y="2415.50"></text></g><g><title>deno.exe`deno_graph::ast::impl$4::parse_module(deno_graph::ast::CapturingModuleParser*, url::Url*, alloc::sync::Arc (169 samples, 0.81%)</title><rect x="0.8518%" y="2389" width="0.8087%" height="15" fill="rgb(245,133,36)" fg:x="178" fg:w="169"/><text x="1.1018%" y="2399.50"></text></g><g><title>deno.exe`deno_graph::ast::impl$1::parse_module(deno_graph::ast::DefaultModuleParser*, url::Url*, alloc::sync::Arc (169 samples, 0.81%)</title><rect x="0.8518%" y="2373" width="0.8087%" height="15" fill="rgb(212,6,19)" fg:x="178" fg:w="169"/><text x="1.1018%" y="2383.50"></text></g><g><title>deno.exe`dprint_swc_ext::common::text_info::SourceTextInfo::new(alloc::sync::Arc (14 samples, 0.07%)</title><rect x="1.5935%" y="2357" width="0.0670%" height="15" fill="rgb(218,1,36)" fg:x="333" fg:w="14"/><text x="1.8435%" y="2367.50"></text></g><g><title>deno.exe`dprint_swc_ext::common::text_info::SourceTextInfo::new_with_pos(dprint_swc_ext::common::pos::SourcePos, alloc::sync::Arc (14 samples, 0.07%)</title><rect x="1.5935%" y="2341" width="0.0670%" height="15" fill="rgb(246,84,54)" fg:x="333" fg:w="14"/><text x="1.8435%" y="2351.50"></text></g><g><title>deno.exe`dprint_swc_ext::common::text_info::SourceTextInfo::new_with_indent_width(dprint_swc_ext::common::pos::SourcePos, alloc::sync::Arc (14 samples, 0.07%)</title><rect x="1.5935%" y="2325" width="0.0670%" height="15" fill="rgb(242,110,6)" fg:x="333" fg:w="14"/><text x="1.8435%" y="2335.50"></text></g><g><title>deno.exe`text_lines::TextLines::with_indent_width(ref$ (14 samples, 0.07%)</title><rect x="1.5935%" y="2309" width="0.0670%" height="15" fill="rgb(214,47,5)" fg:x="333" fg:w="14"/><text x="1.8435%" y="2319.50"></text></g><g><title>deno.exe`core::iter::adapters::enumerate::impl$1::next&lt;core::str::iter::CharIndices&gt;(core::iter::adapters::enumerate::Enumerate (9 samples, 0.04%)</title><rect x="1.6175%" y="2293" width="0.0431%" height="15" fill="rgb(218,159,25)" fg:x="338" fg:w="9"/><text x="1.8675%" y="2303.50"></text></g><g><title>deno.exe`core::str::iter::impl$5::next (5 samples, 0.02%)</title><rect x="1.6366%" y="2277" width="0.0239%" height="15" fill="rgb(215,211,28)" fg:x="342" fg:w="5"/><text x="1.8866%" y="2287.50"></text></g><g><title>deno.exe`core::str::iter::impl$0::next (3 samples, 0.01%)</title><rect x="1.6462%" y="2261" width="0.0144%" height="15" fill="rgb(238,59,32)" fg:x="344" fg:w="3"/><text x="1.8962%" y="2271.50"></text></g><g><title>deno.exe`deno_graph::analyzer::analyze_deno_types (4 samples, 0.02%)</title><rect x="1.6653%" y="2405" width="0.0191%" height="15" fill="rgb(226,82,3)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2415.50"></text></g><g><title>deno.exe`once_cell::sync::impl$12::deref&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;(once_cell::sync::Lazy&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2389" width="0.0191%" height="15" fill="rgb(240,164,32)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2399.50"></text></g><g><title>deno.exe`once_cell::sync::Lazy&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;::force&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; (4 samples, 0.02%)</title><rect x="1.6653%" y="2373" width="0.0191%" height="15" fill="rgb(232,46,7)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2383.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;regex::re_unicode::Regex&gt;::get_or_init&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;(once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2357" width="0.0191%" height="15" fill="rgb(229,129,53)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2367.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;regex::re_unicode::Regex&gt;::get_or_try_init&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2341" width="0.0191%" height="15" fill="rgb(234,188,29)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2351.50"></text></g><g><title>deno.exe`once_cell::imp::OnceCell&lt;regex::re_unicode::Regex&gt;::initialize&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2325" width="0.0191%" height="15" fill="rgb(246,141,4)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2335.50"></text></g><g><title>deno.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (4 samples, 0.02%)</title><rect x="1.6653%" y="2309" width="0.0191%" height="15" fill="rgb(229,23,39)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2319.50"></text></g><g><title>deno.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;&gt;,dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$&lt;Output,bool&gt; &gt; &gt; &gt;(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (4 samples, 0.02%)</title><rect x="1.6653%" y="2293" width="0.0191%" height="15" fill="rgb(206,12,3)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2303.50"></text></g><g><title>deno.exe`once_cell::imp::impl$4::initialize::closure$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;,enum2$ (4 samples, 0.02%)</title><rect x="1.6653%" y="2277" width="0.0191%" height="15" fill="rgb(252,226,20)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2287.50"></text></g><g><title>deno.exe`once_cell::sync::impl$6::get_or_init::closure$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::re_unicode::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2261" width="0.0191%" height="15" fill="rgb(216,123,35)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2271.50"></text></g><g><title>deno.exe`once_cell::sync::impl$11::force::closure$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*)()&gt;(once_cell::sync::impl$11::force::closure_env$0&lt;regex::re_unicode::Regex,regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2245" width="0.0191%" height="15" fill="rgb(212,68,40)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2255.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;regex::re_unicode::Regex (*)(),tuple$&lt;&gt; &gt;(regex::re_unicode::Regex (*) (4 samples, 0.02%)</title><rect x="1.6653%" y="2229" width="0.0191%" height="15" fill="rgb(254,125,32)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2239.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;deno_graph::analyzer::DENO_TYPES_RE::closure_env$0,tuple$&lt;&gt; &gt; (4 samples, 0.02%)</title><rect x="1.6653%" y="2213" width="0.0191%" height="15" fill="rgb(253,97,22)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2223.50"></text></g><g><title>deno.exe`deno_graph::analyzer::DENO_TYPES_RE::closure$0 (4 samples, 0.02%)</title><rect x="1.6653%" y="2197" width="0.0191%" height="15" fill="rgb(241,101,14)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2207.50"></text></g><g><title>deno.exe`regex::re_unicode::Regex::new(ref$ (4 samples, 0.02%)</title><rect x="1.6653%" y="2181" width="0.0191%" height="15" fill="rgb(238,103,29)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2191.50"></text></g><g><title>deno.exe`regex::re_builder::unicode::RegexBuilder::build (4 samples, 0.02%)</title><rect x="1.6653%" y="2165" width="0.0191%" height="15" fill="rgb(233,195,47)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2175.50"></text></g><g><title>deno.exe`regex::exec::ExecBuilder::build (4 samples, 0.02%)</title><rect x="1.6653%" y="2149" width="0.0191%" height="15" fill="rgb(246,218,30)" fg:x="348" fg:w="4"/><text x="1.9153%" y="2159.50"></text></g><g><title>deno.exe`deno_graph::graph::parse_module(url::Url*, enum2$&lt;core::option::Option&lt;ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt; &gt; &gt;, alloc::sync::Arc&lt;str$&gt;, enum2$&lt;core::option::Option&lt;deno_graph::graph::AssertTypeWithRange&gt; &gt;, enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;dyn$&lt;deno_graph::source::Resolver&gt; &gt; &gt; &gt;, ref$&lt;dyn$ (217 samples, 1.04%)</title><rect x="0.6556%" y="2437" width="1.0384%" height="15" fill="rgb(219,145,47)" fg:x="137" fg:w="217"/><text x="0.9056%" y="2447.50"></text></g><g><title>deno.exe`deno_graph::graph::parse_esm_module_from_module_info(url::Url*, deno_media_type::MediaType, enum2$&lt;core::option::Option&lt;ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt; &gt; &gt;, deno_graph::analyzer::ModuleInfo, alloc::sync::Arc&lt;str$&gt;, enum2$&lt;core::option::Option&lt;ref$&lt;dyn$ (7 samples, 0.03%)</title><rect x="1.6605%" y="2421" width="0.0335%" height="15" fill="rgb(243,12,26)" fg:x="347" fg:w="7"/><text x="1.9105%" y="2431.50"></text></g><g><title>deno.exe`deno_graph::graph::Builder::visit(url::Url*, enum2$&lt;deno_graph::source::LoadResponse&gt;*, enum2$&lt;core::option::Option&lt;deno_graph::graph::AssertTypeWithRange&gt; &gt;, enum2$&lt;core::option::Option (219 samples, 1.05%)</title><rect x="0.6508%" y="2469" width="1.0480%" height="15" fill="rgb(214,87,16)" fg:x="136" fg:w="219"/><text x="0.9008%" y="2479.50"></text></g><g><title>deno.exe`deno_graph::graph::Builder::visit_module(url::Url*, enum2$&lt;core::option::Option&lt;ref$&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt; &gt; &gt;, alloc::sync::Arc&lt;str$&gt;, enum2$&lt;core::option::Option&lt;deno_graph::graph::AssertTypeWithRange&gt; &gt;, enum2$&lt;core::option::Option (219 samples, 1.05%)</title><rect x="0.6508%" y="2453" width="1.0480%" height="15" fill="rgb(208,99,42)" fg:x="136" fg:w="219"/><text x="0.9008%" y="2463.50"></text></g><g><title>deno.exe`deno::file_fetcher::FileFetcher::build_remote_file(url::Url*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;, std::collections::hash::map::HashMap (3 samples, 0.01%)</title><rect x="1.7179%" y="2229" width="0.0144%" height="15" fill="rgb(253,99,2)" fg:x="359" fg:w="3"/><text x="1.9679%" y="2239.50"></text></g><g><title>deno.exe`deno::cache::impl$0::read_file_bytes(deno::cache::RealDenoCacheEnv*, ref$ (3 samples, 0.01%)</title><rect x="1.7467%" y="2213" width="0.0144%" height="15" fill="rgb(220,168,23)" fg:x="365" fg:w="3"/><text x="1.9967%" y="2223.50"></text></g><g><title>deno.exe`std::fs::read&lt;ref$&lt;std::path::Path&gt; &gt;(ref$ (3 samples, 0.01%)</title><rect x="1.7467%" y="2197" width="0.0144%" height="15" fill="rgb(242,38,24)" fg:x="365" fg:w="3"/><text x="1.9967%" y="2207.50"></text></g><g><title>deno.exe`std::fs::read::inner (3 samples, 0.01%)</title><rect x="1.7467%" y="2181" width="0.0144%" height="15" fill="rgb(225,182,9)" fg:x="365" fg:w="3"/><text x="1.9967%" y="2191.50"></text></g><g><title>deno.exe`deno::file_fetcher::FileFetcher::fetch_cached (16 samples, 0.08%)</title><rect x="1.7132%" y="2245" width="0.0766%" height="15" fill="rgb(243,178,37)" fg:x="358" fg:w="16"/><text x="1.9632%" y="2255.50"></text></g><g><title>deno.exe`deno_cache_dir::global::impl$1::read_metadata&lt;deno::cache::RealDenoCacheEnv&gt;(deno_cache_dir::global::GlobalHttpCache (9 samples, 0.04%)</title><rect x="1.7467%" y="2229" width="0.0431%" height="15" fill="rgb(232,139,19)" fg:x="365" fg:w="9"/><text x="1.9967%" y="2239.50"></text></g><g><title>deno.exe`serde_json::de::from_slice&lt;deno_cache_dir::cache::CachedUrlMetadata&gt;(ref$&lt;slice2$ (6 samples, 0.03%)</title><rect x="1.7610%" y="2213" width="0.0287%" height="15" fill="rgb(225,201,24)" fg:x="368" fg:w="6"/><text x="2.0110%" y="2223.50"></text></g><g><title>deno.exe`serde_json::de::from_trait&lt;serde_json::read::SliceRead,deno_cache_dir::cache::CachedUrlMetadata&gt; (6 samples, 0.03%)</title><rect x="1.7610%" y="2197" width="0.0287%" height="15" fill="rgb(221,47,46)" fg:x="368" fg:w="6"/><text x="2.0110%" y="2207.50"></text></g><g><title>deno.exe`deno_cache_dir::cache::_::impl$0::deserialize&lt;ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt; &gt; &gt;(serde_json::de::Deserializer (6 samples, 0.03%)</title><rect x="1.7610%" y="2181" width="0.0287%" height="15" fill="rgb(249,23,13)" fg:x="368" fg:w="6"/><text x="2.0110%" y="2191.50"></text></g><g><title>deno.exe`serde_json::de::impl$7::deserialize_struct&lt;serde_json::read::SliceRead,deno_cache_dir::cache::_::impl$0::deserialize::__Visitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (6 samples, 0.03%)</title><rect x="1.7610%" y="2165" width="0.0287%" height="15" fill="rgb(219,9,5)" fg:x="368" fg:w="6"/><text x="2.0110%" y="2175.50"></text></g><g><title>deno.exe`deno_cache_dir::cache::_::impl$0::deserialize::impl$2::visit_map&lt;serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt; &gt;(deno_cache_dir::cache::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (6 samples, 0.03%)</title><rect x="1.7610%" y="2149" width="0.0287%" height="15" fill="rgb(254,171,16)" fg:x="368" fg:w="6"/><text x="2.0110%" y="2159.50"></text></g><g><title>deno.exe`serde::de::MapAccess::next_value&lt;serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;,std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt;(serde_json::de::MapAccess (5 samples, 0.02%)</title><rect x="1.7658%" y="2133" width="0.0239%" height="15" fill="rgb(230,171,20)" fg:x="369" fg:w="5"/><text x="2.0158%" y="2143.50"></text></g><g><title>deno.exe`serde_json::de::impl$11::next_value_seed&lt;serde_json::read::SliceRead,core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt; &gt;(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (5 samples, 0.02%)</title><rect x="1.7658%" y="2117" width="0.0239%" height="15" fill="rgb(210,71,41)" fg:x="369" fg:w="5"/><text x="2.0158%" y="2127.50"></text></g><g><title>deno.exe`serde::de::impl$5::deserialize&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt;,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt; &gt; &gt;(core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt;, serde_json::de::Deserializer (5 samples, 0.02%)</title><rect x="1.7658%" y="2101" width="0.0239%" height="15" fill="rgb(206,173,20)" fg:x="369" fg:w="5"/><text x="2.0158%" y="2111.50"></text></g><g><title>deno.exe`serde::de::impls::impl$192::deserialize&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt; &gt; &gt;(serde_json::de::Deserializer (5 samples, 0.02%)</title><rect x="1.7658%" y="2085" width="0.0239%" height="15" fill="rgb(233,88,34)" fg:x="369" fg:w="5"/><text x="2.0158%" y="2095.50"></text></g><g><title>deno.exe`serde_json::de::impl$7::deserialize_map&lt;serde_json::read::SliceRead,serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, serde::de::impls::impl$192::deserialize::MapVisitor (4 samples, 0.02%)</title><rect x="1.7706%" y="2069" width="0.0191%" height="15" fill="rgb(223,209,46)" fg:x="370" fg:w="4"/><text x="2.0206%" y="2079.50"></text></g><g><title>deno.exe`serde::de::impls::impl$192::deserialize::impl$0::visit_map&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState,serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt; &gt;(serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,alloc::string::String,std::collections::hash::map::RandomState&gt;, serde_json::de::MapAccess (4 samples, 0.02%)</title><rect x="1.7706%" y="2053" width="0.0191%" height="15" fill="rgb(250,43,18)" fg:x="370" fg:w="4"/><text x="2.0206%" y="2063.50"></text></g><g><title>deno.exe`deno::file_fetcher::FileFetcher::fetch_remote(url::Url*, deno_runtime::permissions::PermissionsContainer, long long, enum2$&lt;core::option::Option (17 samples, 0.08%)</title><rect x="1.7132%" y="2261" width="0.0814%" height="15" fill="rgb(208,13,10)" fg:x="358" fg:w="17"/><text x="1.9632%" y="2271.50"></text></g><g><title>deno.exe`futures_util::stream::stream::next::impl$3::poll&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::stream::next::Next&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (23 samples, 0.11%)</title><rect x="1.6988%" y="2469" width="0.1101%" height="15" fill="rgb(212,200,36)" fg:x="355" fg:w="23"/><text x="1.9488%" y="2479.50"></text></g><g><title>deno.exe`futures_util::stream::stream::StreamExt::poll_next_unpin&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(futures_util::stream::futures_ordered::FuturesOrdered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (23 samples, 0.11%)</title><rect x="1.6988%" y="2453" width="0.1101%" height="15" fill="rgb(225,90,30)" fg:x="355" fg:w="23"/><text x="1.9488%" y="2463.50"></text></g><g><title>deno.exe`futures_util::stream::futures_ordered::impl$8::poll_next&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (23 samples, 0.11%)</title><rect x="1.6988%" y="2437" width="0.1101%" height="15" fill="rgb(236,182,39)" fg:x="355" fg:w="23"/><text x="1.9488%" y="2447.50"></text></g><g><title>deno.exe`futures_util::stream::stream::StreamExt::poll_next_unpin&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;(futures_util::stream::futures_unordered::FuturesUnordered&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (23 samples, 0.11%)</title><rect x="1.6988%" y="2421" width="0.1101%" height="15" fill="rgb(212,144,35)" fg:x="355" fg:w="23"/><text x="1.9488%" y="2431.50"></text></g><g><title>deno.exe`futures_util::stream::futures_unordered::impl$7::poll_next&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (23 samples, 0.11%)</title><rect x="1.6988%" y="2405" width="0.1101%" height="15" fill="rgb(228,63,44)" fg:x="355" fg:w="23"/><text x="1.9488%" y="2415.50"></text></g><g><title>deno.exe`futures_util::stream::futures_ordered::impl$4::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2389" width="0.1005%" height="15" fill="rgb(228,109,6)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2399.50"></text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2373" width="0.1005%" height="15" fill="rgb(238,117,24)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2383.50"></text></g><g><title>deno.exe`futures_util::future::future::impl$15::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,deno_graph::graph::impl$32::load::closure_env$1&gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::future::Map&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2357" width="0.1005%" height="15" fill="rgb(242,26,26)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2367.50"></text></g><g><title>deno.exe`futures_util::future::future::map::impl$2::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,deno_graph::graph::impl$32::load::closure_env$1,tuple$&lt;url::Url,enum2$&lt;core::option::Option&lt;deno_graph::graph::Range&gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2341" width="0.1005%" height="15" fill="rgb(221,92,48)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2351.50"></text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;deno_graph::source::LoadResponse&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2325" width="0.1005%" height="15" fill="rgb(209,209,32)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2335.50"></text></g><g><title>deno.exe`deno::cache::impl$2::load::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2309" width="0.1005%" height="15" fill="rgb(221,70,22)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2319.50"></text></g><g><title>deno.exe`deno::file_fetcher::impl$1::fetch::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2293" width="0.1005%" height="15" fill="rgb(248,145,5)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2303.50"></text></g><g><title>deno.exe`deno::file_fetcher::impl$1::fetch_with_accept::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (21 samples, 0.10%)</title><rect x="1.7084%" y="2277" width="0.1005%" height="15" fill="rgb(226,116,26)" fg:x="357" fg:w="21"/><text x="1.9584%" y="2287.50"></text></g><g><title>deno.exe`deno::file_fetcher::fetch_local (3 samples, 0.01%)</title><rect x="1.7945%" y="2261" width="0.0144%" height="15" fill="rgb(244,5,17)" fg:x="375" fg:w="3"/><text x="2.0445%" y="2271.50"></text></g><g><title>deno.exe`std::fs::read&lt;std::path::PathBuf&gt; (3 samples, 0.01%)</title><rect x="1.7945%" y="2245" width="0.0144%" height="15" fill="rgb(252,159,33)" fg:x="375" fg:w="3"/><text x="2.0445%" y="2255.50"></text></g><g><title>deno.exe`std::fs::read::inner (3 samples, 0.01%)</title><rect x="1.7945%" y="2229" width="0.0144%" height="15" fill="rgb(206,71,0)" fg:x="375" fg:w="3"/><text x="2.0445%" y="2239.50"></text></g><g><title>deno.exe`deno_graph::graph::impl$32::fill::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (247 samples, 1.18%)</title><rect x="0.6317%" y="2485" width="1.1820%" height="15" fill="rgb(233,118,54)" fg:x="132" fg:w="247"/><text x="0.8817%" y="2495.50"></text></g><g><title>deno.exe`deno::graph_util::impl$0::build_graph_with_npm_resolution::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (250 samples, 1.20%)</title><rect x="0.6221%" y="2533" width="1.1963%" height="15" fill="rgb(234,83,48)" fg:x="130" fg:w="250"/><text x="0.8721%" y="2543.50"></text></g><g><title>deno.exe`deno_graph::graph::impl$30::build::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (249 samples, 1.19%)</title><rect x="0.6269%" y="2517" width="1.1916%" height="15" fill="rgb(228,3,54)" fg:x="131" fg:w="249"/><text x="0.8769%" y="2527.50"></text></g><g><title>deno.exe`deno_graph::graph::impl$32::build::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (249 samples, 1.19%)</title><rect x="0.6269%" y="2501" width="1.1916%" height="15" fill="rgb(226,155,13)" fg:x="131" fg:w="249"/><text x="0.8769%" y="2511.50"></text></g><g><title>deno.exe`deno::cache::check::TypeCheckCache::set_tsbuildinfo(url::Url*, ref$ (4 samples, 0.02%)</title><rect x="1.8567%" y="2517" width="0.0191%" height="15" fill="rgb(241,28,37)" fg:x="388" fg:w="4"/><text x="2.1067%" y="2527.50"></text></g><g><title>deno.exe`deno::cache::check::TypeCheckCache::set_tsbuildinfo_result(url::Url*, ref$ (4 samples, 0.02%)</title><rect x="1.8567%" y="2501" width="0.0191%" height="15" fill="rgb(233,93,10)" fg:x="388" fg:w="4"/><text x="2.1067%" y="2511.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::execute&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$&lt;dyn$ (4 samples, 0.02%)</title><rect x="1.8567%" y="2485" width="0.0191%" height="15" fill="rgb(225,113,19)" fg:x="388" fg:w="4"/><text x="2.1067%" y="2495.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::with_connection&lt;usize,deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$ (4 samples, 0.02%)</title><rect x="1.8567%" y="2469" width="0.0191%" height="15" fill="rgb(241,2,18)" fg:x="388" fg:w="4"/><text x="2.1067%" y="2479.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$2::execute::closure$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(deno::cache::cache_db::impl$2::execute::closure_env$0&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$ (4 samples, 0.02%)</title><rect x="1.8567%" y="2453" width="0.0191%" height="15" fill="rgb(228,207,21)" fg:x="388" fg:w="4"/><text x="2.1067%" y="2463.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute&lt;ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql&gt; &gt; &gt; &gt; &gt;(ref$&lt;slice2$&lt;ref$&lt;dyn$ (3 samples, 0.01%)</title><rect x="1.8615%" y="2437" width="0.0144%" height="15" fill="rgb(213,211,35)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2447.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute_with_bound_parameters (3 samples, 0.01%)</title><rect x="1.8615%" y="2421" width="0.0144%" height="15" fill="rgb(209,83,10)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2431.50"></text></g><g><title>deno.exe`rusqlite::raw_statement::RawStatement::step (3 samples, 0.01%)</title><rect x="1.8615%" y="2405" width="0.0144%" height="15" fill="rgb(209,164,1)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2415.50"></text></g><g><title>deno.exe`sqlite3_step(sqlite3_stmt*) (3 samples, 0.01%)</title><rect x="1.8615%" y="2389" width="0.0144%" height="15" fill="rgb(213,184,43)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2399.50"></text></g><g><title>deno.exe`sqlite3Step(Vdbe*) (3 samples, 0.01%)</title><rect x="1.8615%" y="2373" width="0.0144%" height="15" fill="rgb(231,61,34)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2383.50"></text></g><g><title>deno.exe`sqlite3VdbeExec(Vdbe*) (3 samples, 0.01%)</title><rect x="1.8615%" y="2357" width="0.0144%" height="15" fill="rgb(235,75,3)" fg:x="389" fg:w="3"/><text x="2.1115%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::CodeSpace::~CodeSpace (3 samples, 0.01%)</title><rect x="1.8950%" y="2341" width="0.0144%" height="15" fill="rgb(220,106,47)" fg:x="396" fg:w="3"/><text x="2.1450%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::PagedSpace::~PagedSpace (3 samples, 0.01%)</title><rect x="1.8950%" y="2325" width="0.0144%" height="15" fill="rgb(210,196,33)" fg:x="396" fg:w="3"/><text x="2.1450%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TearDown (3 samples, 0.01%)</title><rect x="1.8950%" y="2309" width="0.0144%" height="15" fill="rgb(229,154,42)" fg:x="396" fg:w="3"/><text x="2.1450%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::OldSpace::~OldSpace (8 samples, 0.04%)</title><rect x="1.9237%" y="2341" width="0.0383%" height="15" fill="rgb(228,114,26)" fg:x="402" fg:w="8"/><text x="2.1737%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::PagedSpace::~PagedSpace (8 samples, 0.04%)</title><rect x="1.9237%" y="2325" width="0.0383%" height="15" fill="rgb(208,144,1)" fg:x="402" fg:w="8"/><text x="2.1737%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TearDown (8 samples, 0.04%)</title><rect x="1.9237%" y="2309" width="0.0383%" height="15" fill="rgb(239,112,37)" fg:x="402" fg:w="8"/><text x="2.1737%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::VirtualMemory::Free (7 samples, 0.03%)</title><rect x="1.9285%" y="2293" width="0.0335%" height="15" fill="rgb(210,96,50)" fg:x="403" fg:w="7"/><text x="2.1785%" y="2303.50"></text></g><g><title>deno.exe`v8::base::BoundedPageAllocator::FreePages (7 samples, 0.03%)</title><rect x="1.9285%" y="2277" width="0.0335%" height="15" fill="rgb(222,178,2)" fg:x="403" fg:w="7"/><text x="2.1785%" y="2287.50"></text></g><g><title>deno.exe`v8::base::OS::SetPermissions (7 samples, 0.03%)</title><rect x="1.9285%" y="2261" width="0.0335%" height="15" fill="rgb(226,74,18)" fg:x="403" fg:w="7"/><text x="2.1785%" y="2271.50"></text></g><g><title>`0x7FFA9F817142 (7 samples, 0.03%)</title><rect x="1.9285%" y="2245" width="0.0335%" height="15" fill="rgb(225,67,54)" fg:x="403" fg:w="7"/><text x="2.1785%" y="2255.50"></text></g><g><title>`0x7FFAA222F114 (7 samples, 0.03%)</title><rect x="1.9285%" y="2229" width="0.0335%" height="15" fill="rgb(251,92,32)" fg:x="403" fg:w="7"/><text x="2.1785%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Heap::TearDown (15 samples, 0.07%)</title><rect x="1.8950%" y="2357" width="0.0718%" height="15" fill="rgb(228,149,22)" fg:x="396" fg:w="15"/><text x="2.1450%" y="2367.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_core::runtime::jsruntime::JsRuntime&gt; (17 samples, 0.08%)</title><rect x="1.8950%" y="2501" width="0.0814%" height="15" fill="rgb(243,54,13)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2511.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_core::runtime::jsruntime::InnerIsolateState&gt; (17 samples, 0.08%)</title><rect x="1.8950%" y="2485" width="0.0814%" height="15" fill="rgb(243,180,28)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2495.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$4::drop (17 samples, 0.08%)</title><rect x="1.8950%" y="2469" width="0.0814%" height="15" fill="rgb(208,167,24)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2479.50"></text></g><g><title>deno.exe`core::mem::manually_drop::ManuallyDrop&lt;v8::isolate::OwnedIsolate&gt;::drop&lt;v8::isolate::OwnedIsolate&gt; (17 samples, 0.08%)</title><rect x="1.8950%" y="2453" width="0.0814%" height="15" fill="rgb(245,73,45)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2463.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;v8::isolate::OwnedIsolate&gt; (17 samples, 0.08%)</title><rect x="1.8950%" y="2437" width="0.0814%" height="15" fill="rgb(237,203,48)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2447.50"></text></g><g><title>deno.exe`v8::isolate::impl$8::drop (17 samples, 0.08%)</title><rect x="1.8950%" y="2421" width="0.0814%" height="15" fill="rgb(211,197,16)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2431.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::dispose (17 samples, 0.08%)</title><rect x="1.8950%" y="2405" width="0.0814%" height="15" fill="rgb(243,99,51)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2415.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Delete (17 samples, 0.08%)</title><rect x="1.8950%" y="2389" width="0.0814%" height="15" fill="rgb(215,123,29)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2399.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Deinit (17 samples, 0.08%)</title><rect x="1.8950%" y="2373" width="0.0814%" height="15" fill="rgb(239,186,37)" fg:x="396" fg:w="17"/><text x="2.1450%" y="2383.50"></text></g><g><title>deno.exe`once_cell::imp::OnceCell&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; &gt;::initialize&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (88 samples, 0.42%)</title><rect x="1.9764%" y="2421" width="0.4211%" height="15" fill="rgb(252,136,39)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2431.50"></text></g><g><title>deno.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2405" width="0.4211%" height="15" fill="rgb(223,213,32)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2415.50"></text></g><g><title>deno.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;&gt;,dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$&lt;Output,bool&gt; &gt; &gt; &gt;(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2389" width="0.4211%" height="15" fill="rgb(233,115,5)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2399.50"></text></g><g><title>deno.exe`once_cell::imp::impl$4::initialize::closure$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2373" width="0.4211%" height="15" fill="rgb(207,226,44)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2383.50"></text></g><g><title>deno.exe`once_cell::sync::impl$6::get_or_init::closure$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (88 samples, 0.42%)</title><rect x="1.9764%" y="2357" width="0.4211%" height="15" fill="rgb(208,126,0)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2367.50"></text></g><g><title>deno.exe`once_cell::sync::impl$11::force::closure$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt;(once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (88 samples, 0.42%)</title><rect x="1.9764%" y="2341" width="0.4211%" height="15" fill="rgb(244,66,21)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2351.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)(),tuple$&lt;&gt; &gt;(alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (88 samples, 0.42%)</title><rect x="1.9764%" y="2325" width="0.4211%" height="15" fill="rgb(222,97,12)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2335.50"></text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;deno::tsc::COMPILER_SNAPSHOT::closure_env$0,tuple$&lt;&gt; &gt; (88 samples, 0.42%)</title><rect x="1.9764%" y="2309" width="0.4211%" height="15" fill="rgb(219,213,19)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2319.50"></text></g><g><title>deno.exe`deno::tsc::COMPILER_SNAPSHOT::closure$0 (88 samples, 0.42%)</title><rect x="1.9764%" y="2293" width="0.4211%" height="15" fill="rgb(252,169,30)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2303.50"></text></g><g><title>deno.exe`alloc::slice::impl$0::to_vec&lt;u8&gt;(ref$&lt;slice2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2277" width="0.4211%" height="15" fill="rgb(206,32,51)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2287.50"></text></g><g><title>deno.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2261" width="0.4211%" height="15" fill="rgb(250,172,42)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2271.50"></text></g><g><title>deno.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2245" width="0.4211%" height="15" fill="rgb(209,34,43)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2255.50"></text></g><g><title>deno.exe`alloc::slice::hack::impl$1::to_vec&lt;u8,alloc::alloc::Global&gt;(ref$&lt;slice2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2229" width="0.4211%" height="15" fill="rgb(223,11,35)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2239.50"></text></g><g><title>deno.exe`core::slice::impl$0::as_ptr(ref$&lt;slice2$ (88 samples, 0.42%)</title><rect x="1.9764%" y="2213" width="0.4211%" height="15" fill="rgb(251,219,26)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2223.50"></text></g><g><title>deno.exe`core::intrinsics::copy_nonoverlapping (88 samples, 0.42%)</title><rect x="1.9764%" y="2197" width="0.4211%" height="15" fill="rgb(231,119,3)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2207.50"></text></g><g><title>deno.exe`memcpy() (88 samples, 0.42%)</title><rect x="1.9764%" y="2181" width="0.4211%" height="15" fill="rgb(216,97,11)" fg:x="413" fg:w="88"/><text x="2.2264%" y="2191.50"></text></g><g><title>deno.exe`deno::tsc::compiler_snapshot (89 samples, 0.43%)</title><rect x="1.9764%" y="2501" width="0.4259%" height="15" fill="rgb(223,59,9)" fg:x="413" fg:w="89"/><text x="2.2264%" y="2511.50"></text></g><g><title>deno.exe`once_cell::sync::impl$12::deref&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt;(once_cell::sync::Lazy&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (89 samples, 0.43%)</title><rect x="1.9764%" y="2485" width="0.4259%" height="15" fill="rgb(233,93,31)" fg:x="413" fg:w="89"/><text x="2.2264%" y="2495.50"></text></g><g><title>deno.exe`once_cell::sync::Lazy&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt;::force&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; (89 samples, 0.43%)</title><rect x="1.9764%" y="2469" width="0.4259%" height="15" fill="rgb(239,81,33)" fg:x="413" fg:w="89"/><text x="2.2264%" y="2479.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; &gt;::get_or_init&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;(once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (89 samples, 0.43%)</title><rect x="1.9764%" y="2453" width="0.4259%" height="15" fill="rgb(213,120,34)" fg:x="413" fg:w="89"/><text x="2.2264%" y="2463.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; &gt;::get_or_try_init&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;slice2$&lt;u8&gt;,alloc::alloc::Global&gt; (*) (89 samples, 0.43%)</title><rect x="1.9764%" y="2437" width="0.4259%" height="15" fill="rgb(243,49,53)" fg:x="413" fg:w="89"/><text x="2.2264%" y="2447.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.4310%" y="2229" width="0.0144%" height="15" fill="rgb(247,216,33)" fg:x="508" fg:w="3"/><text x="2.6810%" y="2239.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.4310%" y="2213" width="0.0144%" height="15" fill="rgb(226,26,14)" fg:x="508" fg:w="3"/><text x="2.6810%" y="2223.50"></text></g><g><title>deno.exe`Builtins_ArrayForEach (6 samples, 0.03%)</title><rect x="2.4262%" y="2277" width="0.0287%" height="15" fill="rgb(215,49,53)" fg:x="507" fg:w="6"/><text x="2.6762%" y="2287.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.4310%" y="2261" width="0.0239%" height="15" fill="rgb(245,162,40)" fg:x="508" fg:w="5"/><text x="2.6810%" y="2271.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.4310%" y="2245" width="0.0239%" height="15" fill="rgb(229,68,17)" fg:x="508" fg:w="5"/><text x="2.6810%" y="2255.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (3 samples, 0.01%)</title><rect x="2.4980%" y="2229" width="0.0144%" height="15" fill="rgb(213,182,10)" fg:x="522" fg:w="3"/><text x="2.7480%" y="2239.50"></text></g><g><title>deno.exe`deno::tsc::op_load::v8_fn_ptr (3 samples, 0.01%)</title><rect x="2.4980%" y="2213" width="0.0144%" height="15" fill="rgb(245,125,30)" fg:x="522" fg:w="3"/><text x="2.7480%" y="2223.50"></text></g><g><title>deno.exe`deno::tsc::op_load::v8_func(v8::scope::HandleScope (3 samples, 0.01%)</title><rect x="2.4980%" y="2197" width="0.0144%" height="15" fill="rgb(232,202,2)" fg:x="522" fg:w="3"/><text x="2.7480%" y="2207.50"></text></g><g><title>deno.exe`Builtins_CompileLazy (3 samples, 0.01%)</title><rect x="2.5123%" y="2229" width="0.0144%" height="15" fill="rgb(237,140,51)" fg:x="525" fg:w="3"/><text x="2.7623%" y="2239.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (3 samples, 0.01%)</title><rect x="2.5123%" y="2213" width="0.0144%" height="15" fill="rgb(236,157,25)" fg:x="525" fg:w="3"/><text x="2.7623%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CompileLazy (3 samples, 0.01%)</title><rect x="2.5123%" y="2197" width="0.0144%" height="15" fill="rgb(219,209,0)" fg:x="525" fg:w="3"/><text x="2.7623%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="2.5123%" y="2181" width="0.0144%" height="15" fill="rgb(240,116,54)" fg:x="525" fg:w="3"/><text x="2.7623%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="2.5123%" y="2165" width="0.0144%" height="15" fill="rgb(216,10,36)" fg:x="525" fg:w="3"/><text x="2.7623%" y="2175.50"></text></g><g><title>`0x7FF7E017C2F2 (3 samples, 0.01%)</title><rect x="2.5602%" y="1829" width="0.0144%" height="15" fill="rgb(222,72,44)" fg:x="535" fg:w="3"/><text x="2.8102%" y="1839.50"></text></g><g><title>`0x7FF7E0175708 (3 samples, 0.01%)</title><rect x="2.5602%" y="1813" width="0.0144%" height="15" fill="rgb(232,159,9)" fg:x="535" fg:w="3"/><text x="2.8102%" y="1823.50"></text></g><g><title>`0x7FF7E01917E5 (5 samples, 0.02%)</title><rect x="2.5554%" y="2053" width="0.0239%" height="15" fill="rgb(210,39,32)" fg:x="534" fg:w="5"/><text x="2.8054%" y="2063.50"></text></g><g><title>`0x7FF7E0088066 (5 samples, 0.02%)</title><rect x="2.5554%" y="2037" width="0.0239%" height="15" fill="rgb(216,194,45)" fg:x="534" fg:w="5"/><text x="2.8054%" y="2047.50"></text></g><g><title>`0x7FF7E0088282 (5 samples, 0.02%)</title><rect x="2.5554%" y="2021" width="0.0239%" height="15" fill="rgb(218,18,35)" fg:x="534" fg:w="5"/><text x="2.8054%" y="2031.50"></text></g><g><title>`0x7FF7E008CF27 (4 samples, 0.02%)</title><rect x="2.5602%" y="2005" width="0.0191%" height="15" fill="rgb(207,83,51)" fg:x="535" fg:w="4"/><text x="2.8102%" y="2015.50"></text></g><g><title>`0x7FF7E0088959 (4 samples, 0.02%)</title><rect x="2.5602%" y="1989" width="0.0191%" height="15" fill="rgb(225,63,43)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1999.50"></text></g><g><title>`0x7FF7E0088BAC (4 samples, 0.02%)</title><rect x="2.5602%" y="1973" width="0.0191%" height="15" fill="rgb(207,57,36)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1983.50"></text></g><g><title>`0x7FF7E008FB41 (4 samples, 0.02%)</title><rect x="2.5602%" y="1957" width="0.0191%" height="15" fill="rgb(216,99,33)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1967.50"></text></g><g><title>`0x7FF7E00BB138 (4 samples, 0.02%)</title><rect x="2.5602%" y="1941" width="0.0191%" height="15" fill="rgb(225,42,16)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1951.50"></text></g><g><title>`0x7FF7E0087E92 (4 samples, 0.02%)</title><rect x="2.5602%" y="1925" width="0.0191%" height="15" fill="rgb(220,201,45)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1935.50"></text></g><g><title>`0x7FF7E0191724 (4 samples, 0.02%)</title><rect x="2.5602%" y="1909" width="0.0191%" height="15" fill="rgb(225,33,4)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1919.50"></text></g><g><title>`0x7FF7E01747F1 (4 samples, 0.02%)</title><rect x="2.5602%" y="1893" width="0.0191%" height="15" fill="rgb(224,33,50)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1903.50"></text></g><g><title>`0x7FF7E017B6B4 (4 samples, 0.02%)</title><rect x="2.5602%" y="1877" width="0.0191%" height="15" fill="rgb(246,198,51)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1887.50"></text></g><g><title>`0x7FF7E0174DB9 (4 samples, 0.02%)</title><rect x="2.5602%" y="1861" width="0.0191%" height="15" fill="rgb(205,22,4)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1871.50"></text></g><g><title>`0x7FF7E0174E9E (4 samples, 0.02%)</title><rect x="2.5602%" y="1845" width="0.0191%" height="15" fill="rgb(206,3,8)" fg:x="535" fg:w="4"/><text x="2.8102%" y="1855.50"></text></g><g><title>`0x7FF7E0191724 (5 samples, 0.02%)</title><rect x="2.6032%" y="1477" width="0.0239%" height="15" fill="rgb(251,23,15)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1487.50"></text></g><g><title>`0x7FF7E01747F1 (5 samples, 0.02%)</title><rect x="2.6032%" y="1461" width="0.0239%" height="15" fill="rgb(252,88,28)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1471.50"></text></g><g><title>`0x7FF7E017B6B4 (5 samples, 0.02%)</title><rect x="2.6032%" y="1445" width="0.0239%" height="15" fill="rgb(212,127,14)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1455.50"></text></g><g><title>`0x7FF7E0174DB9 (5 samples, 0.02%)</title><rect x="2.6032%" y="1429" width="0.0239%" height="15" fill="rgb(247,145,37)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1439.50"></text></g><g><title>`0x7FF7E0174E9E (5 samples, 0.02%)</title><rect x="2.6032%" y="1413" width="0.0239%" height="15" fill="rgb(209,117,53)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1423.50"></text></g><g><title>`0x7FF7E017C2F2 (5 samples, 0.02%)</title><rect x="2.6032%" y="1397" width="0.0239%" height="15" fill="rgb(212,90,42)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1407.50"></text></g><g><title>`0x7FF7E0175708 (5 samples, 0.02%)</title><rect x="2.6032%" y="1381" width="0.0239%" height="15" fill="rgb(218,164,37)" fg:x="544" fg:w="5"/><text x="2.8532%" y="1391.50"></text></g><g><title>`0x7FF7E017D4C5 (3 samples, 0.01%)</title><rect x="2.6128%" y="1365" width="0.0144%" height="15" fill="rgb(246,65,34)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1375.50"></text></g><g><title>`0x7FF7E018D878 (3 samples, 0.01%)</title><rect x="2.6128%" y="1349" width="0.0144%" height="15" fill="rgb(231,100,33)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1359.50"></text></g><g><title>`0x7FF7E0176813 (3 samples, 0.01%)</title><rect x="2.6128%" y="1333" width="0.0144%" height="15" fill="rgb(228,126,14)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1343.50"></text></g><g><title>`0x7FF7E0176BEC (3 samples, 0.01%)</title><rect x="2.6128%" y="1317" width="0.0144%" height="15" fill="rgb(215,173,21)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1327.50"></text></g><g><title>`0x7FF7E0176D5A (3 samples, 0.01%)</title><rect x="2.6128%" y="1301" width="0.0144%" height="15" fill="rgb(210,6,40)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1311.50"></text></g><g><title>`0x7FF7E0176DAF (3 samples, 0.01%)</title><rect x="2.6128%" y="1285" width="0.0144%" height="15" fill="rgb(212,48,18)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1295.50"></text></g><g><title>`0x7FF7E01771A1 (3 samples, 0.01%)</title><rect x="2.6128%" y="1269" width="0.0144%" height="15" fill="rgb(230,214,11)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1279.50"></text></g><g><title>`0x7FF7E018DDF5 (3 samples, 0.01%)</title><rect x="2.6128%" y="1253" width="0.0144%" height="15" fill="rgb(254,105,39)" fg:x="546" fg:w="3"/><text x="2.8628%" y="1263.50"></text></g><g><title>`0x7FF7E0191724 (3 samples, 0.01%)</title><rect x="2.6559%" y="1045" width="0.0144%" height="15" fill="rgb(245,158,5)" fg:x="555" fg:w="3"/><text x="2.9059%" y="1055.50"></text></g><g><title>`0x7FF7E01747F1 (3 samples, 0.01%)</title><rect x="2.6559%" y="1029" width="0.0144%" height="15" fill="rgb(249,208,11)" fg:x="555" fg:w="3"/><text x="2.9059%" y="1039.50"></text></g><g><title>`0x7FF7E017B6B4 (3 samples, 0.01%)</title><rect x="2.6559%" y="1013" width="0.0144%" height="15" fill="rgb(210,39,28)" fg:x="555" fg:w="3"/><text x="2.9059%" y="1023.50"></text></g><g><title>`0x7FF7E0174DB9 (3 samples, 0.01%)</title><rect x="2.6559%" y="997" width="0.0144%" height="15" fill="rgb(211,56,53)" fg:x="555" fg:w="3"/><text x="2.9059%" y="1007.50"></text></g><g><title>`0x7FF7E0174E9E (3 samples, 0.01%)</title><rect x="2.6559%" y="981" width="0.0144%" height="15" fill="rgb(226,201,30)" fg:x="555" fg:w="3"/><text x="2.9059%" y="991.50"></text></g><g><title>`0x7FF7E0191724 (3 samples, 0.01%)</title><rect x="2.6702%" y="901" width="0.0144%" height="15" fill="rgb(239,101,34)" fg:x="558" fg:w="3"/><text x="2.9202%" y="911.50"></text></g><g><title>`0x7FF7E01747F1 (3 samples, 0.01%)</title><rect x="2.6702%" y="885" width="0.0144%" height="15" fill="rgb(226,209,5)" fg:x="558" fg:w="3"/><text x="2.9202%" y="895.50"></text></g><g><title>`0x7FF7E017B6B4 (3 samples, 0.01%)</title><rect x="2.6702%" y="869" width="0.0144%" height="15" fill="rgb(250,105,47)" fg:x="558" fg:w="3"/><text x="2.9202%" y="879.50"></text></g><g><title>`0x7FF7E0174DB9 (3 samples, 0.01%)</title><rect x="2.6702%" y="853" width="0.0144%" height="15" fill="rgb(230,72,3)" fg:x="558" fg:w="3"/><text x="2.9202%" y="863.50"></text></g><g><title>`0x7FF7E0174E9E (3 samples, 0.01%)</title><rect x="2.6702%" y="837" width="0.0144%" height="15" fill="rgb(232,218,39)" fg:x="558" fg:w="3"/><text x="2.9202%" y="847.50"></text></g><g><title>`0x7FF7E017C2F2 (3 samples, 0.01%)</title><rect x="2.6702%" y="821" width="0.0144%" height="15" fill="rgb(248,166,6)" fg:x="558" fg:w="3"/><text x="2.9202%" y="831.50"></text></g><g><title>`0x7FF7E0175708 (3 samples, 0.01%)</title><rect x="2.6702%" y="805" width="0.0144%" height="15" fill="rgb(247,89,20)" fg:x="558" fg:w="3"/><text x="2.9202%" y="815.50"></text></g><g><title>`0x7FF7E008F5E1 (6 samples, 0.03%)</title><rect x="2.6990%" y="661" width="0.0287%" height="15" fill="rgb(248,130,54)" fg:x="564" fg:w="6"/><text x="2.9490%" y="671.50"></text></g><g><title>`0x7FF7E0088D2B (6 samples, 0.03%)</title><rect x="2.6990%" y="645" width="0.0287%" height="15" fill="rgb(234,196,4)" fg:x="564" fg:w="6"/><text x="2.9490%" y="655.50"></text></g><g><title>`0x7FF7E0088E2A (6 samples, 0.03%)</title><rect x="2.6990%" y="629" width="0.0287%" height="15" fill="rgb(250,143,31)" fg:x="564" fg:w="6"/><text x="2.9490%" y="639.50"></text></g><g><title>`0x7FF7E00877D5 (6 samples, 0.03%)</title><rect x="2.6990%" y="613" width="0.0287%" height="15" fill="rgb(211,110,34)" fg:x="564" fg:w="6"/><text x="2.9490%" y="623.50"></text></g><g><title>`0x7FF7E0087895 (6 samples, 0.03%)</title><rect x="2.6990%" y="597" width="0.0287%" height="15" fill="rgb(215,124,48)" fg:x="564" fg:w="6"/><text x="2.9490%" y="607.50"></text></g><g><title>`0x7FF7E0199CD0 (6 samples, 0.03%)</title><rect x="2.6990%" y="581" width="0.0287%" height="15" fill="rgb(216,46,13)" fg:x="564" fg:w="6"/><text x="2.9490%" y="591.50"></text></g><g><title>`0x7FF7E017E00B (6 samples, 0.03%)</title><rect x="2.6990%" y="565" width="0.0287%" height="15" fill="rgb(205,184,25)" fg:x="564" fg:w="6"/><text x="2.9490%" y="575.50"></text></g><g><title>`0x7FF7E0191E2C (6 samples, 0.03%)</title><rect x="2.6990%" y="549" width="0.0287%" height="15" fill="rgb(228,1,10)" fg:x="564" fg:w="6"/><text x="2.9490%" y="559.50"></text></g><g><title>`0x7FF7E0199177 (6 samples, 0.03%)</title><rect x="2.6990%" y="533" width="0.0287%" height="15" fill="rgb(213,116,27)" fg:x="564" fg:w="6"/><text x="2.9490%" y="543.50"></text></g><g><title>deno.exe`Builtins_StringPrototypeSlice (6 samples, 0.03%)</title><rect x="2.6990%" y="517" width="0.0287%" height="15" fill="rgb(241,95,50)" fg:x="564" fg:w="6"/><text x="2.9490%" y="527.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (6 samples, 0.03%)</title><rect x="2.6990%" y="501" width="0.0287%" height="15" fill="rgb(238,48,32)" fg:x="564" fg:w="6"/><text x="2.9490%" y="511.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (6 samples, 0.03%)</title><rect x="2.6990%" y="485" width="0.0287%" height="15" fill="rgb(235,113,49)" fg:x="564" fg:w="6"/><text x="2.9490%" y="495.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (6 samples, 0.03%)</title><rect x="2.6990%" y="469" width="0.0287%" height="15" fill="rgb(205,127,43)" fg:x="564" fg:w="6"/><text x="2.9490%" y="479.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (6 samples, 0.03%)</title><rect x="2.6990%" y="453" width="0.0287%" height="15" fill="rgb(250,162,2)" fg:x="564" fg:w="6"/><text x="2.9490%" y="463.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (6 samples, 0.03%)</title><rect x="2.6990%" y="437" width="0.0287%" height="15" fill="rgb(220,13,41)" fg:x="564" fg:w="6"/><text x="2.9490%" y="447.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (6 samples, 0.03%)</title><rect x="2.6990%" y="421" width="0.0287%" height="15" fill="rgb(249,221,25)" fg:x="564" fg:w="6"/><text x="2.9490%" y="431.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (6 samples, 0.03%)</title><rect x="2.6990%" y="405" width="0.0287%" height="15" fill="rgb(215,208,19)" fg:x="564" fg:w="6"/><text x="2.9490%" y="415.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (5 samples, 0.02%)</title><rect x="2.7037%" y="389" width="0.0239%" height="15" fill="rgb(236,175,2)" fg:x="565" fg:w="5"/><text x="2.9537%" y="399.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (5 samples, 0.02%)</title><rect x="2.7037%" y="373" width="0.0239%" height="15" fill="rgb(241,52,2)" fg:x="565" fg:w="5"/><text x="2.9537%" y="383.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (4 samples, 0.02%)</title><rect x="2.7085%" y="357" width="0.0191%" height="15" fill="rgb(248,140,14)" fg:x="566" fg:w="4"/><text x="2.9585%" y="367.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (4 samples, 0.02%)</title><rect x="2.7085%" y="341" width="0.0191%" height="15" fill="rgb(253,22,42)" fg:x="566" fg:w="4"/><text x="2.9585%" y="351.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (4 samples, 0.02%)</title><rect x="2.7085%" y="325" width="0.0191%" height="15" fill="rgb(234,61,47)" fg:x="566" fg:w="4"/><text x="2.9585%" y="335.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (4 samples, 0.02%)</title><rect x="2.7085%" y="309" width="0.0191%" height="15" fill="rgb(208,226,15)" fg:x="566" fg:w="4"/><text x="2.9585%" y="319.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::Process (4 samples, 0.02%)</title><rect x="2.7085%" y="293" width="0.0191%" height="15" fill="rgb(217,221,4)" fg:x="566" fg:w="4"/><text x="2.9585%" y="303.50"></text></g><g><title>`0x7FF7E0191724 (5 samples, 0.02%)</title><rect x="2.7372%" y="469" width="0.0239%" height="15" fill="rgb(212,174,34)" fg:x="572" fg:w="5"/><text x="2.9872%" y="479.50"></text></g><g><title>`0x7FF7E01747F1 (5 samples, 0.02%)</title><rect x="2.7372%" y="453" width="0.0239%" height="15" fill="rgb(253,83,4)" fg:x="572" fg:w="5"/><text x="2.9872%" y="463.50"></text></g><g><title>`0x7FF7E017B6B4 (3 samples, 0.01%)</title><rect x="2.7468%" y="437" width="0.0144%" height="15" fill="rgb(250,195,49)" fg:x="574" fg:w="3"/><text x="2.9968%" y="447.50"></text></g><g><title>`0x7FF7E0174DB9 (3 samples, 0.01%)</title><rect x="2.7468%" y="421" width="0.0144%" height="15" fill="rgb(241,192,25)" fg:x="574" fg:w="3"/><text x="2.9968%" y="431.50"></text></g><g><title>`0x7FF7E0174E9E (3 samples, 0.01%)</title><rect x="2.7468%" y="405" width="0.0144%" height="15" fill="rgb(208,124,10)" fg:x="574" fg:w="3"/><text x="2.9968%" y="415.50"></text></g><g><title>`0x7FF7E017C2F2 (3 samples, 0.01%)</title><rect x="2.7468%" y="389" width="0.0144%" height="15" fill="rgb(222,33,0)" fg:x="574" fg:w="3"/><text x="2.9968%" y="399.50"></text></g><g><title>`0x7FF7E0175708 (3 samples, 0.01%)</title><rect x="2.7468%" y="373" width="0.0144%" height="15" fill="rgb(234,209,28)" fg:x="574" fg:w="3"/><text x="2.9968%" y="383.50"></text></g><g><title>`0x7FF7E0088066 (41 samples, 0.20%)</title><rect x="2.5793%" y="2037" width="0.1962%" height="15" fill="rgb(224,11,23)" fg:x="539" fg:w="41"/><text x="2.8293%" y="2047.50"></text></g><g><title>`0x7FF7E0088282 (41 samples, 0.20%)</title><rect x="2.5793%" y="2021" width="0.1962%" height="15" fill="rgb(232,99,1)" fg:x="539" fg:w="41"/><text x="2.8293%" y="2031.50"></text></g><g><title>`0x7FF7E008CF27 (41 samples, 0.20%)</title><rect x="2.5793%" y="2005" width="0.1962%" height="15" fill="rgb(237,95,45)" fg:x="539" fg:w="41"/><text x="2.8293%" y="2015.50"></text></g><g><title>`0x7FF7E0088959 (41 samples, 0.20%)</title><rect x="2.5793%" y="1989" width="0.1962%" height="15" fill="rgb(208,109,11)" fg:x="539" fg:w="41"/><text x="2.8293%" y="1999.50"></text></g><g><title>`0x7FF7E0088BAC (41 samples, 0.20%)</title><rect x="2.5793%" y="1973" width="0.1962%" height="15" fill="rgb(216,190,48)" fg:x="539" fg:w="41"/><text x="2.8293%" y="1983.50"></text></g><g><title>`0x7FF7E008FB41 (41 samples, 0.20%)</title><rect x="2.5793%" y="1957" width="0.1962%" height="15" fill="rgb(251,171,36)" fg:x="539" fg:w="41"/><text x="2.8293%" y="1967.50"></text></g><g><title>`0x7FF7E00BB138 (41 samples, 0.20%)</title><rect x="2.5793%" y="1941" width="0.1962%" height="15" fill="rgb(230,62,22)" fg:x="539" fg:w="41"/><text x="2.8293%" y="1951.50"></text></g><g><title>`0x7FF7E0087E92 (41 samples, 0.20%)</title><rect x="2.5793%" y="1925" width="0.1962%" height="15" fill="rgb(225,114,35)" fg:x="539" fg:w="41"/><text x="2.8293%" y="1935.50"></text></g><g><title>`0x7FF7E01917E5 (39 samples, 0.19%)</title><rect x="2.5889%" y="1909" width="0.1866%" height="15" fill="rgb(215,118,42)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1919.50"></text></g><g><title>`0x7FF7E0088066 (39 samples, 0.19%)</title><rect x="2.5889%" y="1893" width="0.1866%" height="15" fill="rgb(243,119,21)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1903.50"></text></g><g><title>`0x7FF7E0088282 (39 samples, 0.19%)</title><rect x="2.5889%" y="1877" width="0.1866%" height="15" fill="rgb(252,177,53)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1887.50"></text></g><g><title>`0x7FF7E008CF27 (39 samples, 0.19%)</title><rect x="2.5889%" y="1861" width="0.1866%" height="15" fill="rgb(237,209,29)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1871.50"></text></g><g><title>`0x7FF7E0088959 (39 samples, 0.19%)</title><rect x="2.5889%" y="1845" width="0.1866%" height="15" fill="rgb(212,65,23)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1855.50"></text></g><g><title>`0x7FF7E0088BAC (39 samples, 0.19%)</title><rect x="2.5889%" y="1829" width="0.1866%" height="15" fill="rgb(230,222,46)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1839.50"></text></g><g><title>`0x7FF7E008FB41 (39 samples, 0.19%)</title><rect x="2.5889%" y="1813" width="0.1866%" height="15" fill="rgb(215,135,32)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1823.50"></text></g><g><title>`0x7FF7E00BB138 (39 samples, 0.19%)</title><rect x="2.5889%" y="1797" width="0.1866%" height="15" fill="rgb(246,101,22)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1807.50"></text></g><g><title>`0x7FF7E0087E92 (39 samples, 0.19%)</title><rect x="2.5889%" y="1781" width="0.1866%" height="15" fill="rgb(206,107,13)" fg:x="541" fg:w="39"/><text x="2.8389%" y="1791.50"></text></g><g><title>`0x7FF7E01917E5 (37 samples, 0.18%)</title><rect x="2.5985%" y="1765" width="0.1771%" height="15" fill="rgb(250,100,44)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1775.50"></text></g><g><title>`0x7FF7E0088066 (37 samples, 0.18%)</title><rect x="2.5985%" y="1749" width="0.1771%" height="15" fill="rgb(231,147,38)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1759.50"></text></g><g><title>`0x7FF7E0088282 (37 samples, 0.18%)</title><rect x="2.5985%" y="1733" width="0.1771%" height="15" fill="rgb(229,8,40)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1743.50"></text></g><g><title>`0x7FF7E008CF27 (37 samples, 0.18%)</title><rect x="2.5985%" y="1717" width="0.1771%" height="15" fill="rgb(221,135,30)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1727.50"></text></g><g><title>`0x7FF7E0088959 (37 samples, 0.18%)</title><rect x="2.5985%" y="1701" width="0.1771%" height="15" fill="rgb(249,193,18)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1711.50"></text></g><g><title>`0x7FF7E0088BAC (37 samples, 0.18%)</title><rect x="2.5985%" y="1685" width="0.1771%" height="15" fill="rgb(209,133,39)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1695.50"></text></g><g><title>`0x7FF7E008FB41 (37 samples, 0.18%)</title><rect x="2.5985%" y="1669" width="0.1771%" height="15" fill="rgb(232,100,14)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1679.50"></text></g><g><title>`0x7FF7E00BB138 (37 samples, 0.18%)</title><rect x="2.5985%" y="1653" width="0.1771%" height="15" fill="rgb(224,185,1)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1663.50"></text></g><g><title>`0x7FF7E0087E92 (37 samples, 0.18%)</title><rect x="2.5985%" y="1637" width="0.1771%" height="15" fill="rgb(223,139,8)" fg:x="543" fg:w="37"/><text x="2.8485%" y="1647.50"></text></g><g><title>`0x7FF7E01917E5 (36 samples, 0.17%)</title><rect x="2.6032%" y="1621" width="0.1723%" height="15" fill="rgb(232,213,38)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1631.50"></text></g><g><title>`0x7FF7E0088066 (36 samples, 0.17%)</title><rect x="2.6032%" y="1605" width="0.1723%" height="15" fill="rgb(207,94,22)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1615.50"></text></g><g><title>`0x7FF7E0088282 (36 samples, 0.17%)</title><rect x="2.6032%" y="1589" width="0.1723%" height="15" fill="rgb(219,183,54)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1599.50"></text></g><g><title>`0x7FF7E008CF27 (36 samples, 0.17%)</title><rect x="2.6032%" y="1573" width="0.1723%" height="15" fill="rgb(216,185,54)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1583.50"></text></g><g><title>`0x7FF7E0088959 (36 samples, 0.17%)</title><rect x="2.6032%" y="1557" width="0.1723%" height="15" fill="rgb(254,217,39)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1567.50"></text></g><g><title>`0x7FF7E0088BAC (36 samples, 0.17%)</title><rect x="2.6032%" y="1541" width="0.1723%" height="15" fill="rgb(240,178,23)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1551.50"></text></g><g><title>`0x7FF7E008FB41 (36 samples, 0.17%)</title><rect x="2.6032%" y="1525" width="0.1723%" height="15" fill="rgb(218,11,47)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1535.50"></text></g><g><title>`0x7FF7E00BB138 (36 samples, 0.17%)</title><rect x="2.6032%" y="1509" width="0.1723%" height="15" fill="rgb(218,51,51)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1519.50"></text></g><g><title>`0x7FF7E0087E92 (36 samples, 0.17%)</title><rect x="2.6032%" y="1493" width="0.1723%" height="15" fill="rgb(238,126,27)" fg:x="544" fg:w="36"/><text x="2.8532%" y="1503.50"></text></g><g><title>`0x7FF7E01917E5 (31 samples, 0.15%)</title><rect x="2.6272%" y="1477" width="0.1483%" height="15" fill="rgb(249,202,22)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1487.50"></text></g><g><title>`0x7FF7E0088066 (31 samples, 0.15%)</title><rect x="2.6272%" y="1461" width="0.1483%" height="15" fill="rgb(254,195,49)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1471.50"></text></g><g><title>`0x7FF7E0088282 (31 samples, 0.15%)</title><rect x="2.6272%" y="1445" width="0.1483%" height="15" fill="rgb(208,123,14)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1455.50"></text></g><g><title>`0x7FF7E008CF27 (31 samples, 0.15%)</title><rect x="2.6272%" y="1429" width="0.1483%" height="15" fill="rgb(224,200,8)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1439.50"></text></g><g><title>`0x7FF7E0088959 (31 samples, 0.15%)</title><rect x="2.6272%" y="1413" width="0.1483%" height="15" fill="rgb(217,61,36)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1423.50"></text></g><g><title>`0x7FF7E0088BAC (31 samples, 0.15%)</title><rect x="2.6272%" y="1397" width="0.1483%" height="15" fill="rgb(206,35,45)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1407.50"></text></g><g><title>`0x7FF7E008FB41 (31 samples, 0.15%)</title><rect x="2.6272%" y="1381" width="0.1483%" height="15" fill="rgb(217,65,33)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1391.50"></text></g><g><title>`0x7FF7E00BB138 (31 samples, 0.15%)</title><rect x="2.6272%" y="1365" width="0.1483%" height="15" fill="rgb(222,158,48)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1375.50"></text></g><g><title>`0x7FF7E0087E92 (31 samples, 0.15%)</title><rect x="2.6272%" y="1349" width="0.1483%" height="15" fill="rgb(254,2,54)" fg:x="549" fg:w="31"/><text x="2.8772%" y="1359.50"></text></g><g><title>`0x7FF7E01917E5 (30 samples, 0.14%)</title><rect x="2.6320%" y="1333" width="0.1436%" height="15" fill="rgb(250,143,38)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1343.50"></text></g><g><title>`0x7FF7E0088066 (30 samples, 0.14%)</title><rect x="2.6320%" y="1317" width="0.1436%" height="15" fill="rgb(248,25,0)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1327.50"></text></g><g><title>`0x7FF7E0088282 (30 samples, 0.14%)</title><rect x="2.6320%" y="1301" width="0.1436%" height="15" fill="rgb(206,152,27)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1311.50"></text></g><g><title>`0x7FF7E008CF27 (30 samples, 0.14%)</title><rect x="2.6320%" y="1285" width="0.1436%" height="15" fill="rgb(240,77,30)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1295.50"></text></g><g><title>`0x7FF7E0088959 (30 samples, 0.14%)</title><rect x="2.6320%" y="1269" width="0.1436%" height="15" fill="rgb(231,5,3)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1279.50"></text></g><g><title>`0x7FF7E0088BAC (30 samples, 0.14%)</title><rect x="2.6320%" y="1253" width="0.1436%" height="15" fill="rgb(207,226,32)" fg:x="550" fg:w="30"/><text x="2.8820%" y="1263.50"></text></g><g><title>`0x7FF7E008FB41 (29 samples, 0.14%)</title><rect x="2.6367%" y="1237" width="0.1388%" height="15" fill="rgb(222,207,47)" fg:x="551" fg:w="29"/><text x="2.8867%" y="1247.50"></text></g><g><title>`0x7FF7E00BB138 (29 samples, 0.14%)</title><rect x="2.6367%" y="1221" width="0.1388%" height="15" fill="rgb(229,115,45)" fg:x="551" fg:w="29"/><text x="2.8867%" y="1231.50"></text></g><g><title>`0x7FF7E0087E92 (29 samples, 0.14%)</title><rect x="2.6367%" y="1205" width="0.1388%" height="15" fill="rgb(224,191,6)" fg:x="551" fg:w="29"/><text x="2.8867%" y="1215.50"></text></g><g><title>`0x7FF7E01917E5 (27 samples, 0.13%)</title><rect x="2.6463%" y="1189" width="0.1292%" height="15" fill="rgb(230,227,24)" fg:x="553" fg:w="27"/><text x="2.8963%" y="1199.50"></text></g><g><title>`0x7FF7E0088066 (26 samples, 0.12%)</title><rect x="2.6511%" y="1173" width="0.1244%" height="15" fill="rgb(228,80,19)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1183.50"></text></g><g><title>`0x7FF7E0088282 (26 samples, 0.12%)</title><rect x="2.6511%" y="1157" width="0.1244%" height="15" fill="rgb(247,229,0)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1167.50"></text></g><g><title>`0x7FF7E008CF27 (26 samples, 0.12%)</title><rect x="2.6511%" y="1141" width="0.1244%" height="15" fill="rgb(237,194,15)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1151.50"></text></g><g><title>`0x7FF7E0088959 (26 samples, 0.12%)</title><rect x="2.6511%" y="1125" width="0.1244%" height="15" fill="rgb(219,203,20)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1135.50"></text></g><g><title>`0x7FF7E0088BAC (26 samples, 0.12%)</title><rect x="2.6511%" y="1109" width="0.1244%" height="15" fill="rgb(234,128,8)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1119.50"></text></g><g><title>`0x7FF7E008FB41 (26 samples, 0.12%)</title><rect x="2.6511%" y="1093" width="0.1244%" height="15" fill="rgb(248,202,8)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1103.50"></text></g><g><title>`0x7FF7E00BB138 (26 samples, 0.12%)</title><rect x="2.6511%" y="1077" width="0.1244%" height="15" fill="rgb(206,104,37)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1087.50"></text></g><g><title>`0x7FF7E0087E92 (26 samples, 0.12%)</title><rect x="2.6511%" y="1061" width="0.1244%" height="15" fill="rgb(223,8,27)" fg:x="554" fg:w="26"/><text x="2.9011%" y="1071.50"></text></g><g><title>`0x7FF7E01917E5 (22 samples, 0.11%)</title><rect x="2.6702%" y="1045" width="0.1053%" height="15" fill="rgb(216,217,28)" fg:x="558" fg:w="22"/><text x="2.9202%" y="1055.50"></text></g><g><title>`0x7FF7E0088066 (22 samples, 0.11%)</title><rect x="2.6702%" y="1029" width="0.1053%" height="15" fill="rgb(249,199,1)" fg:x="558" fg:w="22"/><text x="2.9202%" y="1039.50"></text></g><g><title>`0x7FF7E0088282 (22 samples, 0.11%)</title><rect x="2.6702%" y="1013" width="0.1053%" height="15" fill="rgb(240,85,17)" fg:x="558" fg:w="22"/><text x="2.9202%" y="1023.50"></text></g><g><title>`0x7FF7E008CF27 (22 samples, 0.11%)</title><rect x="2.6702%" y="997" width="0.1053%" height="15" fill="rgb(206,108,45)" fg:x="558" fg:w="22"/><text x="2.9202%" y="1007.50"></text></g><g><title>`0x7FF7E0088959 (22 samples, 0.11%)</title><rect x="2.6702%" y="981" width="0.1053%" height="15" fill="rgb(245,210,41)" fg:x="558" fg:w="22"/><text x="2.9202%" y="991.50"></text></g><g><title>`0x7FF7E0088BAC (22 samples, 0.11%)</title><rect x="2.6702%" y="965" width="0.1053%" height="15" fill="rgb(206,13,37)" fg:x="558" fg:w="22"/><text x="2.9202%" y="975.50"></text></g><g><title>`0x7FF7E008FB41 (22 samples, 0.11%)</title><rect x="2.6702%" y="949" width="0.1053%" height="15" fill="rgb(250,61,18)" fg:x="558" fg:w="22"/><text x="2.9202%" y="959.50"></text></g><g><title>`0x7FF7E00BB138 (22 samples, 0.11%)</title><rect x="2.6702%" y="933" width="0.1053%" height="15" fill="rgb(235,172,48)" fg:x="558" fg:w="22"/><text x="2.9202%" y="943.50"></text></g><g><title>`0x7FF7E0087E92 (22 samples, 0.11%)</title><rect x="2.6702%" y="917" width="0.1053%" height="15" fill="rgb(249,201,17)" fg:x="558" fg:w="22"/><text x="2.9202%" y="927.50"></text></g><g><title>`0x7FF7E01917E5 (19 samples, 0.09%)</title><rect x="2.6846%" y="901" width="0.0909%" height="15" fill="rgb(219,208,6)" fg:x="561" fg:w="19"/><text x="2.9346%" y="911.50"></text></g><g><title>`0x7FF7E0088066 (19 samples, 0.09%)</title><rect x="2.6846%" y="885" width="0.0909%" height="15" fill="rgb(248,31,23)" fg:x="561" fg:w="19"/><text x="2.9346%" y="895.50"></text></g><g><title>`0x7FF7E0088282 (19 samples, 0.09%)</title><rect x="2.6846%" y="869" width="0.0909%" height="15" fill="rgb(245,15,42)" fg:x="561" fg:w="19"/><text x="2.9346%" y="879.50"></text></g><g><title>`0x7FF7E008CF27 (19 samples, 0.09%)</title><rect x="2.6846%" y="853" width="0.0909%" height="15" fill="rgb(222,217,39)" fg:x="561" fg:w="19"/><text x="2.9346%" y="863.50"></text></g><g><title>`0x7FF7E0088959 (19 samples, 0.09%)</title><rect x="2.6846%" y="837" width="0.0909%" height="15" fill="rgb(210,219,27)" fg:x="561" fg:w="19"/><text x="2.9346%" y="847.50"></text></g><g><title>`0x7FF7E0088BAC (19 samples, 0.09%)</title><rect x="2.6846%" y="821" width="0.0909%" height="15" fill="rgb(252,166,36)" fg:x="561" fg:w="19"/><text x="2.9346%" y="831.50"></text></g><g><title>`0x7FF7E008FB41 (19 samples, 0.09%)</title><rect x="2.6846%" y="805" width="0.0909%" height="15" fill="rgb(245,132,34)" fg:x="561" fg:w="19"/><text x="2.9346%" y="815.50"></text></g><g><title>`0x7FF7E00BB138 (19 samples, 0.09%)</title><rect x="2.6846%" y="789" width="0.0909%" height="15" fill="rgb(236,54,3)" fg:x="561" fg:w="19"/><text x="2.9346%" y="799.50"></text></g><g><title>`0x7FF7E0087E92 (19 samples, 0.09%)</title><rect x="2.6846%" y="773" width="0.0909%" height="15" fill="rgb(241,173,43)" fg:x="561" fg:w="19"/><text x="2.9346%" y="783.50"></text></g><g><title>`0x7FF7E01917E5 (17 samples, 0.08%)</title><rect x="2.6942%" y="757" width="0.0814%" height="15" fill="rgb(215,190,9)" fg:x="563" fg:w="17"/><text x="2.9442%" y="767.50"></text></g><g><title>`0x7FF7E0088066 (17 samples, 0.08%)</title><rect x="2.6942%" y="741" width="0.0814%" height="15" fill="rgb(242,101,16)" fg:x="563" fg:w="17"/><text x="2.9442%" y="751.50"></text></g><g><title>`0x7FF7E0088282 (17 samples, 0.08%)</title><rect x="2.6942%" y="725" width="0.0814%" height="15" fill="rgb(223,190,21)" fg:x="563" fg:w="17"/><text x="2.9442%" y="735.50"></text></g><g><title>`0x7FF7E008CF27 (17 samples, 0.08%)</title><rect x="2.6942%" y="709" width="0.0814%" height="15" fill="rgb(215,228,25)" fg:x="563" fg:w="17"/><text x="2.9442%" y="719.50"></text></g><g><title>`0x7FF7E0088959 (17 samples, 0.08%)</title><rect x="2.6942%" y="693" width="0.0814%" height="15" fill="rgb(225,36,22)" fg:x="563" fg:w="17"/><text x="2.9442%" y="703.50"></text></g><g><title>`0x7FF7E0088BAC (17 samples, 0.08%)</title><rect x="2.6942%" y="677" width="0.0814%" height="15" fill="rgb(251,106,46)" fg:x="563" fg:w="17"/><text x="2.9442%" y="687.50"></text></g><g><title>`0x7FF7E008FB41 (10 samples, 0.05%)</title><rect x="2.7277%" y="661" width="0.0479%" height="15" fill="rgb(208,90,1)" fg:x="570" fg:w="10"/><text x="2.9777%" y="671.50"></text></g><g><title>`0x7FF7E00BB138 (10 samples, 0.05%)</title><rect x="2.7277%" y="645" width="0.0479%" height="15" fill="rgb(243,10,4)" fg:x="570" fg:w="10"/><text x="2.9777%" y="655.50"></text></g><g><title>`0x7FF7E0087E92 (10 samples, 0.05%)</title><rect x="2.7277%" y="629" width="0.0479%" height="15" fill="rgb(212,137,27)" fg:x="570" fg:w="10"/><text x="2.9777%" y="639.50"></text></g><g><title>`0x7FF7E01917E5 (9 samples, 0.04%)</title><rect x="2.7324%" y="613" width="0.0431%" height="15" fill="rgb(231,220,49)" fg:x="571" fg:w="9"/><text x="2.9824%" y="623.50"></text></g><g><title>`0x7FF7E0088066 (8 samples, 0.04%)</title><rect x="2.7372%" y="597" width="0.0383%" height="15" fill="rgb(237,96,20)" fg:x="572" fg:w="8"/><text x="2.9872%" y="607.50"></text></g><g><title>`0x7FF7E0088282 (8 samples, 0.04%)</title><rect x="2.7372%" y="581" width="0.0383%" height="15" fill="rgb(239,229,30)" fg:x="572" fg:w="8"/><text x="2.9872%" y="591.50"></text></g><g><title>`0x7FF7E008CF27 (8 samples, 0.04%)</title><rect x="2.7372%" y="565" width="0.0383%" height="15" fill="rgb(219,65,33)" fg:x="572" fg:w="8"/><text x="2.9872%" y="575.50"></text></g><g><title>`0x7FF7E0088959 (8 samples, 0.04%)</title><rect x="2.7372%" y="549" width="0.0383%" height="15" fill="rgb(243,134,7)" fg:x="572" fg:w="8"/><text x="2.9872%" y="559.50"></text></g><g><title>`0x7FF7E0088BAC (8 samples, 0.04%)</title><rect x="2.7372%" y="533" width="0.0383%" height="15" fill="rgb(216,177,54)" fg:x="572" fg:w="8"/><text x="2.9872%" y="543.50"></text></g><g><title>`0x7FF7E008FB41 (8 samples, 0.04%)</title><rect x="2.7372%" y="517" width="0.0383%" height="15" fill="rgb(211,160,20)" fg:x="572" fg:w="8"/><text x="2.9872%" y="527.50"></text></g><g><title>`0x7FF7E00BB138 (8 samples, 0.04%)</title><rect x="2.7372%" y="501" width="0.0383%" height="15" fill="rgb(239,85,39)" fg:x="572" fg:w="8"/><text x="2.9872%" y="511.50"></text></g><g><title>`0x7FF7E0087E92 (8 samples, 0.04%)</title><rect x="2.7372%" y="485" width="0.0383%" height="15" fill="rgb(232,125,22)" fg:x="572" fg:w="8"/><text x="2.9872%" y="495.50"></text></g><g><title>`0x7FF7E01917E5 (3 samples, 0.01%)</title><rect x="2.7612%" y="469" width="0.0144%" height="15" fill="rgb(244,57,34)" fg:x="577" fg:w="3"/><text x="3.0112%" y="479.50"></text></g><g><title>`0x7FF7E0088066 (3 samples, 0.01%)</title><rect x="2.7612%" y="453" width="0.0144%" height="15" fill="rgb(214,203,32)" fg:x="577" fg:w="3"/><text x="3.0112%" y="463.50"></text></g><g><title>`0x7FF7E0088282 (3 samples, 0.01%)</title><rect x="2.7612%" y="437" width="0.0144%" height="15" fill="rgb(207,58,43)" fg:x="577" fg:w="3"/><text x="3.0112%" y="447.50"></text></g><g><title>`0x7FF7E008CF27 (3 samples, 0.01%)</title><rect x="2.7612%" y="421" width="0.0144%" height="15" fill="rgb(215,193,15)" fg:x="577" fg:w="3"/><text x="3.0112%" y="431.50"></text></g><g><title>`0x7FF7E0088959 (3 samples, 0.01%)</title><rect x="2.7612%" y="405" width="0.0144%" height="15" fill="rgb(232,15,44)" fg:x="577" fg:w="3"/><text x="3.0112%" y="415.50"></text></g><g><title>`0x7FF7E0088BAC (3 samples, 0.01%)</title><rect x="2.7612%" y="389" width="0.0144%" height="15" fill="rgb(212,3,48)" fg:x="577" fg:w="3"/><text x="3.0112%" y="399.50"></text></g><g><title>`0x7FF7E0088066 (50 samples, 0.24%)</title><rect x="2.5410%" y="2181" width="0.2393%" height="15" fill="rgb(218,128,7)" fg:x="531" fg:w="50"/><text x="2.7910%" y="2191.50"></text></g><g><title>`0x7FF7E0088282 (50 samples, 0.24%)</title><rect x="2.5410%" y="2165" width="0.2393%" height="15" fill="rgb(226,216,39)" fg:x="531" fg:w="50"/><text x="2.7910%" y="2175.50"></text></g><g><title>`0x7FF7E008CF27 (50 samples, 0.24%)</title><rect x="2.5410%" y="2149" width="0.2393%" height="15" fill="rgb(243,47,51)" fg:x="531" fg:w="50"/><text x="2.7910%" y="2159.50"></text></g><g><title>`0x7FF7E0088959 (50 samples, 0.24%)</title><rect x="2.5410%" y="2133" width="0.2393%" height="15" fill="rgb(241,183,40)" fg:x="531" fg:w="50"/><text x="2.7910%" y="2143.50"></text></g><g><title>`0x7FF7E0088BAC (50 samples, 0.24%)</title><rect x="2.5410%" y="2117" width="0.2393%" height="15" fill="rgb(231,217,32)" fg:x="531" fg:w="50"/><text x="2.7910%" y="2127.50"></text></g><g><title>`0x7FF7E008FB41 (49 samples, 0.23%)</title><rect x="2.5458%" y="2101" width="0.2345%" height="15" fill="rgb(229,61,38)" fg:x="532" fg:w="49"/><text x="2.7958%" y="2111.50"></text></g><g><title>`0x7FF7E00BB138 (48 samples, 0.23%)</title><rect x="2.5506%" y="2085" width="0.2297%" height="15" fill="rgb(225,210,5)" fg:x="533" fg:w="48"/><text x="2.8006%" y="2095.50"></text></g><g><title>`0x7FF7E0087E92 (48 samples, 0.23%)</title><rect x="2.5506%" y="2069" width="0.2297%" height="15" fill="rgb(231,79,45)" fg:x="533" fg:w="48"/><text x="2.8006%" y="2079.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (42 samples, 0.20%)</title><rect x="2.5793%" y="2053" width="0.2010%" height="15" fill="rgb(224,100,7)" fg:x="539" fg:w="42"/><text x="2.8293%" y="2063.50"></text></g><g><title>`0x7FF7E0087E92 (56 samples, 0.27%)</title><rect x="2.5410%" y="2213" width="0.2680%" height="15" fill="rgb(241,198,18)" fg:x="531" fg:w="56"/><text x="2.7910%" y="2223.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (56 samples, 0.27%)</title><rect x="2.5410%" y="2197" width="0.2680%" height="15" fill="rgb(252,97,53)" fg:x="531" fg:w="56"/><text x="2.7910%" y="2207.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.7851%" y="2181" width="0.0239%" height="15" fill="rgb(220,88,7)" fg:x="582" fg:w="5"/><text x="3.0351%" y="2191.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2165" width="0.0191%" height="15" fill="rgb(213,176,14)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2175.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2149" width="0.0191%" height="15" fill="rgb(246,73,7)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2159.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2133" width="0.0191%" height="15" fill="rgb(245,64,36)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2117" width="0.0191%" height="15" fill="rgb(245,80,10)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2127.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2101" width="0.0191%" height="15" fill="rgb(232,107,50)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2111.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2085" width="0.0191%" height="15" fill="rgb(253,3,0)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2095.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2069" width="0.0191%" height="15" fill="rgb(212,99,53)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2079.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.7899%" y="2053" width="0.0191%" height="15" fill="rgb(249,111,54)" fg:x="583" fg:w="4"/><text x="3.0399%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.7947%" y="2037" width="0.0144%" height="15" fill="rgb(249,55,30)" fg:x="584" fg:w="3"/><text x="3.0447%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.7947%" y="2021" width="0.0144%" height="15" fill="rgb(237,47,42)" fg:x="584" fg:w="3"/><text x="3.0447%" y="2031.50"></text></g><g><title>`0x7FF7E00F66DB (5 samples, 0.02%)</title><rect x="2.8138%" y="1989" width="0.0239%" height="15" fill="rgb(211,20,18)" fg:x="588" fg:w="5"/><text x="3.0638%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.8138%" y="1973" width="0.0239%" height="15" fill="rgb(231,203,46)" fg:x="588" fg:w="5"/><text x="3.0638%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.8186%" y="1957" width="0.0191%" height="15" fill="rgb(237,142,3)" fg:x="589" fg:w="4"/><text x="3.0686%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.8234%" y="1941" width="0.0144%" height="15" fill="rgb(241,107,1)" fg:x="590" fg:w="3"/><text x="3.0734%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.8234%" y="1925" width="0.0144%" height="15" fill="rgb(229,83,13)" fg:x="590" fg:w="3"/><text x="3.0734%" y="1935.50"></text></g><g><title>`0x7FF7E00F66DB (6 samples, 0.03%)</title><rect x="2.8138%" y="2053" width="0.0287%" height="15" fill="rgb(241,91,40)" fg:x="588" fg:w="6"/><text x="3.0638%" y="2063.50"></text></g><g><title>`0x7FF7E022ED99 (6 samples, 0.03%)</title><rect x="2.8138%" y="2037" width="0.0287%" height="15" fill="rgb(225,3,45)" fg:x="588" fg:w="6"/><text x="3.0638%" y="2047.50"></text></g><g><title>`0x7FF7E0239E2B (6 samples, 0.03%)</title><rect x="2.8138%" y="2021" width="0.0287%" height="15" fill="rgb(244,223,14)" fg:x="588" fg:w="6"/><text x="3.0638%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="2.8138%" y="2005" width="0.0287%" height="15" fill="rgb(224,124,37)" fg:x="588" fg:w="6"/><text x="3.0638%" y="2015.50"></text></g><g><title>`0x7FF7E038A686 (5 samples, 0.02%)</title><rect x="2.8425%" y="2005" width="0.0239%" height="15" fill="rgb(251,171,30)" fg:x="594" fg:w="5"/><text x="3.0925%" y="2015.50"></text></g><g><title>`0x7FF7E02669BC (5 samples, 0.02%)</title><rect x="2.8425%" y="1989" width="0.0239%" height="15" fill="rgb(236,46,54)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1999.50"></text></g><g><title>`0x7FF7E0270672 (5 samples, 0.02%)</title><rect x="2.8425%" y="1973" width="0.0239%" height="15" fill="rgb(245,213,5)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1983.50"></text></g><g><title>`0x7FF7E0318A86 (5 samples, 0.02%)</title><rect x="2.8425%" y="1957" width="0.0239%" height="15" fill="rgb(230,144,27)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1967.50"></text></g><g><title>`0x7FF7E0309C82 (5 samples, 0.02%)</title><rect x="2.8425%" y="1941" width="0.0239%" height="15" fill="rgb(220,86,6)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1951.50"></text></g><g><title>`0x7FF7E0320144 (5 samples, 0.02%)</title><rect x="2.8425%" y="1925" width="0.0239%" height="15" fill="rgb(240,20,13)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1935.50"></text></g><g><title>`0x7FF7E031AB5C (5 samples, 0.02%)</title><rect x="2.8425%" y="1909" width="0.0239%" height="15" fill="rgb(217,89,34)" fg:x="594" fg:w="5"/><text x="3.0925%" y="1919.50"></text></g><g><title>`0x7FF7E0331550 (4 samples, 0.02%)</title><rect x="2.8473%" y="1893" width="0.0191%" height="15" fill="rgb(229,13,5)" fg:x="595" fg:w="4"/><text x="3.0973%" y="1903.50"></text></g><g><title>`0x7FF7E0335B06 (3 samples, 0.01%)</title><rect x="2.8521%" y="1877" width="0.0144%" height="15" fill="rgb(244,67,35)" fg:x="596" fg:w="3"/><text x="3.1021%" y="1887.50"></text></g><g><title>`0x7FF7E030E7F8 (3 samples, 0.01%)</title><rect x="2.8521%" y="1861" width="0.0144%" height="15" fill="rgb(221,40,2)" fg:x="596" fg:w="3"/><text x="3.1021%" y="1871.50"></text></g><g><title>`0x7FF7E030B03F (3 samples, 0.01%)</title><rect x="2.8521%" y="1845" width="0.0144%" height="15" fill="rgb(237,157,21)" fg:x="596" fg:w="3"/><text x="3.1021%" y="1855.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="2.8521%" y="1829" width="0.0144%" height="15" fill="rgb(222,94,11)" fg:x="596" fg:w="3"/><text x="3.1021%" y="1839.50"></text></g><g><title>`0x7FF7E038613C (3 samples, 0.01%)</title><rect x="2.8856%" y="1733" width="0.0144%" height="15" fill="rgb(249,113,6)" fg:x="603" fg:w="3"/><text x="3.1356%" y="1743.50"></text></g><g><title>`0x7FF7E0217490 (3 samples, 0.01%)</title><rect x="2.8856%" y="1717" width="0.0144%" height="15" fill="rgb(238,137,36)" fg:x="603" fg:w="3"/><text x="3.1356%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.8808%" y="1765" width="0.0239%" height="15" fill="rgb(210,102,26)" fg:x="602" fg:w="5"/><text x="3.1308%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="2.8856%" y="1749" width="0.0191%" height="15" fill="rgb(218,30,30)" fg:x="603" fg:w="4"/><text x="3.1356%" y="1759.50"></text></g><g><title>`0x7FF7E030E7F8 (8 samples, 0.04%)</title><rect x="2.8712%" y="1861" width="0.0383%" height="15" fill="rgb(214,67,26)" fg:x="600" fg:w="8"/><text x="3.1212%" y="1871.50"></text></g><g><title>`0x7FF7E030B03F (8 samples, 0.04%)</title><rect x="2.8712%" y="1845" width="0.0383%" height="15" fill="rgb(251,9,53)" fg:x="600" fg:w="8"/><text x="3.1212%" y="1855.50"></text></g><g><title>`0x7FF7E02669BC (8 samples, 0.04%)</title><rect x="2.8712%" y="1829" width="0.0383%" height="15" fill="rgb(228,204,25)" fg:x="600" fg:w="8"/><text x="3.1212%" y="1839.50"></text></g><g><title>`0x7FF7E0270764 (8 samples, 0.04%)</title><rect x="2.8712%" y="1813" width="0.0383%" height="15" fill="rgb(207,153,8)" fg:x="600" fg:w="8"/><text x="3.1212%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="2.8712%" y="1797" width="0.0383%" height="15" fill="rgb(242,9,16)" fg:x="600" fg:w="8"/><text x="3.1212%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="2.8808%" y="1781" width="0.0287%" height="15" fill="rgb(217,211,10)" fg:x="602" fg:w="6"/><text x="3.1308%" y="1791.50"></text></g><g><title>`0x7FF7E0239819 (15 samples, 0.07%)</title><rect x="2.8425%" y="2021" width="0.0718%" height="15" fill="rgb(219,228,52)" fg:x="594" fg:w="15"/><text x="3.0925%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="2.8664%" y="2005" width="0.0479%" height="15" fill="rgb(231,92,29)" fg:x="599" fg:w="10"/><text x="3.1164%" y="2015.50"></text></g><g><title>`0x7FF7E02669BC (10 samples, 0.05%)</title><rect x="2.8664%" y="1989" width="0.0479%" height="15" fill="rgb(232,8,23)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1999.50"></text></g><g><title>`0x7FF7E0270672 (10 samples, 0.05%)</title><rect x="2.8664%" y="1973" width="0.0479%" height="15" fill="rgb(216,211,34)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1983.50"></text></g><g><title>`0x7FF7E0318A86 (10 samples, 0.05%)</title><rect x="2.8664%" y="1957" width="0.0479%" height="15" fill="rgb(236,151,0)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1967.50"></text></g><g><title>`0x7FF7E0309C82 (10 samples, 0.05%)</title><rect x="2.8664%" y="1941" width="0.0479%" height="15" fill="rgb(209,168,3)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1951.50"></text></g><g><title>`0x7FF7E0320144 (10 samples, 0.05%)</title><rect x="2.8664%" y="1925" width="0.0479%" height="15" fill="rgb(208,129,28)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1935.50"></text></g><g><title>`0x7FF7E031AB5C (10 samples, 0.05%)</title><rect x="2.8664%" y="1909" width="0.0479%" height="15" fill="rgb(229,78,22)" fg:x="599" fg:w="10"/><text x="3.1164%" y="1919.50"></text></g><g><title>`0x7FF7E0331550 (9 samples, 0.04%)</title><rect x="2.8712%" y="1893" width="0.0431%" height="15" fill="rgb(228,187,13)" fg:x="600" fg:w="9"/><text x="3.1212%" y="1903.50"></text></g><g><title>`0x7FF7E0335B06 (9 samples, 0.04%)</title><rect x="2.8712%" y="1877" width="0.0431%" height="15" fill="rgb(240,119,24)" fg:x="600" fg:w="9"/><text x="3.1212%" y="1887.50"></text></g><g><title>`0x7FF7E02378F3 (24 samples, 0.11%)</title><rect x="2.8138%" y="2069" width="0.1148%" height="15" fill="rgb(209,194,42)" fg:x="588" fg:w="24"/><text x="3.0638%" y="2079.50"></text></g><g><title>`0x7FF7E00F681D (18 samples, 0.09%)</title><rect x="2.8425%" y="2053" width="0.0861%" height="15" fill="rgb(247,200,46)" fg:x="594" fg:w="18"/><text x="3.0925%" y="2063.50"></text></g><g><title>`0x7FF7E022ED99 (18 samples, 0.09%)</title><rect x="2.8425%" y="2037" width="0.0861%" height="15" fill="rgb(218,76,16)" fg:x="594" fg:w="18"/><text x="3.0925%" y="2047.50"></text></g><g><title>`0x7FF7E0239E2B (3 samples, 0.01%)</title><rect x="2.9143%" y="2021" width="0.0144%" height="15" fill="rgb(225,21,48)" fg:x="609" fg:w="3"/><text x="3.1643%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="2005" width="0.0144%" height="15" fill="rgb(239,223,50)" fg:x="609" fg:w="3"/><text x="3.1643%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1989" width="0.0144%" height="15" fill="rgb(244,45,21)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1973" width="0.0144%" height="15" fill="rgb(232,33,43)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1957" width="0.0144%" height="15" fill="rgb(209,8,3)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1941" width="0.0144%" height="15" fill="rgb(214,25,53)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1925" width="0.0144%" height="15" fill="rgb(254,186,54)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1935.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1909" width="0.0144%" height="15" fill="rgb(208,174,49)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="2.9143%" y="1893" width="0.0144%" height="15" fill="rgb(233,191,51)" fg:x="609" fg:w="3"/><text x="3.1643%" y="1903.50"></text></g><g><title>`0x7FF7E0263EC0 (3 samples, 0.01%)</title><rect x="2.9334%" y="1813" width="0.0144%" height="15" fill="rgb(222,134,10)" fg:x="613" fg:w="3"/><text x="3.1834%" y="1823.50"></text></g><g><title>`0x7FF7E023D454 (3 samples, 0.01%)</title><rect x="2.9334%" y="1797" width="0.0144%" height="15" fill="rgb(230,226,20)" fg:x="613" fg:w="3"/><text x="3.1834%" y="1807.50"></text></g><g><title>`0x7FF7E0319F22 (3 samples, 0.01%)</title><rect x="2.9574%" y="1653" width="0.0144%" height="15" fill="rgb(251,111,25)" fg:x="618" fg:w="3"/><text x="3.2074%" y="1663.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="2.9574%" y="1637" width="0.0144%" height="15" fill="rgb(224,40,46)" fg:x="618" fg:w="3"/><text x="3.2074%" y="1647.50"></text></g><g><title>`0x7FF7E0270524 (3 samples, 0.01%)</title><rect x="2.9574%" y="1621" width="0.0144%" height="15" fill="rgb(236,108,47)" fg:x="618" fg:w="3"/><text x="3.2074%" y="1631.50"></text></g><g><title>`0x7FF7E02397CF (10 samples, 0.05%)</title><rect x="2.9334%" y="1909" width="0.0479%" height="15" fill="rgb(234,93,0)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1919.50"></text></g><g><title>`0x7FF7E02CAC46 (10 samples, 0.05%)</title><rect x="2.9334%" y="1893" width="0.0479%" height="15" fill="rgb(224,213,32)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1903.50"></text></g><g><title>`0x7FF7E00F66DB (10 samples, 0.05%)</title><rect x="2.9334%" y="1877" width="0.0479%" height="15" fill="rgb(251,11,48)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1887.50"></text></g><g><title>`0x7FF7E022ED99 (10 samples, 0.05%)</title><rect x="2.9334%" y="1861" width="0.0479%" height="15" fill="rgb(236,173,5)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1871.50"></text></g><g><title>`0x7FF7E0239C25 (10 samples, 0.05%)</title><rect x="2.9334%" y="1845" width="0.0479%" height="15" fill="rgb(230,95,12)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1855.50"></text></g><g><title>`0x7FF7E02CB53E (10 samples, 0.05%)</title><rect x="2.9334%" y="1829" width="0.0479%" height="15" fill="rgb(232,209,1)" fg:x="613" fg:w="10"/><text x="3.1834%" y="1839.50"></text></g><g><title>`0x7FF7E02642E3 (7 samples, 0.03%)</title><rect x="2.9478%" y="1813" width="0.0335%" height="15" fill="rgb(232,6,1)" fg:x="616" fg:w="7"/><text x="3.1978%" y="1823.50"></text></g><g><title>`0x7FF7E031B261 (7 samples, 0.03%)</title><rect x="2.9478%" y="1797" width="0.0335%" height="15" fill="rgb(210,224,50)" fg:x="616" fg:w="7"/><text x="3.1978%" y="1807.50"></text></g><g><title>`0x7FF7E02669BC (7 samples, 0.03%)</title><rect x="2.9478%" y="1781" width="0.0335%" height="15" fill="rgb(228,127,35)" fg:x="616" fg:w="7"/><text x="3.1978%" y="1791.50"></text></g><g><title>`0x7FF7E027097A (7 samples, 0.03%)</title><rect x="2.9478%" y="1765" width="0.0335%" height="15" fill="rgb(245,102,45)" fg:x="616" fg:w="7"/><text x="3.1978%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="2.9574%" y="1749" width="0.0239%" height="15" fill="rgb(214,1,49)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1759.50"></text></g><g><title>`0x7FF7E02669BC (5 samples, 0.02%)</title><rect x="2.9574%" y="1733" width="0.0239%" height="15" fill="rgb(226,163,40)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1743.50"></text></g><g><title>`0x7FF7E0270672 (5 samples, 0.02%)</title><rect x="2.9574%" y="1717" width="0.0239%" height="15" fill="rgb(239,212,28)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1727.50"></text></g><g><title>`0x7FF7E0318A86 (5 samples, 0.02%)</title><rect x="2.9574%" y="1701" width="0.0239%" height="15" fill="rgb(220,20,13)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1711.50"></text></g><g><title>`0x7FF7E0309C82 (5 samples, 0.02%)</title><rect x="2.9574%" y="1685" width="0.0239%" height="15" fill="rgb(210,164,35)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1695.50"></text></g><g><title>`0x7FF7E0320144 (5 samples, 0.02%)</title><rect x="2.9574%" y="1669" width="0.0239%" height="15" fill="rgb(248,109,41)" fg:x="618" fg:w="5"/><text x="3.2074%" y="1679.50"></text></g><g><title>`0x7FF7E0319F22 (3 samples, 0.01%)</title><rect x="2.9813%" y="1797" width="0.0144%" height="15" fill="rgb(238,23,50)" fg:x="623" fg:w="3"/><text x="3.2313%" y="1807.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="2.9813%" y="1781" width="0.0144%" height="15" fill="rgb(211,48,49)" fg:x="623" fg:w="3"/><text x="3.2313%" y="1791.50"></text></g><g><title>`0x7FF7E0270524 (3 samples, 0.01%)</title><rect x="2.9813%" y="1765" width="0.0144%" height="15" fill="rgb(223,36,21)" fg:x="623" fg:w="3"/><text x="3.2313%" y="1775.50"></text></g><g><title>`0x7FF7E0318A86 (4 samples, 0.02%)</title><rect x="2.9813%" y="1845" width="0.0191%" height="15" fill="rgb(207,123,46)" fg:x="623" fg:w="4"/><text x="3.2313%" y="1855.50"></text></g><g><title>`0x7FF7E0309C82 (4 samples, 0.02%)</title><rect x="2.9813%" y="1829" width="0.0191%" height="15" fill="rgb(240,218,32)" fg:x="623" fg:w="4"/><text x="3.2313%" y="1839.50"></text></g><g><title>`0x7FF7E0320144 (4 samples, 0.02%)</title><rect x="2.9813%" y="1813" width="0.0191%" height="15" fill="rgb(252,5,43)" fg:x="623" fg:w="4"/><text x="3.2313%" y="1823.50"></text></g><g><title>`0x7FF7E022ED99 (16 samples, 0.08%)</title><rect x="2.9287%" y="1989" width="0.0766%" height="15" fill="rgb(252,84,19)" fg:x="612" fg:w="16"/><text x="3.1787%" y="1999.50"></text></g><g><title>`0x7FF7E0239785 (16 samples, 0.08%)</title><rect x="2.9287%" y="1973" width="0.0766%" height="15" fill="rgb(243,152,39)" fg:x="612" fg:w="16"/><text x="3.1787%" y="1983.50"></text></g><g><title>`0x7FF7E02171A8 (16 samples, 0.08%)</title><rect x="2.9287%" y="1957" width="0.0766%" height="15" fill="rgb(234,160,15)" fg:x="612" fg:w="16"/><text x="3.1787%" y="1967.50"></text></g><g><title>`0x7FF7E00F681D (15 samples, 0.07%)</title><rect x="2.9334%" y="1941" width="0.0718%" height="15" fill="rgb(237,34,20)" fg:x="613" fg:w="15"/><text x="3.1834%" y="1951.50"></text></g><g><title>`0x7FF7E022ED99 (15 samples, 0.07%)</title><rect x="2.9334%" y="1925" width="0.0718%" height="15" fill="rgb(229,97,13)" fg:x="613" fg:w="15"/><text x="3.1834%" y="1935.50"></text></g><g><title>`0x7FF7E0239819 (5 samples, 0.02%)</title><rect x="2.9813%" y="1909" width="0.0239%" height="15" fill="rgb(234,71,50)" fg:x="623" fg:w="5"/><text x="3.2313%" y="1919.50"></text></g><g><title>`0x7FF7E038A686 (5 samples, 0.02%)</title><rect x="2.9813%" y="1893" width="0.0239%" height="15" fill="rgb(253,155,4)" fg:x="623" fg:w="5"/><text x="3.2313%" y="1903.50"></text></g><g><title>`0x7FF7E02669BC (5 samples, 0.02%)</title><rect x="2.9813%" y="1877" width="0.0239%" height="15" fill="rgb(222,185,37)" fg:x="623" fg:w="5"/><text x="3.2313%" y="1887.50"></text></g><g><title>`0x7FF7E0270672 (5 samples, 0.02%)</title><rect x="2.9813%" y="1861" width="0.0239%" height="15" fill="rgb(251,177,13)" fg:x="623" fg:w="5"/><text x="3.2313%" y="1871.50"></text></g><g><title>`0x7FF7E038FC7E (17 samples, 0.08%)</title><rect x="2.9287%" y="2021" width="0.0814%" height="15" fill="rgb(250,179,40)" fg:x="612" fg:w="17"/><text x="3.1787%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (17 samples, 0.08%)</title><rect x="2.9287%" y="2005" width="0.0814%" height="15" fill="rgb(242,44,2)" fg:x="612" fg:w="17"/><text x="3.1787%" y="2015.50"></text></g><g><title>`0x7FF7E00F66DB (3 samples, 0.01%)</title><rect x="3.0100%" y="1941" width="0.0144%" height="15" fill="rgb(216,177,13)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1951.50"></text></g><g><title>`0x7FF7E022ED99 (3 samples, 0.01%)</title><rect x="3.0100%" y="1925" width="0.0144%" height="15" fill="rgb(216,106,43)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1935.50"></text></g><g><title>`0x7FF7E02397CF (3 samples, 0.01%)</title><rect x="3.0100%" y="1909" width="0.0144%" height="15" fill="rgb(216,183,2)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1919.50"></text></g><g><title>`0x7FF7E02CAC46 (3 samples, 0.01%)</title><rect x="3.0100%" y="1893" width="0.0144%" height="15" fill="rgb(249,75,3)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1903.50"></text></g><g><title>`0x7FF7E00F66DB (3 samples, 0.01%)</title><rect x="3.0100%" y="1877" width="0.0144%" height="15" fill="rgb(219,67,39)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1887.50"></text></g><g><title>`0x7FF7E022ED99 (3 samples, 0.01%)</title><rect x="3.0100%" y="1861" width="0.0144%" height="15" fill="rgb(253,228,2)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1871.50"></text></g><g><title>`0x7FF7E0239C25 (3 samples, 0.01%)</title><rect x="3.0100%" y="1845" width="0.0144%" height="15" fill="rgb(235,138,27)" fg:x="629" fg:w="3"/><text x="3.2600%" y="1855.50"></text></g><g><title>`0x7FF7E0338C94 (4 samples, 0.02%)</title><rect x="3.0339%" y="1637" width="0.0191%" height="15" fill="rgb(236,97,51)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1647.50"></text></g><g><title>deno.exe`Builtins_ArrayPrototypePush (4 samples, 0.02%)</title><rect x="3.0339%" y="1621" width="0.0191%" height="15" fill="rgb(240,80,30)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1631.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (4 samples, 0.02%)</title><rect x="3.0339%" y="1605" width="0.0191%" height="15" fill="rgb(230,178,19)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1615.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.02%)</title><rect x="3.0339%" y="1589" width="0.0191%" height="15" fill="rgb(210,190,27)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1599.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (4 samples, 0.02%)</title><rect x="3.0339%" y="1573" width="0.0191%" height="15" fill="rgb(222,107,31)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1583.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.02%)</title><rect x="3.0339%" y="1557" width="0.0191%" height="15" fill="rgb(216,127,34)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1567.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (4 samples, 0.02%)</title><rect x="3.0339%" y="1541" width="0.0191%" height="15" fill="rgb(234,116,52)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1551.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (4 samples, 0.02%)</title><rect x="3.0339%" y="1525" width="0.0191%" height="15" fill="rgb(222,124,15)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1535.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.02%)</title><rect x="3.0339%" y="1509" width="0.0191%" height="15" fill="rgb(231,179,28)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1519.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (4 samples, 0.02%)</title><rect x="3.0339%" y="1493" width="0.0191%" height="15" fill="rgb(226,93,45)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1503.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.02%)</title><rect x="3.0339%" y="1477" width="0.0191%" height="15" fill="rgb(215,8,51)" fg:x="634" fg:w="4"/><text x="3.2839%" y="1487.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (3 samples, 0.01%)</title><rect x="3.0387%" y="1461" width="0.0144%" height="15" fill="rgb(223,106,5)" fg:x="635" fg:w="3"/><text x="3.2887%" y="1471.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (3 samples, 0.01%)</title><rect x="3.0387%" y="1445" width="0.0144%" height="15" fill="rgb(250,191,5)" fg:x="635" fg:w="3"/><text x="3.2887%" y="1455.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (3 samples, 0.01%)</title><rect x="3.0387%" y="1429" width="0.0144%" height="15" fill="rgb(242,132,44)" fg:x="635" fg:w="3"/><text x="3.2887%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (3 samples, 0.01%)</title><rect x="3.0387%" y="1413" width="0.0144%" height="15" fill="rgb(251,152,29)" fg:x="635" fg:w="3"/><text x="3.2887%" y="1423.50"></text></g><g><title>`0x7FF7E0320144 (7 samples, 0.03%)</title><rect x="3.0244%" y="1813" width="0.0335%" height="15" fill="rgb(218,179,5)" fg:x="632" fg:w="7"/><text x="3.2744%" y="1823.50"></text></g><g><title>`0x7FF7E031AB5C (6 samples, 0.03%)</title><rect x="3.0291%" y="1797" width="0.0287%" height="15" fill="rgb(227,67,19)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1807.50"></text></g><g><title>`0x7FF7E03315E8 (6 samples, 0.03%)</title><rect x="3.0291%" y="1781" width="0.0287%" height="15" fill="rgb(233,119,31)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1791.50"></text></g><g><title>`0x7FF7E0335135 (6 samples, 0.03%)</title><rect x="3.0291%" y="1765" width="0.0287%" height="15" fill="rgb(241,120,22)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1775.50"></text></g><g><title>`0x7FF7E030E7F8 (6 samples, 0.03%)</title><rect x="3.0291%" y="1749" width="0.0287%" height="15" fill="rgb(224,102,30)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1759.50"></text></g><g><title>`0x7FF7E030B03F (6 samples, 0.03%)</title><rect x="3.0291%" y="1733" width="0.0287%" height="15" fill="rgb(210,164,37)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1743.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="3.0291%" y="1717" width="0.0287%" height="15" fill="rgb(226,191,16)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1727.50"></text></g><g><title>`0x7FF7E027097A (6 samples, 0.03%)</title><rect x="3.0291%" y="1701" width="0.0287%" height="15" fill="rgb(214,40,45)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="3.0291%" y="1685" width="0.0287%" height="15" fill="rgb(244,29,26)" fg:x="633" fg:w="6"/><text x="3.2791%" y="1695.50"></text></g><g><title>`0x7FF7E032BF15 (5 samples, 0.02%)</title><rect x="3.0339%" y="1669" width="0.0239%" height="15" fill="rgb(216,16,5)" fg:x="634" fg:w="5"/><text x="3.2839%" y="1679.50"></text></g><g><title>`0x7FF7E0337434 (5 samples, 0.02%)</title><rect x="3.0339%" y="1653" width="0.0239%" height="15" fill="rgb(249,76,35)" fg:x="634" fg:w="5"/><text x="3.2839%" y="1663.50"></text></g><g><title>`0x7FF7E0318A86 (8 samples, 0.04%)</title><rect x="3.0244%" y="1845" width="0.0383%" height="15" fill="rgb(207,11,44)" fg:x="632" fg:w="8"/><text x="3.2744%" y="1855.50"></text></g><g><title>`0x7FF7E0309C82 (8 samples, 0.04%)</title><rect x="3.0244%" y="1829" width="0.0383%" height="15" fill="rgb(228,190,49)" fg:x="632" fg:w="8"/><text x="3.2744%" y="1839.50"></text></g><g><title>`0x7FF7E0237981 (29 samples, 0.14%)</title><rect x="2.9287%" y="2069" width="0.1388%" height="15" fill="rgb(214,173,12)" fg:x="612" fg:w="29"/><text x="3.1787%" y="2079.50"></text></g><g><title>`0x7FF7E03864CA (29 samples, 0.14%)</title><rect x="2.9287%" y="2053" width="0.1388%" height="15" fill="rgb(218,26,35)" fg:x="612" fg:w="29"/><text x="3.1787%" y="2063.50"></text></g><g><title>deno.exe`Builtins_SetPrototypeForEach (29 samples, 0.14%)</title><rect x="2.9287%" y="2037" width="0.1388%" height="15" fill="rgb(220,200,19)" fg:x="612" fg:w="29"/><text x="3.1787%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="3.0100%" y="2021" width="0.0574%" height="15" fill="rgb(239,95,49)" fg:x="629" fg:w="12"/><text x="3.2600%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="3.0100%" y="2005" width="0.0574%" height="15" fill="rgb(235,85,53)" fg:x="629" fg:w="12"/><text x="3.2600%" y="2015.50"></text></g><g><title>`0x7FF7E022ED99 (12 samples, 0.06%)</title><rect x="3.0100%" y="1989" width="0.0574%" height="15" fill="rgb(233,133,31)" fg:x="629" fg:w="12"/><text x="3.2600%" y="1999.50"></text></g><g><title>`0x7FF7E0239785 (12 samples, 0.06%)</title><rect x="3.0100%" y="1973" width="0.0574%" height="15" fill="rgb(218,25,20)" fg:x="629" fg:w="12"/><text x="3.2600%" y="1983.50"></text></g><g><title>`0x7FF7E02171A8 (12 samples, 0.06%)</title><rect x="3.0100%" y="1957" width="0.0574%" height="15" fill="rgb(252,210,38)" fg:x="629" fg:w="12"/><text x="3.2600%" y="1967.50"></text></g><g><title>`0x7FF7E00F681D (9 samples, 0.04%)</title><rect x="3.0244%" y="1941" width="0.0431%" height="15" fill="rgb(242,134,21)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1951.50"></text></g><g><title>`0x7FF7E022ED99 (9 samples, 0.04%)</title><rect x="3.0244%" y="1925" width="0.0431%" height="15" fill="rgb(213,28,48)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1935.50"></text></g><g><title>`0x7FF7E0239819 (9 samples, 0.04%)</title><rect x="3.0244%" y="1909" width="0.0431%" height="15" fill="rgb(250,196,2)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1919.50"></text></g><g><title>`0x7FF7E038A686 (9 samples, 0.04%)</title><rect x="3.0244%" y="1893" width="0.0431%" height="15" fill="rgb(227,5,17)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1903.50"></text></g><g><title>`0x7FF7E02669BC (9 samples, 0.04%)</title><rect x="3.0244%" y="1877" width="0.0431%" height="15" fill="rgb(221,226,24)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1887.50"></text></g><g><title>`0x7FF7E0270672 (9 samples, 0.04%)</title><rect x="3.0244%" y="1861" width="0.0431%" height="15" fill="rgb(211,5,48)" fg:x="632" fg:w="9"/><text x="3.2744%" y="1871.50"></text></g><g><title>`0x7FF7E022D3AF (55 samples, 0.26%)</title><rect x="2.8090%" y="2213" width="0.2632%" height="15" fill="rgb(219,150,6)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2223.50"></text></g><g><title>`0x7FF7E022D52B (55 samples, 0.26%)</title><rect x="2.8090%" y="2197" width="0.2632%" height="15" fill="rgb(251,46,16)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2207.50"></text></g><g><title>`0x7FF7E022D782 (55 samples, 0.26%)</title><rect x="2.8090%" y="2181" width="0.2632%" height="15" fill="rgb(220,204,40)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2191.50"></text></g><g><title>`0x7FF7E022D7F4 (55 samples, 0.26%)</title><rect x="2.8090%" y="2165" width="0.2632%" height="15" fill="rgb(211,85,2)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2175.50"></text></g><g><title>`0x7FF7E021FC65 (55 samples, 0.26%)</title><rect x="2.8090%" y="2149" width="0.2632%" height="15" fill="rgb(229,17,7)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2159.50"></text></g><g><title>`0x7FF7E022DB47 (55 samples, 0.26%)</title><rect x="2.8090%" y="2133" width="0.2632%" height="15" fill="rgb(239,72,28)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2143.50"></text></g><g><title>`0x7FF7E022DD5F (55 samples, 0.26%)</title><rect x="2.8090%" y="2117" width="0.2632%" height="15" fill="rgb(230,47,54)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2127.50"></text></g><g><title>`0x7FF7E022E64E (55 samples, 0.26%)</title><rect x="2.8090%" y="2101" width="0.2632%" height="15" fill="rgb(214,50,8)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2111.50"></text></g><g><title>`0x7FF7E022E890 (55 samples, 0.26%)</title><rect x="2.8090%" y="2085" width="0.2632%" height="15" fill="rgb(216,198,43)" fg:x="587" fg:w="55"/><text x="3.0590%" y="2095.50"></text></g><g><title>`0x7FF7E0231999 (5 samples, 0.02%)</title><rect x="3.0722%" y="2197" width="0.0239%" height="15" fill="rgb(234,20,35)" fg:x="642" fg:w="5"/><text x="3.3222%" y="2207.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="3.0722%" y="2181" width="0.0239%" height="15" fill="rgb(254,45,19)" fg:x="642" fg:w="5"/><text x="3.3222%" y="2191.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.0770%" y="2165" width="0.0191%" height="15" fill="rgb(219,14,44)" fg:x="643" fg:w="4"/><text x="3.3270%" y="2175.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.0818%" y="2149" width="0.0144%" height="15" fill="rgb(217,220,26)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2159.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.0818%" y="2133" width="0.0144%" height="15" fill="rgb(213,158,28)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.0818%" y="2117" width="0.0144%" height="15" fill="rgb(252,51,52)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2127.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.0818%" y="2101" width="0.0144%" height="15" fill="rgb(246,89,16)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2111.50"></text></g><g><title>deno.exe`Builtins_CompileLazy (3 samples, 0.01%)</title><rect x="3.0818%" y="2085" width="0.0144%" height="15" fill="rgb(216,158,49)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2095.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (3 samples, 0.01%)</title><rect x="3.0818%" y="2069" width="0.0144%" height="15" fill="rgb(236,107,19)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CompileLazy (3 samples, 0.01%)</title><rect x="3.0818%" y="2053" width="0.0144%" height="15" fill="rgb(228,185,30)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="3.0818%" y="2037" width="0.0144%" height="15" fill="rgb(246,134,8)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="3.0818%" y="2021" width="0.0144%" height="15" fill="rgb(214,143,50)" fg:x="644" fg:w="3"/><text x="3.3318%" y="2031.50"></text></g><g><title>`0x7FF7E0233459 (8 samples, 0.04%)</title><rect x="3.0722%" y="2213" width="0.0383%" height="15" fill="rgb(228,75,8)" fg:x="642" fg:w="8"/><text x="3.3222%" y="2223.50"></text></g><g><title>deno.exe`Builtins_ArrayPrototypeSort (11 samples, 0.05%)</title><rect x="3.1583%" y="2181" width="0.0526%" height="15" fill="rgb(207,175,4)" fg:x="660" fg:w="11"/><text x="3.4083%" y="2191.50"></text></g><g><title>deno.exe`Builtins_ArrayTimSort (11 samples, 0.05%)</title><rect x="3.1583%" y="2165" width="0.0526%" height="15" fill="rgb(205,108,24)" fg:x="660" fg:w="11"/><text x="3.4083%" y="2175.50"></text></g><g><title>deno.exe`Builtins_SortCompareUserFn (9 samples, 0.04%)</title><rect x="3.1679%" y="2149" width="0.0431%" height="15" fill="rgb(244,120,49)" fg:x="662" fg:w="9"/><text x="3.4179%" y="2159.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="3.1775%" y="2133" width="0.0335%" height="15" fill="rgb(223,47,38)" fg:x="664" fg:w="7"/><text x="3.4275%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="3.1775%" y="2117" width="0.0335%" height="15" fill="rgb(229,179,11)" fg:x="664" fg:w="7"/><text x="3.4275%" y="2127.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="3.1775%" y="2101" width="0.0335%" height="15" fill="rgb(231,122,1)" fg:x="664" fg:w="7"/><text x="3.4275%" y="2111.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.1918%" y="2085" width="0.0191%" height="15" fill="rgb(245,119,9)" fg:x="667" fg:w="4"/><text x="3.4418%" y="2095.50"></text></g><g><title>`0x7FF7E01C86AF (5 samples, 0.02%)</title><rect x="3.2876%" y="1749" width="0.0239%" height="15" fill="rgb(241,163,25)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1759.50"></text></g><g><title>`0x7FF7E01E2F21 (5 samples, 0.02%)</title><rect x="3.2876%" y="1733" width="0.0239%" height="15" fill="rgb(217,214,3)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1743.50"></text></g><g><title>`0x7FF7E01D8639 (5 samples, 0.02%)</title><rect x="3.2876%" y="1717" width="0.0239%" height="15" fill="rgb(240,86,28)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1727.50"></text></g><g><title>`0x7FF7E01C88B3 (5 samples, 0.02%)</title><rect x="3.2876%" y="1701" width="0.0239%" height="15" fill="rgb(215,47,9)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1711.50"></text></g><g><title>`0x7FF7E01D8E80 (5 samples, 0.02%)</title><rect x="3.2876%" y="1685" width="0.0239%" height="15" fill="rgb(252,25,45)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1695.50"></text></g><g><title>`0x7FF7E01F691D (5 samples, 0.02%)</title><rect x="3.2876%" y="1669" width="0.0239%" height="15" fill="rgb(251,164,9)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1679.50"></text></g><g><title>`0x7FF7E00F5CDD (5 samples, 0.02%)</title><rect x="3.2876%" y="1653" width="0.0239%" height="15" fill="rgb(233,194,0)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1663.50"></text></g><g><title>`0x7FF7E01D866F (5 samples, 0.02%)</title><rect x="3.2876%" y="1637" width="0.0239%" height="15" fill="rgb(249,111,24)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1647.50"></text></g><g><title>`0x7FF7E01C717A (5 samples, 0.02%)</title><rect x="3.2876%" y="1621" width="0.0239%" height="15" fill="rgb(250,223,3)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1631.50"></text></g><g><title>`0x7FF7E01C88B3 (5 samples, 0.02%)</title><rect x="3.2876%" y="1605" width="0.0239%" height="15" fill="rgb(236,178,37)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1615.50"></text></g><g><title>`0x7FF7E01D8E80 (5 samples, 0.02%)</title><rect x="3.2876%" y="1589" width="0.0239%" height="15" fill="rgb(241,158,50)" fg:x="687" fg:w="5"/><text x="3.5376%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.2923%" y="1573" width="0.0191%" height="15" fill="rgb(213,121,41)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1583.50"></text></g><g><title>`0x7FF7E00F5CDD (4 samples, 0.02%)</title><rect x="3.2923%" y="1557" width="0.0191%" height="15" fill="rgb(240,92,3)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1567.50"></text></g><g><title>`0x7FF7E01D8639 (4 samples, 0.02%)</title><rect x="3.2923%" y="1541" width="0.0191%" height="15" fill="rgb(205,123,3)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1551.50"></text></g><g><title>`0x7FF7E01C87E9 (4 samples, 0.02%)</title><rect x="3.2923%" y="1525" width="0.0191%" height="15" fill="rgb(205,97,47)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1535.50"></text></g><g><title>`0x7FF7E01B7DB7 (4 samples, 0.02%)</title><rect x="3.2923%" y="1509" width="0.0191%" height="15" fill="rgb(247,152,14)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1519.50"></text></g><g><title>`0x7FF7E01DF39A (4 samples, 0.02%)</title><rect x="3.2923%" y="1493" width="0.0191%" height="15" fill="rgb(248,195,53)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1503.50"></text></g><g><title>`0x7FF7E01D80A7 (4 samples, 0.02%)</title><rect x="3.2923%" y="1477" width="0.0191%" height="15" fill="rgb(226,201,16)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1487.50"></text></g><g><title>`0x7FF7E01BD3F9 (4 samples, 0.02%)</title><rect x="3.2923%" y="1461" width="0.0191%" height="15" fill="rgb(205,98,0)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1471.50"></text></g><g><title>`0x7FF7E01D8639 (4 samples, 0.02%)</title><rect x="3.2923%" y="1445" width="0.0191%" height="15" fill="rgb(214,191,48)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1455.50"></text></g><g><title>`0x7FF7E01C8306 (4 samples, 0.02%)</title><rect x="3.2923%" y="1429" width="0.0191%" height="15" fill="rgb(237,112,39)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1439.50"></text></g><g><title>`0x7FF7E01F27A1 (4 samples, 0.02%)</title><rect x="3.2923%" y="1413" width="0.0191%" height="15" fill="rgb(247,203,27)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1423.50"></text></g><g><title>`0x7FF7E01D866F (4 samples, 0.02%)</title><rect x="3.2923%" y="1397" width="0.0191%" height="15" fill="rgb(235,124,28)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1407.50"></text></g><g><title>`0x7FF7E01C79F2 (4 samples, 0.02%)</title><rect x="3.2923%" y="1381" width="0.0191%" height="15" fill="rgb(208,207,46)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1391.50"></text></g><g><title>`0x7FF7E01C87E9 (4 samples, 0.02%)</title><rect x="3.2923%" y="1365" width="0.0191%" height="15" fill="rgb(234,176,4)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1375.50"></text></g><g><title>`0x7FF7E01B7DB7 (4 samples, 0.02%)</title><rect x="3.2923%" y="1349" width="0.0191%" height="15" fill="rgb(230,133,28)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1359.50"></text></g><g><title>`0x7FF7E01DF39A (4 samples, 0.02%)</title><rect x="3.2923%" y="1333" width="0.0191%" height="15" fill="rgb(211,137,40)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1343.50"></text></g><g><title>`0x7FF7E01D80A7 (4 samples, 0.02%)</title><rect x="3.2923%" y="1317" width="0.0191%" height="15" fill="rgb(254,35,13)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1327.50"></text></g><g><title>`0x7FF7E01BD3F9 (4 samples, 0.02%)</title><rect x="3.2923%" y="1301" width="0.0191%" height="15" fill="rgb(225,49,51)" fg:x="688" fg:w="4"/><text x="3.5423%" y="1311.50"></text></g><g><title>`0x7FF7E01C8335 (7 samples, 0.03%)</title><rect x="3.2828%" y="1797" width="0.0335%" height="15" fill="rgb(251,10,15)" fg:x="686" fg:w="7"/><text x="3.5328%" y="1807.50"></text></g><g><title>`0x7FF7E01EA11A (7 samples, 0.03%)</title><rect x="3.2828%" y="1781" width="0.0335%" height="15" fill="rgb(228,207,15)" fg:x="686" fg:w="7"/><text x="3.5328%" y="1791.50"></text></g><g><title>`0x7FF7E01D8639 (7 samples, 0.03%)</title><rect x="3.2828%" y="1765" width="0.0335%" height="15" fill="rgb(241,99,19)" fg:x="686" fg:w="7"/><text x="3.5328%" y="1775.50"></text></g><g><title>`0x7FF7E00F5CDD (14 samples, 0.07%)</title><rect x="3.2684%" y="1925" width="0.0670%" height="15" fill="rgb(207,104,49)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1935.50"></text></g><g><title>`0x7FF7E01D8639 (14 samples, 0.07%)</title><rect x="3.2684%" y="1909" width="0.0670%" height="15" fill="rgb(234,99,18)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1919.50"></text></g><g><title>`0x7FF7E01C87E9 (14 samples, 0.07%)</title><rect x="3.2684%" y="1893" width="0.0670%" height="15" fill="rgb(213,191,49)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1903.50"></text></g><g><title>`0x7FF7E01B7DB7 (14 samples, 0.07%)</title><rect x="3.2684%" y="1877" width="0.0670%" height="15" fill="rgb(210,226,19)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1887.50"></text></g><g><title>`0x7FF7E01DF39A (14 samples, 0.07%)</title><rect x="3.2684%" y="1861" width="0.0670%" height="15" fill="rgb(229,97,18)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1871.50"></text></g><g><title>`0x7FF7E01D80A7 (14 samples, 0.07%)</title><rect x="3.2684%" y="1845" width="0.0670%" height="15" fill="rgb(211,167,15)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1855.50"></text></g><g><title>`0x7FF7E01BD3F9 (14 samples, 0.07%)</title><rect x="3.2684%" y="1829" width="0.0670%" height="15" fill="rgb(210,169,34)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1839.50"></text></g><g><title>`0x7FF7E01D8639 (14 samples, 0.07%)</title><rect x="3.2684%" y="1813" width="0.0670%" height="15" fill="rgb(241,121,31)" fg:x="683" fg:w="14"/><text x="3.5184%" y="1823.50"></text></g><g><title>`0x7FF7E00F5CDD (3 samples, 0.01%)</title><rect x="3.3498%" y="1733" width="0.0144%" height="15" fill="rgb(232,40,11)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1743.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.3498%" y="1717" width="0.0144%" height="15" fill="rgb(205,86,26)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1727.50"></text></g><g><title>`0x7FF7E01C87E9 (3 samples, 0.01%)</title><rect x="3.3498%" y="1701" width="0.0144%" height="15" fill="rgb(231,126,28)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1711.50"></text></g><g><title>`0x7FF7E01B7DB7 (3 samples, 0.01%)</title><rect x="3.3498%" y="1685" width="0.0144%" height="15" fill="rgb(219,221,18)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1695.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.3498%" y="1669" width="0.0144%" height="15" fill="rgb(211,40,0)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1679.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.3498%" y="1653" width="0.0144%" height="15" fill="rgb(239,85,43)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1663.50"></text></g><g><title>`0x7FF7E01BD3F9 (3 samples, 0.01%)</title><rect x="3.3498%" y="1637" width="0.0144%" height="15" fill="rgb(231,55,21)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1647.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.3498%" y="1621" width="0.0144%" height="15" fill="rgb(225,184,43)" fg:x="700" fg:w="3"/><text x="3.5998%" y="1631.50"></text></g><g><title>`0x7FF7E01C824A (3 samples, 0.01%)</title><rect x="3.3641%" y="1605" width="0.0144%" height="15" fill="rgb(251,158,41)" fg:x="703" fg:w="3"/><text x="3.6141%" y="1615.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="3.3785%" y="1573" width="0.0144%" height="15" fill="rgb(234,159,37)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1583.50"></text></g><g><title>`0x7FF7E01C79F2 (3 samples, 0.01%)</title><rect x="3.3785%" y="1557" width="0.0144%" height="15" fill="rgb(216,204,22)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1567.50"></text></g><g><title>`0x7FF7E01C87E9 (3 samples, 0.01%)</title><rect x="3.3785%" y="1541" width="0.0144%" height="15" fill="rgb(214,17,3)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1551.50"></text></g><g><title>`0x7FF7E01B7DB7 (3 samples, 0.01%)</title><rect x="3.3785%" y="1525" width="0.0144%" height="15" fill="rgb(212,111,17)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1535.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.3785%" y="1509" width="0.0144%" height="15" fill="rgb(221,157,24)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1519.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.3785%" y="1493" width="0.0144%" height="15" fill="rgb(252,16,13)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1503.50"></text></g><g><title>`0x7FF7E01BD3F9 (3 samples, 0.01%)</title><rect x="3.3785%" y="1477" width="0.0144%" height="15" fill="rgb(221,62,2)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1487.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.3785%" y="1461" width="0.0144%" height="15" fill="rgb(247,87,22)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1471.50"></text></g><g><title>`0x7FF7E01C844F (3 samples, 0.01%)</title><rect x="3.3785%" y="1445" width="0.0144%" height="15" fill="rgb(215,73,9)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1455.50"></text></g><g><title>`0x7FF7E01F2419 (3 samples, 0.01%)</title><rect x="3.3785%" y="1429" width="0.0144%" height="15" fill="rgb(207,175,33)" fg:x="706" fg:w="3"/><text x="3.6285%" y="1439.50"></text></g><g><title>`0x7FF7E01B7D67 (13 samples, 0.06%)</title><rect x="3.3354%" y="1877" width="0.0622%" height="15" fill="rgb(243,129,54)" fg:x="697" fg:w="13"/><text x="3.5854%" y="1887.50"></text></g><g><title>`0x7FF7E01DF39A (13 samples, 0.06%)</title><rect x="3.3354%" y="1861" width="0.0622%" height="15" fill="rgb(227,119,45)" fg:x="697" fg:w="13"/><text x="3.5854%" y="1871.50"></text></g><g><title>`0x7FF7E01D80A7 (13 samples, 0.06%)</title><rect x="3.3354%" y="1845" width="0.0622%" height="15" fill="rgb(205,109,36)" fg:x="697" fg:w="13"/><text x="3.5854%" y="1855.50"></text></g><g><title>`0x7FF7E01B7F79 (13 samples, 0.06%)</title><rect x="3.3354%" y="1829" width="0.0622%" height="15" fill="rgb(205,6,39)" fg:x="697" fg:w="13"/><text x="3.5854%" y="1839.50"></text></g><g><title>`0x7FF7E01D866F (12 samples, 0.06%)</title><rect x="3.3402%" y="1813" width="0.0574%" height="15" fill="rgb(221,32,16)" fg:x="698" fg:w="12"/><text x="3.5902%" y="1823.50"></text></g><g><title>`0x7FF7E01C717A (11 samples, 0.05%)</title><rect x="3.3450%" y="1797" width="0.0526%" height="15" fill="rgb(228,144,50)" fg:x="699" fg:w="11"/><text x="3.5950%" y="1807.50"></text></g><g><title>`0x7FF7E01C88B3 (11 samples, 0.05%)</title><rect x="3.3450%" y="1781" width="0.0526%" height="15" fill="rgb(229,201,53)" fg:x="699" fg:w="11"/><text x="3.5950%" y="1791.50"></text></g><g><title>`0x7FF7E01D8E80 (11 samples, 0.05%)</title><rect x="3.3450%" y="1765" width="0.0526%" height="15" fill="rgb(249,153,27)" fg:x="699" fg:w="11"/><text x="3.5950%" y="1775.50"></text></g><g><title>`0x7FF7E01BAAE1 (10 samples, 0.05%)</title><rect x="3.3498%" y="1749" width="0.0479%" height="15" fill="rgb(227,106,25)" fg:x="700" fg:w="10"/><text x="3.5998%" y="1759.50"></text></g><g><title>`0x7FF7E01CCA70 (7 samples, 0.03%)</title><rect x="3.3641%" y="1733" width="0.0335%" height="15" fill="rgb(230,65,29)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1743.50"></text></g><g><title>`0x7FF7E01D8639 (7 samples, 0.03%)</title><rect x="3.3641%" y="1717" width="0.0335%" height="15" fill="rgb(221,57,46)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1727.50"></text></g><g><title>`0x7FF7E01C87E9 (7 samples, 0.03%)</title><rect x="3.3641%" y="1701" width="0.0335%" height="15" fill="rgb(229,161,17)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1711.50"></text></g><g><title>`0x7FF7E01B7DB7 (7 samples, 0.03%)</title><rect x="3.3641%" y="1685" width="0.0335%" height="15" fill="rgb(222,213,11)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1695.50"></text></g><g><title>`0x7FF7E01DF39A (7 samples, 0.03%)</title><rect x="3.3641%" y="1669" width="0.0335%" height="15" fill="rgb(235,35,13)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1679.50"></text></g><g><title>`0x7FF7E01D80A7 (7 samples, 0.03%)</title><rect x="3.3641%" y="1653" width="0.0335%" height="15" fill="rgb(233,158,34)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1663.50"></text></g><g><title>`0x7FF7E01BD3F9 (7 samples, 0.03%)</title><rect x="3.3641%" y="1637" width="0.0335%" height="15" fill="rgb(215,151,48)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1647.50"></text></g><g><title>`0x7FF7E01D8639 (7 samples, 0.03%)</title><rect x="3.3641%" y="1621" width="0.0335%" height="15" fill="rgb(229,84,14)" fg:x="703" fg:w="7"/><text x="3.6141%" y="1631.50"></text></g><g><title>`0x7FF7E01C8306 (4 samples, 0.02%)</title><rect x="3.3785%" y="1605" width="0.0191%" height="15" fill="rgb(229,68,14)" fg:x="706" fg:w="4"/><text x="3.6285%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.3785%" y="1589" width="0.0191%" height="15" fill="rgb(243,106,26)" fg:x="706" fg:w="4"/><text x="3.6285%" y="1599.50"></text></g><g><title>`0x7FF7E01C8306 (7 samples, 0.03%)</title><rect x="3.4024%" y="1797" width="0.0335%" height="15" fill="rgb(206,45,38)" fg:x="711" fg:w="7"/><text x="3.6524%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="3.4072%" y="1781" width="0.0287%" height="15" fill="rgb(226,6,15)" fg:x="712" fg:w="6"/><text x="3.6572%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.4168%" y="1765" width="0.0191%" height="15" fill="rgb(232,22,54)" fg:x="714" fg:w="4"/><text x="3.6668%" y="1775.50"></text></g><g><title>`0x7FF7E01C8335 (4 samples, 0.02%)</title><rect x="3.4359%" y="1797" width="0.0191%" height="15" fill="rgb(229,222,32)" fg:x="718" fg:w="4"/><text x="3.6859%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.4359%" y="1781" width="0.0191%" height="15" fill="rgb(228,62,29)" fg:x="718" fg:w="4"/><text x="3.6859%" y="1791.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.4407%" y="1765" width="0.0144%" height="15" fill="rgb(251,103,34)" fg:x="719" fg:w="3"/><text x="3.6907%" y="1775.50"></text></g><g><title>`0x7FF7E01C844F (3 samples, 0.01%)</title><rect x="3.4550%" y="1797" width="0.0144%" height="15" fill="rgb(233,12,30)" fg:x="722" fg:w="3"/><text x="3.7050%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.4550%" y="1781" width="0.0144%" height="15" fill="rgb(238,52,0)" fg:x="722" fg:w="3"/><text x="3.7050%" y="1791.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.4550%" y="1765" width="0.0144%" height="15" fill="rgb(223,98,5)" fg:x="722" fg:w="3"/><text x="3.7050%" y="1775.50"></text></g><g><title>`0x7FF7E01C85C4 (3 samples, 0.01%)</title><rect x="3.4550%" y="1749" width="0.0144%" height="15" fill="rgb(228,75,37)" fg:x="722" fg:w="3"/><text x="3.7050%" y="1759.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="3.4694%" y="1797" width="0.0144%" height="15" fill="rgb(205,115,49)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1807.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.4694%" y="1781" width="0.0144%" height="15" fill="rgb(250,154,43)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1791.50"></text></g><g><title>`0x7FF7E01D3CC8 (3 samples, 0.01%)</title><rect x="3.4694%" y="1765" width="0.0144%" height="15" fill="rgb(226,43,29)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1775.50"></text></g><g><title>`0x7FF7E01CCA70 (3 samples, 0.01%)</title><rect x="3.4694%" y="1749" width="0.0144%" height="15" fill="rgb(249,228,39)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1759.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.4694%" y="1733" width="0.0144%" height="15" fill="rgb(216,79,43)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1743.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="3.4694%" y="1717" width="0.0144%" height="15" fill="rgb(228,95,12)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1727.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.4694%" y="1701" width="0.0144%" height="15" fill="rgb(249,221,15)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1711.50"></text></g><g><title>`0x7FF7E01D3D71 (3 samples, 0.01%)</title><rect x="3.4694%" y="1685" width="0.0144%" height="15" fill="rgb(233,34,13)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1695.50"></text></g><g><title>`0x7FF7E01DA184 (3 samples, 0.01%)</title><rect x="3.4694%" y="1669" width="0.0144%" height="15" fill="rgb(214,103,39)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1679.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.4694%" y="1653" width="0.0144%" height="15" fill="rgb(251,126,39)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1663.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.4694%" y="1637" width="0.0144%" height="15" fill="rgb(214,216,36)" fg:x="725" fg:w="3"/><text x="3.7194%" y="1647.50"></text></g><g><title>`0x7FF7E01D8639 (20 samples, 0.10%)</title><rect x="3.3976%" y="1813" width="0.0957%" height="15" fill="rgb(220,221,8)" fg:x="710" fg:w="20"/><text x="3.6476%" y="1823.50"></text></g><g><title>`0x7FF7E01C88B3 (55 samples, 0.26%)</title><rect x="3.2445%" y="1973" width="0.2632%" height="15" fill="rgb(240,216,3)" fg:x="678" fg:w="55"/><text x="3.4945%" y="1983.50"></text></g><g><title>`0x7FF7E01D8E80 (55 samples, 0.26%)</title><rect x="3.2445%" y="1957" width="0.2632%" height="15" fill="rgb(232,218,17)" fg:x="678" fg:w="55"/><text x="3.4945%" y="1967.50"></text></g><g><title>`0x7FF7E01BAAE1 (50 samples, 0.24%)</title><rect x="3.2684%" y="1941" width="0.2393%" height="15" fill="rgb(229,163,45)" fg:x="683" fg:w="50"/><text x="3.5184%" y="1951.50"></text></g><g><title>`0x7FF7E01CCA70 (36 samples, 0.17%)</title><rect x="3.3354%" y="1925" width="0.1723%" height="15" fill="rgb(231,110,42)" fg:x="697" fg:w="36"/><text x="3.5854%" y="1935.50"></text></g><g><title>`0x7FF7E01D8639 (36 samples, 0.17%)</title><rect x="3.3354%" y="1909" width="0.1723%" height="15" fill="rgb(208,170,48)" fg:x="697" fg:w="36"/><text x="3.5854%" y="1919.50"></text></g><g><title>`0x7FF7E01C87E9 (36 samples, 0.17%)</title><rect x="3.3354%" y="1893" width="0.1723%" height="15" fill="rgb(239,116,25)" fg:x="697" fg:w="36"/><text x="3.5854%" y="1903.50"></text></g><g><title>`0x7FF7E01B7DB7 (23 samples, 0.11%)</title><rect x="3.3976%" y="1877" width="0.1101%" height="15" fill="rgb(219,200,50)" fg:x="710" fg:w="23"/><text x="3.6476%" y="1887.50"></text></g><g><title>`0x7FF7E01DF39A (23 samples, 0.11%)</title><rect x="3.3976%" y="1861" width="0.1101%" height="15" fill="rgb(245,200,0)" fg:x="710" fg:w="23"/><text x="3.6476%" y="1871.50"></text></g><g><title>`0x7FF7E01D80A7 (23 samples, 0.11%)</title><rect x="3.3976%" y="1845" width="0.1101%" height="15" fill="rgb(245,119,33)" fg:x="710" fg:w="23"/><text x="3.6476%" y="1855.50"></text></g><g><title>`0x7FF7E01BD3F9 (23 samples, 0.11%)</title><rect x="3.3976%" y="1829" width="0.1101%" height="15" fill="rgb(231,125,12)" fg:x="710" fg:w="23"/><text x="3.6476%" y="1839.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="3.4933%" y="1813" width="0.0144%" height="15" fill="rgb(216,96,41)" fg:x="730" fg:w="3"/><text x="3.7433%" y="1823.50"></text></g><g><title>`0x7FF7E01B7F79 (61 samples, 0.29%)</title><rect x="3.2206%" y="2021" width="0.2919%" height="15" fill="rgb(248,43,45)" fg:x="673" fg:w="61"/><text x="3.4706%" y="2031.50"></text></g><g><title>`0x7FF7E01D866F (59 samples, 0.28%)</title><rect x="3.2301%" y="2005" width="0.2823%" height="15" fill="rgb(217,222,7)" fg:x="675" fg:w="59"/><text x="3.4801%" y="2015.50"></text></g><g><title>`0x7FF7E01C717A (59 samples, 0.28%)</title><rect x="3.2301%" y="1989" width="0.2823%" height="15" fill="rgb(233,28,6)" fg:x="675" fg:w="59"/><text x="3.4801%" y="1999.50"></text></g><g><title>`0x7FF7E01B7D67 (3 samples, 0.01%)</title><rect x="3.5173%" y="1877" width="0.0144%" height="15" fill="rgb(231,218,15)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1887.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.5173%" y="1861" width="0.0144%" height="15" fill="rgb(226,171,48)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1871.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.5173%" y="1845" width="0.0144%" height="15" fill="rgb(235,201,9)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1855.50"></text></g><g><title>`0x7FF7E02077FF (3 samples, 0.01%)</title><rect x="3.5173%" y="1829" width="0.0144%" height="15" fill="rgb(217,80,15)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1839.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="3.5173%" y="1813" width="0.0144%" height="15" fill="rgb(219,152,8)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1823.50"></text></g><g><title>`0x7FF7E01C717A (3 samples, 0.01%)</title><rect x="3.5173%" y="1797" width="0.0144%" height="15" fill="rgb(243,107,38)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1807.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="3.5173%" y="1781" width="0.0144%" height="15" fill="rgb(231,17,5)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1791.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.5173%" y="1765" width="0.0144%" height="15" fill="rgb(209,25,54)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1775.50"></text></g><g><title>`0x7FF7E01BAAE1 (3 samples, 0.01%)</title><rect x="3.5173%" y="1749" width="0.0144%" height="15" fill="rgb(219,0,2)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1759.50"></text></g><g><title>`0x7FF7E00F5CDD (3 samples, 0.01%)</title><rect x="3.5173%" y="1733" width="0.0144%" height="15" fill="rgb(246,9,5)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1743.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.5173%" y="1717" width="0.0144%" height="15" fill="rgb(226,159,4)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1727.50"></text></g><g><title>`0x7FF7E01C87E9 (3 samples, 0.01%)</title><rect x="3.5173%" y="1701" width="0.0144%" height="15" fill="rgb(219,175,34)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1711.50"></text></g><g><title>`0x7FF7E01B7D67 (3 samples, 0.01%)</title><rect x="3.5173%" y="1685" width="0.0144%" height="15" fill="rgb(236,10,46)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1695.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.5173%" y="1669" width="0.0144%" height="15" fill="rgb(240,211,16)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1679.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.5173%" y="1653" width="0.0144%" height="15" fill="rgb(205,3,43)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1663.50"></text></g><g><title>`0x7FF7E02077FF (3 samples, 0.01%)</title><rect x="3.5173%" y="1637" width="0.0144%" height="15" fill="rgb(245,7,22)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1647.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="3.5173%" y="1621" width="0.0144%" height="15" fill="rgb(239,132,32)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1631.50"></text></g><g><title>`0x7FF7E01C717A (3 samples, 0.01%)</title><rect x="3.5173%" y="1605" width="0.0144%" height="15" fill="rgb(228,202,34)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1615.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="3.5173%" y="1589" width="0.0144%" height="15" fill="rgb(254,200,22)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1599.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.5173%" y="1573" width="0.0144%" height="15" fill="rgb(219,10,39)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1583.50"></text></g><g><title>`0x7FF7E01BAAE1 (3 samples, 0.01%)</title><rect x="3.5173%" y="1557" width="0.0144%" height="15" fill="rgb(226,210,39)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1567.50"></text></g><g><title>`0x7FF7E00F5CDD (3 samples, 0.01%)</title><rect x="3.5173%" y="1541" width="0.0144%" height="15" fill="rgb(208,219,16)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1551.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.5173%" y="1525" width="0.0144%" height="15" fill="rgb(216,158,51)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1535.50"></text></g><g><title>`0x7FF7E01C87E9 (3 samples, 0.01%)</title><rect x="3.5173%" y="1509" width="0.0144%" height="15" fill="rgb(233,14,44)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1519.50"></text></g><g><title>`0x7FF7E01B7DB7 (3 samples, 0.01%)</title><rect x="3.5173%" y="1493" width="0.0144%" height="15" fill="rgb(237,97,39)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1503.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.5173%" y="1477" width="0.0144%" height="15" fill="rgb(218,198,43)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1487.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.5173%" y="1461" width="0.0144%" height="15" fill="rgb(231,104,20)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1471.50"></text></g><g><title>`0x7FF7E01BD3F9 (3 samples, 0.01%)</title><rect x="3.5173%" y="1445" width="0.0144%" height="15" fill="rgb(254,36,13)" fg:x="735" fg:w="3"/><text x="3.7673%" y="1455.50"></text></g><g><title>`0x7FF7E01C88B3 (6 samples, 0.03%)</title><rect x="3.5125%" y="1973" width="0.0287%" height="15" fill="rgb(248,14,50)" fg:x="734" fg:w="6"/><text x="3.7625%" y="1983.50"></text></g><g><title>`0x7FF7E01D8E80 (6 samples, 0.03%)</title><rect x="3.5125%" y="1957" width="0.0287%" height="15" fill="rgb(217,107,29)" fg:x="734" fg:w="6"/><text x="3.7625%" y="1967.50"></text></g><g><title>`0x7FF7E01BAAE1 (5 samples, 0.02%)</title><rect x="3.5173%" y="1941" width="0.0239%" height="15" fill="rgb(251,169,33)" fg:x="735" fg:w="5"/><text x="3.7673%" y="1951.50"></text></g><g><title>`0x7FF7E00F5CDD (5 samples, 0.02%)</title><rect x="3.5173%" y="1925" width="0.0239%" height="15" fill="rgb(217,108,32)" fg:x="735" fg:w="5"/><text x="3.7673%" y="1935.50"></text></g><g><title>`0x7FF7E01D8639 (5 samples, 0.02%)</title><rect x="3.5173%" y="1909" width="0.0239%" height="15" fill="rgb(219,66,42)" fg:x="735" fg:w="5"/><text x="3.7673%" y="1919.50"></text></g><g><title>`0x7FF7E01C87E9 (5 samples, 0.02%)</title><rect x="3.5173%" y="1893" width="0.0239%" height="15" fill="rgb(206,180,7)" fg:x="735" fg:w="5"/><text x="3.7673%" y="1903.50"></text></g><g><title>`0x7FF7E0218C85 (3 samples, 0.01%)</title><rect x="3.5412%" y="1973" width="0.0144%" height="15" fill="rgb(208,226,31)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1983.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.5412%" y="1957" width="0.0144%" height="15" fill="rgb(218,26,49)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1967.50"></text></g><g><title>`0x7FF7E01BAAE1 (3 samples, 0.01%)</title><rect x="3.5412%" y="1941" width="0.0144%" height="15" fill="rgb(233,197,48)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1951.50"></text></g><g><title>`0x7FF7E00F5CDD (3 samples, 0.01%)</title><rect x="3.5412%" y="1925" width="0.0144%" height="15" fill="rgb(252,181,51)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1935.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.5412%" y="1909" width="0.0144%" height="15" fill="rgb(253,90,19)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1919.50"></text></g><g><title>`0x7FF7E0218BA9 (3 samples, 0.01%)</title><rect x="3.5412%" y="1893" width="0.0144%" height="15" fill="rgb(215,171,30)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1903.50"></text></g><g><title>`0x7FF7E01B7DB7 (3 samples, 0.01%)</title><rect x="3.5412%" y="1877" width="0.0144%" height="15" fill="rgb(214,222,9)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1887.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.5412%" y="1861" width="0.0144%" height="15" fill="rgb(223,3,22)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1871.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.5412%" y="1845" width="0.0144%" height="15" fill="rgb(225,196,46)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1855.50"></text></g><g><title>`0x7FF7E01BD3F9 (3 samples, 0.01%)</title><rect x="3.5412%" y="1829" width="0.0144%" height="15" fill="rgb(209,110,37)" fg:x="740" fg:w="3"/><text x="3.7912%" y="1839.50"></text></g><g><title>`0x7FF7E01B7D67 (71 samples, 0.34%)</title><rect x="3.2206%" y="2069" width="0.3398%" height="15" fill="rgb(249,89,12)" fg:x="673" fg:w="71"/><text x="3.4706%" y="2079.50"></text></g><g><title>`0x7FF7E01DF39A (71 samples, 0.34%)</title><rect x="3.2206%" y="2053" width="0.3398%" height="15" fill="rgb(226,27,33)" fg:x="673" fg:w="71"/><text x="3.4706%" y="2063.50"></text></g><g><title>`0x7FF7E01D80A7 (71 samples, 0.34%)</title><rect x="3.2206%" y="2037" width="0.3398%" height="15" fill="rgb(213,82,22)" fg:x="673" fg:w="71"/><text x="3.4706%" y="2047.50"></text></g><g><title>`0x7FF7E02077FF (10 samples, 0.05%)</title><rect x="3.5125%" y="2021" width="0.0479%" height="15" fill="rgb(248,140,0)" fg:x="734" fg:w="10"/><text x="3.7625%" y="2031.50"></text></g><g><title>`0x7FF7E01D866F (10 samples, 0.05%)</title><rect x="3.5125%" y="2005" width="0.0479%" height="15" fill="rgb(228,106,3)" fg:x="734" fg:w="10"/><text x="3.7625%" y="2015.50"></text></g><g><title>`0x7FF7E01C717A (10 samples, 0.05%)</title><rect x="3.5125%" y="1989" width="0.0479%" height="15" fill="rgb(209,23,37)" fg:x="734" fg:w="10"/><text x="3.7625%" y="1999.50"></text></g><g><title>`0x7FF7E01BD3F9 (4 samples, 0.02%)</title><rect x="3.5603%" y="2021" width="0.0191%" height="15" fill="rgb(241,93,50)" fg:x="744" fg:w="4"/><text x="3.8103%" y="2031.50"></text></g><g><title>`0x7FF7E01D8639 (4 samples, 0.02%)</title><rect x="3.5603%" y="2005" width="0.0191%" height="15" fill="rgb(253,46,43)" fg:x="744" fg:w="4"/><text x="3.8103%" y="2015.50"></text></g><g><title>`0x7FF7E01C88B3 (4 samples, 0.02%)</title><rect x="3.5603%" y="1989" width="0.0191%" height="15" fill="rgb(226,206,43)" fg:x="744" fg:w="4"/><text x="3.8103%" y="1999.50"></text></g><g><title>`0x7FF7E01D8E80 (4 samples, 0.02%)</title><rect x="3.5603%" y="1973" width="0.0191%" height="15" fill="rgb(217,54,7)" fg:x="744" fg:w="4"/><text x="3.8103%" y="1983.50"></text></g><g><title>`0x7FF7E01D3CC8 (4 samples, 0.02%)</title><rect x="3.5603%" y="1957" width="0.0191%" height="15" fill="rgb(223,5,52)" fg:x="744" fg:w="4"/><text x="3.8103%" y="1967.50"></text></g><g><title>`0x7FF7E01CCA70 (3 samples, 0.01%)</title><rect x="3.5651%" y="1941" width="0.0144%" height="15" fill="rgb(206,52,46)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1951.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.5651%" y="1925" width="0.0144%" height="15" fill="rgb(253,136,11)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1935.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="3.5651%" y="1909" width="0.0144%" height="15" fill="rgb(208,106,33)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1919.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="3.5651%" y="1893" width="0.0144%" height="15" fill="rgb(206,54,4)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1903.50"></text></g><g><title>`0x7FF7E01D3D71 (3 samples, 0.01%)</title><rect x="3.5651%" y="1877" width="0.0144%" height="15" fill="rgb(213,3,15)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1887.50"></text></g><g><title>`0x7FF7E01DA184 (3 samples, 0.01%)</title><rect x="3.5651%" y="1861" width="0.0144%" height="15" fill="rgb(252,211,39)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1871.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="3.5651%" y="1845" width="0.0144%" height="15" fill="rgb(223,6,36)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1855.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="3.5651%" y="1829" width="0.0144%" height="15" fill="rgb(252,169,45)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1839.50"></text></g><g><title>`0x7FF7E01D8639 (3 samples, 0.01%)</title><rect x="3.5651%" y="1813" width="0.0144%" height="15" fill="rgb(212,48,26)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1823.50"></text></g><g><title>`0x7FF7E01C8651 (3 samples, 0.01%)</title><rect x="3.5651%" y="1797" width="0.0144%" height="15" fill="rgb(251,102,48)" fg:x="745" fg:w="3"/><text x="3.8151%" y="1807.50"></text></g><g><title>`0x7FF7E01C8758 (76 samples, 0.36%)</title><rect x="3.2206%" y="2085" width="0.3637%" height="15" fill="rgb(243,208,16)" fg:x="673" fg:w="76"/><text x="3.4706%" y="2095.50"></text></g><g><title>`0x7FF7E01B7DB7 (5 samples, 0.02%)</title><rect x="3.5603%" y="2069" width="0.0239%" height="15" fill="rgb(219,96,24)" fg:x="744" fg:w="5"/><text x="3.8103%" y="2079.50"></text></g><g><title>`0x7FF7E01DF39A (5 samples, 0.02%)</title><rect x="3.5603%" y="2053" width="0.0239%" height="15" fill="rgb(219,33,29)" fg:x="744" fg:w="5"/><text x="3.8103%" y="2063.50"></text></g><g><title>`0x7FF7E01D80A7 (5 samples, 0.02%)</title><rect x="3.5603%" y="2037" width="0.0239%" height="15" fill="rgb(223,176,5)" fg:x="744" fg:w="5"/><text x="3.8103%" y="2047.50"></text></g><g><title>`0x7FF7E01D866F (78 samples, 0.37%)</title><rect x="3.2206%" y="2117" width="0.3733%" height="15" fill="rgb(228,140,14)" fg:x="673" fg:w="78"/><text x="3.4706%" y="2127.50"></text></g><g><title>`0x7FF7E01C717A (78 samples, 0.37%)</title><rect x="3.2206%" y="2101" width="0.3733%" height="15" fill="rgb(217,179,31)" fg:x="673" fg:w="78"/><text x="3.4706%" y="2111.50"></text></g><g><title>`0x7FF7E01D458F (4 samples, 0.02%)</title><rect x="3.6130%" y="1813" width="0.0191%" height="15" fill="rgb(230,9,30)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1823.50"></text></g><g><title>`0x7FF7E00F5CDD (4 samples, 0.02%)</title><rect x="3.6130%" y="1797" width="0.0191%" height="15" fill="rgb(230,136,20)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1807.50"></text></g><g><title>`0x7FF7E0211E5B (4 samples, 0.02%)</title><rect x="3.6130%" y="1781" width="0.0191%" height="15" fill="rgb(215,210,22)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1791.50"></text></g><g><title>`0x7FF7E0218BA9 (4 samples, 0.02%)</title><rect x="3.6130%" y="1765" width="0.0191%" height="15" fill="rgb(218,43,5)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1775.50"></text></g><g><title>`0x7FF7E01B7DB7 (4 samples, 0.02%)</title><rect x="3.6130%" y="1749" width="0.0191%" height="15" fill="rgb(216,11,5)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1759.50"></text></g><g><title>`0x7FF7E01DF39A (4 samples, 0.02%)</title><rect x="3.6130%" y="1733" width="0.0191%" height="15" fill="rgb(209,82,29)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1743.50"></text></g><g><title>`0x7FF7E01D80A7 (4 samples, 0.02%)</title><rect x="3.6130%" y="1717" width="0.0191%" height="15" fill="rgb(244,115,12)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1727.50"></text></g><g><title>`0x7FF7E02087BF (4 samples, 0.02%)</title><rect x="3.6130%" y="1701" width="0.0191%" height="15" fill="rgb(222,82,18)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1711.50"></text></g><g><title>`0x7FF7E0211E5B (4 samples, 0.02%)</title><rect x="3.6130%" y="1685" width="0.0191%" height="15" fill="rgb(249,227,8)" fg:x="755" fg:w="4"/><text x="3.8630%" y="1695.50"></text></g><g><title>`0x7FF7E01B1CF3 (87 samples, 0.42%)</title><rect x="3.2206%" y="2165" width="0.4163%" height="15" fill="rgb(253,141,45)" fg:x="673" fg:w="87"/><text x="3.4706%" y="2175.50"></text></g><g><title>`0x7FF7E01AFB74 (87 samples, 0.42%)</title><rect x="3.2206%" y="2149" width="0.4163%" height="15" fill="rgb(234,184,4)" fg:x="673" fg:w="87"/><text x="3.4706%" y="2159.50"></text></g><g><title>`0x7FF7E01B54A1 (87 samples, 0.42%)</title><rect x="3.2206%" y="2133" width="0.4163%" height="15" fill="rgb(218,194,23)" fg:x="673" fg:w="87"/><text x="3.4706%" y="2143.50"></text></g><g><title>`0x7FF7E0211E92 (9 samples, 0.04%)</title><rect x="3.5938%" y="2117" width="0.0431%" height="15" fill="rgb(235,66,41)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2127.50"></text></g><g><title>`0x7FF7E01C717A (9 samples, 0.04%)</title><rect x="3.5938%" y="2101" width="0.0431%" height="15" fill="rgb(245,217,1)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2111.50"></text></g><g><title>`0x7FF7E0218AE3 (9 samples, 0.04%)</title><rect x="3.5938%" y="2085" width="0.0431%" height="15" fill="rgb(229,91,1)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2095.50"></text></g><g><title>`0x7FF7E01B7DB7 (9 samples, 0.04%)</title><rect x="3.5938%" y="2069" width="0.0431%" height="15" fill="rgb(207,101,30)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2079.50"></text></g><g><title>`0x7FF7E01DF39A (9 samples, 0.04%)</title><rect x="3.5938%" y="2053" width="0.0431%" height="15" fill="rgb(223,82,49)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2063.50"></text></g><g><title>`0x7FF7E01D80A7 (9 samples, 0.04%)</title><rect x="3.5938%" y="2037" width="0.0431%" height="15" fill="rgb(218,167,17)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2047.50"></text></g><g><title>`0x7FF7E02087BF (9 samples, 0.04%)</title><rect x="3.5938%" y="2021" width="0.0431%" height="15" fill="rgb(208,103,14)" fg:x="751" fg:w="9"/><text x="3.8438%" y="2031.50"></text></g><g><title>`0x7FF7E0211E92 (6 samples, 0.03%)</title><rect x="3.6082%" y="2005" width="0.0287%" height="15" fill="rgb(238,20,8)" fg:x="754" fg:w="6"/><text x="3.8582%" y="2015.50"></text></g><g><title>`0x7FF7E01C79F2 (6 samples, 0.03%)</title><rect x="3.6082%" y="1989" width="0.0287%" height="15" fill="rgb(218,80,54)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1999.50"></text></g><g><title>`0x7FF7E0218C85 (6 samples, 0.03%)</title><rect x="3.6082%" y="1973" width="0.0287%" height="15" fill="rgb(240,144,17)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1983.50"></text></g><g><title>`0x7FF7E01D8E80 (6 samples, 0.03%)</title><rect x="3.6082%" y="1957" width="0.0287%" height="15" fill="rgb(245,27,50)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1967.50"></text></g><g><title>`0x7FF7E01D4206 (6 samples, 0.03%)</title><rect x="3.6082%" y="1941" width="0.0287%" height="15" fill="rgb(251,51,7)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1951.50"></text></g><g><title>`0x7FF7E01DA184 (6 samples, 0.03%)</title><rect x="3.6082%" y="1925" width="0.0287%" height="15" fill="rgb(245,217,29)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1935.50"></text></g><g><title>`0x7FF7E01DF39A (6 samples, 0.03%)</title><rect x="3.6082%" y="1909" width="0.0287%" height="15" fill="rgb(221,176,29)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1919.50"></text></g><g><title>`0x7FF7E01D80A7 (6 samples, 0.03%)</title><rect x="3.6082%" y="1893" width="0.0287%" height="15" fill="rgb(212,180,24)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1903.50"></text></g><g><title>`0x7FF7E0211E92 (6 samples, 0.03%)</title><rect x="3.6082%" y="1877" width="0.0287%" height="15" fill="rgb(254,24,2)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1887.50"></text></g><g><title>`0x7FF7E01C717A (6 samples, 0.03%)</title><rect x="3.6082%" y="1861" width="0.0287%" height="15" fill="rgb(230,100,2)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1871.50"></text></g><g><title>`0x7FF7E0218C85 (6 samples, 0.03%)</title><rect x="3.6082%" y="1845" width="0.0287%" height="15" fill="rgb(219,142,25)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1855.50"></text></g><g><title>`0x7FF7E01D8E80 (6 samples, 0.03%)</title><rect x="3.6082%" y="1829" width="0.0287%" height="15" fill="rgb(240,73,43)" fg:x="754" fg:w="6"/><text x="3.8582%" y="1839.50"></text></g><g><title>`0x7FF7E020C8D0 (5 samples, 0.02%)</title><rect x="3.6417%" y="2149" width="0.0239%" height="15" fill="rgb(214,114,15)" fg:x="761" fg:w="5"/><text x="3.8917%" y="2159.50"></text></g><g><title>deno.exe`Builtins_MapPrototypeForEach (5 samples, 0.02%)</title><rect x="3.6417%" y="2133" width="0.0239%" height="15" fill="rgb(207,130,4)" fg:x="761" fg:w="5"/><text x="3.8917%" y="2143.50"></text></g><g><title>`0x7FF7E020CF5B (5 samples, 0.02%)</title><rect x="3.6417%" y="2117" width="0.0239%" height="15" fill="rgb(221,25,40)" fg:x="761" fg:w="5"/><text x="3.8917%" y="2127.50"></text></g><g><title>`0x7FF7E01B280F (8 samples, 0.04%)</title><rect x="3.6369%" y="2165" width="0.0383%" height="15" fill="rgb(241,184,7)" fg:x="760" fg:w="8"/><text x="3.8869%" y="2175.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (3 samples, 0.01%)</title><rect x="3.6991%" y="2165" width="0.0144%" height="15" fill="rgb(235,159,4)" fg:x="773" fg:w="3"/><text x="3.9491%" y="2175.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (3 samples, 0.01%)</title><rect x="3.6991%" y="2149" width="0.0144%" height="15" fill="rgb(214,87,48)" fg:x="773" fg:w="3"/><text x="3.9491%" y="2159.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.6991%" y="2133" width="0.0144%" height="15" fill="rgb(246,198,24)" fg:x="773" fg:w="3"/><text x="3.9491%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="3.6991%" y="2117" width="0.0144%" height="15" fill="rgb(209,66,40)" fg:x="773" fg:w="3"/><text x="3.9491%" y="2127.50"></text></g><g><title>deno.exe`Builtins_CreateEmptyArrayLiteralWideHandler (4 samples, 0.02%)</title><rect x="3.7135%" y="2165" width="0.0191%" height="15" fill="rgb(233,147,39)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2175.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (4 samples, 0.02%)</title><rect x="3.7135%" y="2149" width="0.0191%" height="15" fill="rgb(231,145,52)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.02%)</title><rect x="3.7135%" y="2133" width="0.0191%" height="15" fill="rgb(206,20,26)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (4 samples, 0.02%)</title><rect x="3.7135%" y="2117" width="0.0191%" height="15" fill="rgb(238,220,4)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (4 samples, 0.02%)</title><rect x="3.7135%" y="2101" width="0.0191%" height="15" fill="rgb(252,195,42)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (4 samples, 0.02%)</title><rect x="3.7135%" y="2085" width="0.0191%" height="15" fill="rgb(209,10,6)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (4 samples, 0.02%)</title><rect x="3.7135%" y="2069" width="0.0191%" height="15" fill="rgb(229,3,52)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (4 samples, 0.02%)</title><rect x="3.7135%" y="2053" width="0.0191%" height="15" fill="rgb(253,49,37)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (4 samples, 0.02%)</title><rect x="3.7135%" y="2037" width="0.0191%" height="15" fill="rgb(240,103,49)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (4 samples, 0.02%)</title><rect x="3.7135%" y="2021" width="0.0191%" height="15" fill="rgb(250,182,30)" fg:x="776" fg:w="4"/><text x="3.9635%" y="2031.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (3 samples, 0.01%)</title><rect x="3.7182%" y="2005" width="0.0144%" height="15" fill="rgb(248,8,30)" fg:x="777" fg:w="3"/><text x="3.9682%" y="2015.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (3 samples, 0.01%)</title><rect x="3.7182%" y="1989" width="0.0144%" height="15" fill="rgb(237,120,30)" fg:x="777" fg:w="3"/><text x="3.9682%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (3 samples, 0.01%)</title><rect x="3.7182%" y="1973" width="0.0144%" height="15" fill="rgb(221,146,34)" fg:x="777" fg:w="3"/><text x="3.9682%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (3 samples, 0.01%)</title><rect x="3.7182%" y="1957" width="0.0144%" height="15" fill="rgb(242,55,13)" fg:x="777" fg:w="3"/><text x="3.9682%" y="1967.50"></text></g><g><title>`0x7FF7E019DDC0 (6 samples, 0.03%)</title><rect x="3.7804%" y="2133" width="0.0287%" height="15" fill="rgb(242,112,31)" fg:x="790" fg:w="6"/><text x="4.0304%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.7900%" y="2117" width="0.0191%" height="15" fill="rgb(249,192,27)" fg:x="792" fg:w="4"/><text x="4.0400%" y="2127.50"></text></g><g><title>`0x7FF7E00A455B (3 samples, 0.01%)</title><rect x="3.8522%" y="1765" width="0.0144%" height="15" fill="rgb(208,204,44)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1775.50"></text></g><g><title>`0x7FF7E0094AC3 (3 samples, 0.01%)</title><rect x="3.8522%" y="1749" width="0.0144%" height="15" fill="rgb(208,93,54)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1759.50"></text></g><g><title>`0x7FF7E0095C3E (3 samples, 0.01%)</title><rect x="3.8522%" y="1733" width="0.0144%" height="15" fill="rgb(242,1,31)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1743.50"></text></g><g><title>`0x7FF7E00B1E0D (3 samples, 0.01%)</title><rect x="3.8522%" y="1717" width="0.0144%" height="15" fill="rgb(241,83,25)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1727.50"></text></g><g><title>`0x7FF7E00B221A (3 samples, 0.01%)</title><rect x="3.8522%" y="1701" width="0.0144%" height="15" fill="rgb(205,169,50)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1711.50"></text></g><g><title>`0x7FF7E00968E5 (3 samples, 0.01%)</title><rect x="3.8522%" y="1685" width="0.0144%" height="15" fill="rgb(239,186,37)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1695.50"></text></g><g><title>`0x7FF7E01106E8 (3 samples, 0.01%)</title><rect x="3.8522%" y="1669" width="0.0144%" height="15" fill="rgb(205,221,10)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1679.50"></text></g><g><title>`0x7FF7E00B244B (3 samples, 0.01%)</title><rect x="3.8522%" y="1653" width="0.0144%" height="15" fill="rgb(218,196,15)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1663.50"></text></g><g><title>`0x7FF7E00B2733 (3 samples, 0.01%)</title><rect x="3.8522%" y="1637" width="0.0144%" height="15" fill="rgb(218,196,35)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1647.50"></text></g><g><title>`0x7FF7E00B2C4C (3 samples, 0.01%)</title><rect x="3.8522%" y="1621" width="0.0144%" height="15" fill="rgb(233,63,24)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1631.50"></text></g><g><title>`0x7FF7E012DEF4 (3 samples, 0.01%)</title><rect x="3.8522%" y="1605" width="0.0144%" height="15" fill="rgb(225,8,4)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1615.50"></text></g><g><title>`0x7FF7E014BD95 (3 samples, 0.01%)</title><rect x="3.8522%" y="1589" width="0.0144%" height="15" fill="rgb(234,105,35)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1599.50"></text></g><g><title>`0x7FF7E00B7009 (3 samples, 0.01%)</title><rect x="3.8522%" y="1573" width="0.0144%" height="15" fill="rgb(236,21,32)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1583.50"></text></g><g><title>`0x7FF7E00B74FE (3 samples, 0.01%)</title><rect x="3.8522%" y="1557" width="0.0144%" height="15" fill="rgb(228,109,6)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1567.50"></text></g><g><title>`0x7FF7E00B70D1 (3 samples, 0.01%)</title><rect x="3.8522%" y="1541" width="0.0144%" height="15" fill="rgb(229,215,31)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1551.50"></text></g><g><title>`0x7FF7E00B7041 (3 samples, 0.01%)</title><rect x="3.8522%" y="1525" width="0.0144%" height="15" fill="rgb(221,52,54)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1535.50"></text></g><g><title>`0x7FF7E00A9685 (3 samples, 0.01%)</title><rect x="3.8522%" y="1509" width="0.0144%" height="15" fill="rgb(252,129,43)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1519.50"></text></g><g><title>`0x7FF7E010FE05 (3 samples, 0.01%)</title><rect x="3.8522%" y="1493" width="0.0144%" height="15" fill="rgb(248,183,27)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1503.50"></text></g><g><title>`0x7FF7E00ADBDA (3 samples, 0.01%)</title><rect x="3.8522%" y="1477" width="0.0144%" height="15" fill="rgb(250,0,22)" fg:x="805" fg:w="3"/><text x="4.1022%" y="1487.50"></text></g><g><title>`0x7FF7E01721E8 (6 samples, 0.03%)</title><rect x="3.8427%" y="1845" width="0.0287%" height="15" fill="rgb(213,166,10)" fg:x="803" fg:w="6"/><text x="4.0927%" y="1855.50"></text></g><g><title>`0x7FF7E00E4BA2 (6 samples, 0.03%)</title><rect x="3.8427%" y="1829" width="0.0287%" height="15" fill="rgb(207,163,36)" fg:x="803" fg:w="6"/><text x="4.0927%" y="1839.50"></text></g><g><title>`0x7FF7E00E71CC (6 samples, 0.03%)</title><rect x="3.8427%" y="1813" width="0.0287%" height="15" fill="rgb(208,122,22)" fg:x="803" fg:w="6"/><text x="4.0927%" y="1823.50"></text></g><g><title>`0x7FF7E00F2D99 (5 samples, 0.02%)</title><rect x="3.8474%" y="1797" width="0.0239%" height="15" fill="rgb(207,104,49)" fg:x="804" fg:w="5"/><text x="4.0974%" y="1807.50"></text></g><g><title>`0x7FF7E014F447 (5 samples, 0.02%)</title><rect x="3.8474%" y="1781" width="0.0239%" height="15" fill="rgb(248,211,50)" fg:x="804" fg:w="5"/><text x="4.0974%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::Process (5 samples, 0.02%)</title><rect x="3.8857%" y="1253" width="0.0239%" height="15" fill="rgb(217,13,45)" fg:x="812" fg:w="5"/><text x="4.1357%" y="1263.50"></text></g><g><title>deno.exe`v8::internal::HeapObject::IterateFast&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (3 samples, 0.01%)</title><rect x="3.8953%" y="1237" width="0.0144%" height="15" fill="rgb(211,216,49)" fg:x="814" fg:w="3"/><text x="4.1453%" y="1247.50"></text></g><g><title>deno.exe`v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (3 samples, 0.01%)</title><rect x="3.8953%" y="1221" width="0.0144%" height="15" fill="rgb(221,58,53)" fg:x="814" fg:w="3"/><text x="4.1453%" y="1231.50"></text></g><g><title>`0x7FF7E00A4236 (8 samples, 0.04%)</title><rect x="3.8762%" y="1765" width="0.0383%" height="15" fill="rgb(220,112,41)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1775.50"></text></g><g><title>`0x7FF7E00FA663 (8 samples, 0.04%)</title><rect x="3.8762%" y="1749" width="0.0383%" height="15" fill="rgb(236,38,28)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1759.50"></text></g><g><title>`0x7FF7E00A3F3C (8 samples, 0.04%)</title><rect x="3.8762%" y="1733" width="0.0383%" height="15" fill="rgb(227,195,22)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1743.50"></text></g><g><title>`0x7FF7E00F2D99 (8 samples, 0.04%)</title><rect x="3.8762%" y="1717" width="0.0383%" height="15" fill="rgb(214,55,33)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1727.50"></text></g><g><title>`0x7FF7E014F447 (8 samples, 0.04%)</title><rect x="3.8762%" y="1701" width="0.0383%" height="15" fill="rgb(248,80,13)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1711.50"></text></g><g><title>`0x7FF7E00A4446 (8 samples, 0.04%)</title><rect x="3.8762%" y="1685" width="0.0383%" height="15" fill="rgb(238,52,6)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1695.50"></text></g><g><title>`0x7FF7E01236F6 (8 samples, 0.04%)</title><rect x="3.8762%" y="1669" width="0.0383%" height="15" fill="rgb(224,198,47)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1679.50"></text></g><g><title>`0x7FF7E014DE70 (8 samples, 0.04%)</title><rect x="3.8762%" y="1653" width="0.0383%" height="15" fill="rgb(233,171,20)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1663.50"></text></g><g><title>`0x7FF7E014EF7C (8 samples, 0.04%)</title><rect x="3.8762%" y="1637" width="0.0383%" height="15" fill="rgb(241,30,25)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1647.50"></text></g><g><title>`0x7FF7E012DEF4 (8 samples, 0.04%)</title><rect x="3.8762%" y="1621" width="0.0383%" height="15" fill="rgb(207,171,38)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1631.50"></text></g><g><title>`0x7FF7E014BCBB (8 samples, 0.04%)</title><rect x="3.8762%" y="1605" width="0.0383%" height="15" fill="rgb(234,70,1)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1615.50"></text></g><g><title>`0x7FF7E00A9685 (8 samples, 0.04%)</title><rect x="3.8762%" y="1589" width="0.0383%" height="15" fill="rgb(232,178,18)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1599.50"></text></g><g><title>`0x7FF7E010FD9A (8 samples, 0.04%)</title><rect x="3.8762%" y="1573" width="0.0383%" height="15" fill="rgb(241,78,40)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1583.50"></text></g><g><title>`0x7FF7E00AA2D0 (8 samples, 0.04%)</title><rect x="3.8762%" y="1557" width="0.0383%" height="15" fill="rgb(222,35,25)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1567.50"></text></g><g><title>`0x7FF7E00FDF56 (8 samples, 0.04%)</title><rect x="3.8762%" y="1541" width="0.0383%" height="15" fill="rgb(207,92,16)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1551.50"></text></g><g><title>`0x7FF7E0096DF0 (8 samples, 0.04%)</title><rect x="3.8762%" y="1525" width="0.0383%" height="15" fill="rgb(216,59,51)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1535.50"></text></g><g><title>`0x7FF7E0129133 (8 samples, 0.04%)</title><rect x="3.8762%" y="1509" width="0.0383%" height="15" fill="rgb(213,80,28)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1519.50"></text></g><g><title>`0x7FF7E01272B5 (8 samples, 0.04%)</title><rect x="3.8762%" y="1493" width="0.0383%" height="15" fill="rgb(220,93,7)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1503.50"></text></g><g><title>deno.exe`Builtins_StoreIC (8 samples, 0.04%)</title><rect x="3.8762%" y="1477" width="0.0383%" height="15" fill="rgb(225,24,44)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1487.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (8 samples, 0.04%)</title><rect x="3.8762%" y="1461" width="0.0383%" height="15" fill="rgb(243,74,40)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1471.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (8 samples, 0.04%)</title><rect x="3.8762%" y="1445" width="0.0383%" height="15" fill="rgb(228,39,7)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1455.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (8 samples, 0.04%)</title><rect x="3.8762%" y="1429" width="0.0383%" height="15" fill="rgb(227,79,8)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.04%)</title><rect x="3.8762%" y="1413" width="0.0383%" height="15" fill="rgb(236,58,11)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (8 samples, 0.04%)</title><rect x="3.8762%" y="1397" width="0.0383%" height="15" fill="rgb(249,63,35)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1407.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (8 samples, 0.04%)</title><rect x="3.8762%" y="1381" width="0.0383%" height="15" fill="rgb(252,114,16)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (8 samples, 0.04%)</title><rect x="3.8762%" y="1365" width="0.0383%" height="15" fill="rgb(254,151,24)" fg:x="810" fg:w="8"/><text x="4.1262%" y="1375.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (7 samples, 0.03%)</title><rect x="3.8809%" y="1349" width="0.0335%" height="15" fill="rgb(253,54,39)" fg:x="811" fg:w="7"/><text x="4.1309%" y="1359.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (7 samples, 0.03%)</title><rect x="3.8809%" y="1333" width="0.0335%" height="15" fill="rgb(243,25,45)" fg:x="811" fg:w="7"/><text x="4.1309%" y="1343.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (6 samples, 0.03%)</title><rect x="3.8857%" y="1317" width="0.0287%" height="15" fill="rgb(234,134,9)" fg:x="812" fg:w="6"/><text x="4.1357%" y="1327.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (6 samples, 0.03%)</title><rect x="3.8857%" y="1301" width="0.0287%" height="15" fill="rgb(227,166,31)" fg:x="812" fg:w="6"/><text x="4.1357%" y="1311.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (6 samples, 0.03%)</title><rect x="3.8857%" y="1285" width="0.0287%" height="15" fill="rgb(245,143,41)" fg:x="812" fg:w="6"/><text x="4.1357%" y="1295.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (6 samples, 0.03%)</title><rect x="3.8857%" y="1269" width="0.0287%" height="15" fill="rgb(238,181,32)" fg:x="812" fg:w="6"/><text x="4.1357%" y="1279.50"></text></g><g><title>`0x7FF7E00E4BA2 (9 samples, 0.04%)</title><rect x="3.8762%" y="1829" width="0.0431%" height="15" fill="rgb(224,113,18)" fg:x="810" fg:w="9"/><text x="4.1262%" y="1839.50"></text></g><g><title>`0x7FF7E00E71CC (9 samples, 0.04%)</title><rect x="3.8762%" y="1813" width="0.0431%" height="15" fill="rgb(240,229,28)" fg:x="810" fg:w="9"/><text x="4.1262%" y="1823.50"></text></g><g><title>`0x7FF7E00F2D99 (9 samples, 0.04%)</title><rect x="3.8762%" y="1797" width="0.0431%" height="15" fill="rgb(250,185,3)" fg:x="810" fg:w="9"/><text x="4.1262%" y="1807.50"></text></g><g><title>`0x7FF7E014F447 (9 samples, 0.04%)</title><rect x="3.8762%" y="1781" width="0.0431%" height="15" fill="rgb(212,59,25)" fg:x="810" fg:w="9"/><text x="4.1262%" y="1791.50"></text></g><g><title>`0x7FF7E00CEE5C (18 samples, 0.09%)</title><rect x="3.8427%" y="1861" width="0.0861%" height="15" fill="rgb(221,87,20)" fg:x="803" fg:w="18"/><text x="4.0927%" y="1871.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="3.8762%" y="1845" width="0.0526%" height="15" fill="rgb(213,74,28)" fg:x="810" fg:w="11"/><text x="4.1262%" y="1855.50"></text></g><g><title>`0x7FF7E00CCFFF (22 samples, 0.11%)</title><rect x="3.8283%" y="1925" width="0.1053%" height="15" fill="rgb(224,132,34)" fg:x="800" fg:w="22"/><text x="4.0783%" y="1935.50"></text></g><g><title>`0x7FF7E00CE25F (22 samples, 0.11%)</title><rect x="3.8283%" y="1909" width="0.1053%" height="15" fill="rgb(222,101,24)" fg:x="800" fg:w="22"/><text x="4.0783%" y="1919.50"></text></g><g><title>`0x7FF7E014F447 (21 samples, 0.10%)</title><rect x="3.8331%" y="1893" width="0.1005%" height="15" fill="rgb(254,142,4)" fg:x="801" fg:w="21"/><text x="4.0831%" y="1903.50"></text></g><g><title>`0x7FF7E00E134C (20 samples, 0.10%)</title><rect x="3.8379%" y="1877" width="0.0957%" height="15" fill="rgb(230,229,49)" fg:x="802" fg:w="20"/><text x="4.0879%" y="1887.50"></text></g><g><title>`0x7FF7E00A41FE (23 samples, 0.11%)</title><rect x="3.8283%" y="1957" width="0.1101%" height="15" fill="rgb(238,70,47)" fg:x="800" fg:w="23"/><text x="4.0783%" y="1967.50"></text></g><g><title>`0x7FF7E00CCDAD (23 samples, 0.11%)</title><rect x="3.8283%" y="1941" width="0.1101%" height="15" fill="rgb(231,160,17)" fg:x="800" fg:w="23"/><text x="4.0783%" y="1951.50"></text></g><g><title>`0x7FF7E00D158C (25 samples, 0.12%)</title><rect x="3.8235%" y="2085" width="0.1196%" height="15" fill="rgb(218,68,53)" fg:x="799" fg:w="25"/><text x="4.0735%" y="2095.50"></text></g><g><title>`0x7FF7E0088BAC (25 samples, 0.12%)</title><rect x="3.8235%" y="2069" width="0.1196%" height="15" fill="rgb(236,111,10)" fg:x="799" fg:w="25"/><text x="4.0735%" y="2079.50"></text></g><g><title>`0x7FF7E008EE16 (25 samples, 0.12%)</title><rect x="3.8235%" y="2053" width="0.1196%" height="15" fill="rgb(224,34,41)" fg:x="799" fg:w="25"/><text x="4.0735%" y="2063.50"></text></g><g><title>`0x7FF7E008A6CC (24 samples, 0.11%)</title><rect x="3.8283%" y="2037" width="0.1148%" height="15" fill="rgb(241,118,19)" fg:x="800" fg:w="24"/><text x="4.0783%" y="2047.50"></text></g><g><title>`0x7FF7E00903B2 (24 samples, 0.11%)</title><rect x="3.8283%" y="2021" width="0.1148%" height="15" fill="rgb(238,129,25)" fg:x="800" fg:w="24"/><text x="4.0783%" y="2031.50"></text></g><g><title>`0x7FF7E008B107 (24 samples, 0.11%)</title><rect x="3.8283%" y="2005" width="0.1148%" height="15" fill="rgb(238,22,31)" fg:x="800" fg:w="24"/><text x="4.0783%" y="2015.50"></text></g><g><title>`0x7FF7E00910ED (24 samples, 0.11%)</title><rect x="3.8283%" y="1989" width="0.1148%" height="15" fill="rgb(222,174,48)" fg:x="800" fg:w="24"/><text x="4.0783%" y="1999.50"></text></g><g><title>`0x7FF7E014F447 (24 samples, 0.11%)</title><rect x="3.8283%" y="1973" width="0.1148%" height="15" fill="rgb(206,152,40)" fg:x="800" fg:w="24"/><text x="4.0783%" y="1983.50"></text></g><g><title>`0x7FF7E00A415C (5 samples, 0.02%)</title><rect x="3.9623%" y="1941" width="0.0239%" height="15" fill="rgb(218,99,54)" fg:x="828" fg:w="5"/><text x="4.2123%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="3.9671%" y="1925" width="0.0191%" height="15" fill="rgb(220,174,26)" fg:x="829" fg:w="4"/><text x="4.2171%" y="1935.50"></text></g><g><title>`0x7FF7E00968E5 (3 samples, 0.01%)</title><rect x="3.9862%" y="1845" width="0.0144%" height="15" fill="rgb(245,116,9)" fg:x="833" fg:w="3"/><text x="4.2362%" y="1855.50"></text></g><g><title>`0x7FF7E00942E2 (3 samples, 0.01%)</title><rect x="3.9862%" y="1829" width="0.0144%" height="15" fill="rgb(209,72,35)" fg:x="833" fg:w="3"/><text x="4.2362%" y="1839.50"></text></g><g><title>`0x7FF7E00E221F (3 samples, 0.01%)</title><rect x="3.9862%" y="1813" width="0.0144%" height="15" fill="rgb(226,126,21)" fg:x="833" fg:w="3"/><text x="4.2362%" y="1823.50"></text></g><g><title>`0x7FF7E00E22FF (3 samples, 0.01%)</title><rect x="3.9862%" y="1797" width="0.0144%" height="15" fill="rgb(227,192,1)" fg:x="833" fg:w="3"/><text x="4.2362%" y="1807.50"></text></g><g><title>`0x7FF7E00E578D (4 samples, 0.02%)</title><rect x="3.9862%" y="1893" width="0.0191%" height="15" fill="rgb(237,180,29)" fg:x="833" fg:w="4"/><text x="4.2362%" y="1903.50"></text></g><g><title>`0x7FF7E00E2109 (4 samples, 0.02%)</title><rect x="3.9862%" y="1877" width="0.0191%" height="15" fill="rgb(230,197,35)" fg:x="833" fg:w="4"/><text x="4.2362%" y="1887.50"></text></g><g><title>`0x7FF7E00B0619 (4 samples, 0.02%)</title><rect x="3.9862%" y="1861" width="0.0191%" height="15" fill="rgb(246,193,31)" fg:x="833" fg:w="4"/><text x="4.2362%" y="1871.50"></text></g><g><title>`0x7FF7E00FA663 (4 samples, 0.02%)</title><rect x="4.0149%" y="1781" width="0.0191%" height="15" fill="rgb(241,36,4)" fg:x="839" fg:w="4"/><text x="4.2649%" y="1791.50"></text></g><g><title>`0x7FF7E00A3F3C (4 samples, 0.02%)</title><rect x="4.0149%" y="1765" width="0.0191%" height="15" fill="rgb(241,130,17)" fg:x="839" fg:w="4"/><text x="4.2649%" y="1775.50"></text></g><g><title>`0x7FF7E00F2D99 (3 samples, 0.01%)</title><rect x="4.0197%" y="1749" width="0.0144%" height="15" fill="rgb(206,137,32)" fg:x="840" fg:w="3"/><text x="4.2697%" y="1759.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.0197%" y="1733" width="0.0144%" height="15" fill="rgb(237,228,51)" fg:x="840" fg:w="3"/><text x="4.2697%" y="1743.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.0341%" y="1701" width="0.0144%" height="15" fill="rgb(243,6,42)" fg:x="843" fg:w="3"/><text x="4.2841%" y="1711.50"></text></g><g><title>`0x7FF7E00A4236 (9 samples, 0.04%)</title><rect x="4.0101%" y="1797" width="0.0431%" height="15" fill="rgb(251,74,28)" fg:x="838" fg:w="9"/><text x="4.2601%" y="1807.50"></text></g><g><title>`0x7FF7E00FA6CF (4 samples, 0.02%)</title><rect x="4.0341%" y="1781" width="0.0191%" height="15" fill="rgb(218,20,49)" fg:x="843" fg:w="4"/><text x="4.2841%" y="1791.50"></text></g><g><title>`0x7FF7E00A3F3C (4 samples, 0.02%)</title><rect x="4.0341%" y="1765" width="0.0191%" height="15" fill="rgb(238,28,14)" fg:x="843" fg:w="4"/><text x="4.2841%" y="1775.50"></text></g><g><title>`0x7FF7E00F2D99 (4 samples, 0.02%)</title><rect x="4.0341%" y="1749" width="0.0191%" height="15" fill="rgb(229,40,46)" fg:x="843" fg:w="4"/><text x="4.2841%" y="1759.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="4.0341%" y="1733" width="0.0191%" height="15" fill="rgb(244,195,20)" fg:x="843" fg:w="4"/><text x="4.2841%" y="1743.50"></text></g><g><title>`0x7FF7E00942E2 (4 samples, 0.02%)</title><rect x="4.0341%" y="1717" width="0.0191%" height="15" fill="rgb(253,56,35)" fg:x="843" fg:w="4"/><text x="4.2841%" y="1727.50"></text></g><g><title>`0x7FF7E00A455B (4 samples, 0.02%)</title><rect x="4.0628%" y="1717" width="0.0191%" height="15" fill="rgb(210,149,44)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1727.50"></text></g><g><title>`0x7FF7E0094AC3 (4 samples, 0.02%)</title><rect x="4.0628%" y="1701" width="0.0191%" height="15" fill="rgb(240,135,12)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1711.50"></text></g><g><title>`0x7FF7E0095C3E (4 samples, 0.02%)</title><rect x="4.0628%" y="1685" width="0.0191%" height="15" fill="rgb(251,24,50)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1695.50"></text></g><g><title>`0x7FF7E00B1E0D (4 samples, 0.02%)</title><rect x="4.0628%" y="1669" width="0.0191%" height="15" fill="rgb(243,200,47)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1679.50"></text></g><g><title>`0x7FF7E00B221A (4 samples, 0.02%)</title><rect x="4.0628%" y="1653" width="0.0191%" height="15" fill="rgb(224,166,26)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1663.50"></text></g><g><title>`0x7FF7E00968E5 (4 samples, 0.02%)</title><rect x="4.0628%" y="1637" width="0.0191%" height="15" fill="rgb(233,0,47)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1647.50"></text></g><g><title>`0x7FF7E00942E2 (4 samples, 0.02%)</title><rect x="4.0628%" y="1621" width="0.0191%" height="15" fill="rgb(253,80,5)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1631.50"></text></g><g><title>`0x7FF7E00B244B (4 samples, 0.02%)</title><rect x="4.0628%" y="1605" width="0.0191%" height="15" fill="rgb(214,133,25)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1615.50"></text></g><g><title>`0x7FF7E00B2733 (4 samples, 0.02%)</title><rect x="4.0628%" y="1589" width="0.0191%" height="15" fill="rgb(209,27,14)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1599.50"></text></g><g><title>`0x7FF7E00B2C4C (4 samples, 0.02%)</title><rect x="4.0628%" y="1573" width="0.0191%" height="15" fill="rgb(219,102,51)" fg:x="849" fg:w="4"/><text x="4.3128%" y="1583.50"></text></g><g><title>`0x7FF7E00F2D99 (6 samples, 0.03%)</title><rect x="4.0628%" y="1765" width="0.0287%" height="15" fill="rgb(237,18,16)" fg:x="849" fg:w="6"/><text x="4.3128%" y="1775.50"></text></g><g><title>`0x7FF7E0092CAB (6 samples, 0.03%)</title><rect x="4.0628%" y="1749" width="0.0287%" height="15" fill="rgb(241,85,17)" fg:x="849" fg:w="6"/><text x="4.3128%" y="1759.50"></text></g><g><title>`0x7FF7E00942E2 (6 samples, 0.03%)</title><rect x="4.0628%" y="1733" width="0.0287%" height="15" fill="rgb(236,90,42)" fg:x="849" fg:w="6"/><text x="4.3128%" y="1743.50"></text></g><g><title>`0x7FF7E00F2D99 (18 samples, 0.09%)</title><rect x="4.0101%" y="1845" width="0.0861%" height="15" fill="rgb(249,57,21)" fg:x="838" fg:w="18"/><text x="4.2601%" y="1855.50"></text></g><g><title>`0x7FF7E0092CAB (18 samples, 0.09%)</title><rect x="4.0101%" y="1829" width="0.0861%" height="15" fill="rgb(243,12,36)" fg:x="838" fg:w="18"/><text x="4.2601%" y="1839.50"></text></g><g><title>`0x7FF7E00942E2 (18 samples, 0.09%)</title><rect x="4.0101%" y="1813" width="0.0861%" height="15" fill="rgb(253,128,47)" fg:x="838" fg:w="18"/><text x="4.2601%" y="1823.50"></text></g><g><title>`0x7FF7E00A447E (7 samples, 0.03%)</title><rect x="4.0628%" y="1797" width="0.0335%" height="15" fill="rgb(207,33,20)" fg:x="849" fg:w="7"/><text x="4.3128%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="4.0628%" y="1781" width="0.0335%" height="15" fill="rgb(233,215,35)" fg:x="849" fg:w="7"/><text x="4.3128%" y="1791.50"></text></g><g><title>`0x7FF7E00E71CC (19 samples, 0.09%)</title><rect x="4.0101%" y="1861" width="0.0909%" height="15" fill="rgb(249,188,52)" fg:x="838" fg:w="19"/><text x="4.2601%" y="1871.50"></text></g><g><title>`0x7FF7E00A3F3C (3 samples, 0.01%)</title><rect x="4.1154%" y="1125" width="0.0144%" height="15" fill="rgb(225,12,32)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1135.50"></text></g><g><title>`0x7FF7E00F2D99 (3 samples, 0.01%)</title><rect x="4.1154%" y="1109" width="0.0144%" height="15" fill="rgb(247,98,14)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1119.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.1154%" y="1093" width="0.0144%" height="15" fill="rgb(247,219,48)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1103.50"></text></g><g><title>`0x7FF7E00942E2 (3 samples, 0.01%)</title><rect x="4.1154%" y="1077" width="0.0144%" height="15" fill="rgb(253,60,48)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1087.50"></text></g><g><title>`0x7FF7E00A42DE (3 samples, 0.01%)</title><rect x="4.1154%" y="1061" width="0.0144%" height="15" fill="rgb(245,15,52)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1071.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.1154%" y="1045" width="0.0144%" height="15" fill="rgb(220,133,28)" fg:x="860" fg:w="3"/><text x="4.3654%" y="1055.50"></text></g><g><title>`0x7FF7E00A42DE (4 samples, 0.02%)</title><rect x="4.1154%" y="1157" width="0.0191%" height="15" fill="rgb(217,180,4)" fg:x="860" fg:w="4"/><text x="4.3654%" y="1167.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.1154%" y="1141" width="0.0191%" height="15" fill="rgb(251,24,1)" fg:x="860" fg:w="4"/><text x="4.3654%" y="1151.50"></text></g><g><title>`0x7FF7E00A3F3C (7 samples, 0.03%)</title><rect x="4.1106%" y="1221" width="0.0335%" height="15" fill="rgb(212,185,49)" fg:x="859" fg:w="7"/><text x="4.3606%" y="1231.50"></text></g><g><title>`0x7FF7E00F2D99 (7 samples, 0.03%)</title><rect x="4.1106%" y="1205" width="0.0335%" height="15" fill="rgb(215,175,22)" fg:x="859" fg:w="7"/><text x="4.3606%" y="1215.50"></text></g><g><title>`0x7FF7E0092CAB (7 samples, 0.03%)</title><rect x="4.1106%" y="1189" width="0.0335%" height="15" fill="rgb(250,205,14)" fg:x="859" fg:w="7"/><text x="4.3606%" y="1199.50"></text></g><g><title>`0x7FF7E00942E2 (7 samples, 0.03%)</title><rect x="4.1106%" y="1173" width="0.0335%" height="15" fill="rgb(225,211,22)" fg:x="859" fg:w="7"/><text x="4.3606%" y="1183.50"></text></g><g><title>`0x7FF7E00A4236 (11 samples, 0.05%)</title><rect x="4.1059%" y="1253" width="0.0526%" height="15" fill="rgb(251,179,42)" fg:x="858" fg:w="11"/><text x="4.3559%" y="1263.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="4.1106%" y="1237" width="0.0479%" height="15" fill="rgb(208,216,51)" fg:x="859" fg:w="10"/><text x="4.3606%" y="1247.50"></text></g><g><title>`0x7FF7E00A7A8C (3 samples, 0.01%)</title><rect x="4.1441%" y="1221" width="0.0144%" height="15" fill="rgb(235,36,11)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1231.50"></text></g><g><title>`0x7FF7E00A7BB6 (3 samples, 0.01%)</title><rect x="4.1441%" y="1205" width="0.0144%" height="15" fill="rgb(213,189,28)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1215.50"></text></g><g><title>`0x7FF7E00A7CEB (3 samples, 0.01%)</title><rect x="4.1441%" y="1189" width="0.0144%" height="15" fill="rgb(227,203,42)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1199.50"></text></g><g><title>`0x7FF7E00A81AD (3 samples, 0.01%)</title><rect x="4.1441%" y="1173" width="0.0144%" height="15" fill="rgb(244,72,36)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1183.50"></text></g><g><title>`0x7FF7E00A8C38 (3 samples, 0.01%)</title><rect x="4.1441%" y="1157" width="0.0144%" height="15" fill="rgb(213,53,17)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1167.50"></text></g><g><title>`0x7FF7E00AE3F2 (3 samples, 0.01%)</title><rect x="4.1441%" y="1141" width="0.0144%" height="15" fill="rgb(207,167,3)" fg:x="866" fg:w="3"/><text x="4.3941%" y="1151.50"></text></g><g><title>`0x7FF7E00A42DE (3 samples, 0.01%)</title><rect x="4.1585%" y="1253" width="0.0144%" height="15" fill="rgb(216,98,30)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1263.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.1585%" y="1237" width="0.0144%" height="15" fill="rgb(236,123,15)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1247.50"></text></g><g><title>`0x7FF7E00A3F3C (3 samples, 0.01%)</title><rect x="4.1585%" y="1221" width="0.0144%" height="15" fill="rgb(248,81,50)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1231.50"></text></g><g><title>`0x7FF7E00F2D99 (3 samples, 0.01%)</title><rect x="4.1585%" y="1205" width="0.0144%" height="15" fill="rgb(214,120,4)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1215.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.1585%" y="1189" width="0.0144%" height="15" fill="rgb(208,179,34)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1199.50"></text></g><g><title>`0x7FF7E00942E2 (3 samples, 0.01%)</title><rect x="4.1585%" y="1173" width="0.0144%" height="15" fill="rgb(227,140,7)" fg:x="869" fg:w="3"/><text x="4.4085%" y="1183.50"></text></g><g><title>`0x7FF7E00F2D99 (17 samples, 0.08%)</title><rect x="4.1059%" y="1301" width="0.0814%" height="15" fill="rgb(214,22,6)" fg:x="858" fg:w="17"/><text x="4.3559%" y="1311.50"></text></g><g><title>`0x7FF7E0092CAB (17 samples, 0.08%)</title><rect x="4.1059%" y="1285" width="0.0814%" height="15" fill="rgb(207,137,27)" fg:x="858" fg:w="17"/><text x="4.3559%" y="1295.50"></text></g><g><title>`0x7FF7E00942E2 (17 samples, 0.08%)</title><rect x="4.1059%" y="1269" width="0.0814%" height="15" fill="rgb(210,8,46)" fg:x="858" fg:w="17"/><text x="4.3559%" y="1279.50"></text></g><g><title>`0x7FF7E00A3F3C (19 samples, 0.09%)</title><rect x="4.1059%" y="1317" width="0.0909%" height="15" fill="rgb(240,16,54)" fg:x="858" fg:w="19"/><text x="4.3559%" y="1327.50"></text></g><g><title>`0x7FF7E00E71CC (21 samples, 0.10%)</title><rect x="4.1059%" y="1413" width="0.1005%" height="15" fill="rgb(211,209,29)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1423.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (21 samples, 0.10%)</title><rect x="4.1059%" y="1397" width="0.1005%" height="15" fill="rgb(226,228,24)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1407.50"></text></g><g><title>`0x7FF7E0092CAB (21 samples, 0.10%)</title><rect x="4.1059%" y="1381" width="0.1005%" height="15" fill="rgb(222,84,9)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1391.50"></text></g><g><title>`0x7FF7E00942E2 (21 samples, 0.10%)</title><rect x="4.1059%" y="1365" width="0.1005%" height="15" fill="rgb(234,203,30)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1375.50"></text></g><g><title>`0x7FF7E00A4236 (21 samples, 0.10%)</title><rect x="4.1059%" y="1349" width="0.1005%" height="15" fill="rgb(238,109,14)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1359.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (21 samples, 0.10%)</title><rect x="4.1059%" y="1333" width="0.1005%" height="15" fill="rgb(233,206,34)" fg:x="858" fg:w="21"/><text x="4.3559%" y="1343.50"></text></g><g><title>`0x7FF7E00E5876 (42 samples, 0.20%)</title><rect x="4.0101%" y="1893" width="0.2010%" height="15" fill="rgb(220,167,47)" fg:x="838" fg:w="42"/><text x="4.2601%" y="1903.50"></text></g><g><title>`0x7FF7E00E4BA2 (42 samples, 0.20%)</title><rect x="4.0101%" y="1877" width="0.2010%" height="15" fill="rgb(238,105,10)" fg:x="838" fg:w="42"/><text x="4.2601%" y="1887.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (23 samples, 0.11%)</title><rect x="4.1011%" y="1861" width="0.1101%" height="15" fill="rgb(213,227,17)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1871.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (23 samples, 0.11%)</title><rect x="4.1011%" y="1845" width="0.1101%" height="15" fill="rgb(217,132,38)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1855.50"></text></g><g><title>`0x7FF7E0092CAB (23 samples, 0.11%)</title><rect x="4.1011%" y="1829" width="0.1101%" height="15" fill="rgb(242,146,4)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1839.50"></text></g><g><title>`0x7FF7E00942E2 (23 samples, 0.11%)</title><rect x="4.1011%" y="1813" width="0.1101%" height="15" fill="rgb(212,61,9)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1823.50"></text></g><g><title>`0x7FF7E00A439E (23 samples, 0.11%)</title><rect x="4.1011%" y="1797" width="0.1101%" height="15" fill="rgb(247,126,22)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (23 samples, 0.11%)</title><rect x="4.1011%" y="1781" width="0.1101%" height="15" fill="rgb(220,196,2)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1791.50"></text></g><g><title>`0x7FF7E00A7A8C (23 samples, 0.11%)</title><rect x="4.1011%" y="1765" width="0.1101%" height="15" fill="rgb(208,46,4)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1775.50"></text></g><g><title>`0x7FF7E00A7BB6 (23 samples, 0.11%)</title><rect x="4.1011%" y="1749" width="0.1101%" height="15" fill="rgb(252,104,46)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1759.50"></text></g><g><title>`0x7FF7E00A7CEB (23 samples, 0.11%)</title><rect x="4.1011%" y="1733" width="0.1101%" height="15" fill="rgb(237,152,48)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1743.50"></text></g><g><title>`0x7FF7E00A81AD (23 samples, 0.11%)</title><rect x="4.1011%" y="1717" width="0.1101%" height="15" fill="rgb(221,59,37)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1727.50"></text></g><g><title>`0x7FF7E00A8BEC (23 samples, 0.11%)</title><rect x="4.1011%" y="1701" width="0.1101%" height="15" fill="rgb(209,202,51)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1711.50"></text></g><g><title>`0x7FF7E00A8D26 (23 samples, 0.11%)</title><rect x="4.1011%" y="1685" width="0.1101%" height="15" fill="rgb(228,81,30)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1695.50"></text></g><g><title>`0x7FF7E00A9685 (23 samples, 0.11%)</title><rect x="4.1011%" y="1669" width="0.1101%" height="15" fill="rgb(227,42,39)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1679.50"></text></g><g><title>`0x7FF7E00A9CE6 (23 samples, 0.11%)</title><rect x="4.1011%" y="1653" width="0.1101%" height="15" fill="rgb(221,26,2)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1663.50"></text></g><g><title>`0x7FF7E00A9DAC (23 samples, 0.11%)</title><rect x="4.1011%" y="1637" width="0.1101%" height="15" fill="rgb(254,61,31)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1647.50"></text></g><g><title>`0x7FF7E00AA260 (23 samples, 0.11%)</title><rect x="4.1011%" y="1621" width="0.1101%" height="15" fill="rgb(222,173,38)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (23 samples, 0.11%)</title><rect x="4.1011%" y="1605" width="0.1101%" height="15" fill="rgb(218,50,12)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1615.50"></text></g><g><title>`0x7FF7E00A7A8C (23 samples, 0.11%)</title><rect x="4.1011%" y="1589" width="0.1101%" height="15" fill="rgb(223,88,40)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1599.50"></text></g><g><title>`0x7FF7E00A7BB6 (23 samples, 0.11%)</title><rect x="4.1011%" y="1573" width="0.1101%" height="15" fill="rgb(237,54,19)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1583.50"></text></g><g><title>`0x7FF7E00A7CEB (23 samples, 0.11%)</title><rect x="4.1011%" y="1557" width="0.1101%" height="15" fill="rgb(251,129,25)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1567.50"></text></g><g><title>`0x7FF7E00A81AD (23 samples, 0.11%)</title><rect x="4.1011%" y="1541" width="0.1101%" height="15" fill="rgb(238,97,19)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1551.50"></text></g><g><title>`0x7FF7E00A8BEC (23 samples, 0.11%)</title><rect x="4.1011%" y="1525" width="0.1101%" height="15" fill="rgb(240,169,18)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1535.50"></text></g><g><title>`0x7FF7E00A8D26 (23 samples, 0.11%)</title><rect x="4.1011%" y="1509" width="0.1101%" height="15" fill="rgb(230,187,49)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1519.50"></text></g><g><title>`0x7FF7E00A9685 (23 samples, 0.11%)</title><rect x="4.1011%" y="1493" width="0.1101%" height="15" fill="rgb(209,44,26)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1503.50"></text></g><g><title>`0x7FF7E00A9CE6 (23 samples, 0.11%)</title><rect x="4.1011%" y="1477" width="0.1101%" height="15" fill="rgb(244,0,6)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1487.50"></text></g><g><title>`0x7FF7E00A9DAC (23 samples, 0.11%)</title><rect x="4.1011%" y="1461" width="0.1101%" height="15" fill="rgb(248,18,21)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1471.50"></text></g><g><title>`0x7FF7E00AA3FF (23 samples, 0.11%)</title><rect x="4.1011%" y="1445" width="0.1101%" height="15" fill="rgb(245,180,19)" fg:x="857" fg:w="23"/><text x="4.3511%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="4.1059%" y="1429" width="0.1053%" height="15" fill="rgb(252,118,36)" fg:x="858" fg:w="22"/><text x="4.3559%" y="1439.50"></text></g><g><title>`0x7FF7E0095C97 (52 samples, 0.25%)</title><rect x="3.9862%" y="1909" width="0.2488%" height="15" fill="rgb(210,224,19)" fg:x="833" fg:w="52"/><text x="4.2362%" y="1919.50"></text></g><g><title>`0x7FF7E00E59E0 (5 samples, 0.02%)</title><rect x="4.2111%" y="1893" width="0.0239%" height="15" fill="rgb(218,30,24)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1903.50"></text></g><g><title>`0x7FF7E00A71D1 (5 samples, 0.02%)</title><rect x="4.2111%" y="1877" width="0.0239%" height="15" fill="rgb(219,75,50)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1887.50"></text></g><g><title>`0x7FF7E00B773E (5 samples, 0.02%)</title><rect x="4.2111%" y="1861" width="0.0239%" height="15" fill="rgb(234,72,50)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1871.50"></text></g><g><title>`0x7FF7E00B7EE9 (5 samples, 0.02%)</title><rect x="4.2111%" y="1845" width="0.0239%" height="15" fill="rgb(219,100,48)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1855.50"></text></g><g><title>`0x7FF7E00C9506 (5 samples, 0.02%)</title><rect x="4.2111%" y="1829" width="0.0239%" height="15" fill="rgb(253,5,41)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1839.50"></text></g><g><title>`0x7FF7E00C96CA (5 samples, 0.02%)</title><rect x="4.2111%" y="1813" width="0.0239%" height="15" fill="rgb(247,181,11)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1823.50"></text></g><g><title>`0x7FF7E00C99DA (5 samples, 0.02%)</title><rect x="4.2111%" y="1797" width="0.0239%" height="15" fill="rgb(222,223,25)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1807.50"></text></g><g><title>`0x7FF7E00C9AE4 (5 samples, 0.02%)</title><rect x="4.2111%" y="1781" width="0.0239%" height="15" fill="rgb(214,198,28)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1791.50"></text></g><g><title>`0x7FF7E00D7D8A (5 samples, 0.02%)</title><rect x="4.2111%" y="1765" width="0.0239%" height="15" fill="rgb(230,46,43)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1775.50"></text></g><g><title>`0x7FF7E00C9DC9 (5 samples, 0.02%)</title><rect x="4.2111%" y="1749" width="0.0239%" height="15" fill="rgb(233,65,53)" fg:x="880" fg:w="5"/><text x="4.4611%" y="1759.50"></text></g><g><title>`0x7FF7E00942E2 (64 samples, 0.31%)</title><rect x="3.9623%" y="1957" width="0.3063%" height="15" fill="rgb(221,121,27)" fg:x="828" fg:w="64"/><text x="4.2123%" y="1967.50"></text></g><g><title>`0x7FF7E00A455B (59 samples, 0.28%)</title><rect x="3.9862%" y="1941" width="0.2823%" height="15" fill="rgb(247,70,47)" fg:x="833" fg:w="59"/><text x="4.2362%" y="1951.50"></text></g><g><title>`0x7FF7E0094AC3 (59 samples, 0.28%)</title><rect x="3.9862%" y="1925" width="0.2823%" height="15" fill="rgb(228,85,35)" fg:x="833" fg:w="59"/><text x="4.2362%" y="1935.50"></text></g><g><title>`0x7FF7E0095EAD (3 samples, 0.01%)</title><rect x="4.2542%" y="1909" width="0.0144%" height="15" fill="rgb(209,50,18)" fg:x="889" fg:w="3"/><text x="4.5042%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.2542%" y="1893" width="0.0144%" height="15" fill="rgb(250,19,35)" fg:x="889" fg:w="3"/><text x="4.5042%" y="1903.50"></text></g><g><title>`0x7FF7E00968E5 (3 samples, 0.01%)</title><rect x="4.2781%" y="1845" width="0.0144%" height="15" fill="rgb(253,107,29)" fg:x="894" fg:w="3"/><text x="4.5281%" y="1855.50"></text></g><g><title>`0x7FF7E01106E8 (3 samples, 0.01%)</title><rect x="4.2781%" y="1829" width="0.0144%" height="15" fill="rgb(252,179,29)" fg:x="894" fg:w="3"/><text x="4.5281%" y="1839.50"></text></g><g><title>`0x7FF7E00E221F (3 samples, 0.01%)</title><rect x="4.2781%" y="1813" width="0.0144%" height="15" fill="rgb(238,194,6)" fg:x="894" fg:w="3"/><text x="4.5281%" y="1823.50"></text></g><g><title>`0x7FF7E00E22FF (3 samples, 0.01%)</title><rect x="4.2781%" y="1797" width="0.0144%" height="15" fill="rgb(238,164,29)" fg:x="894" fg:w="3"/><text x="4.5281%" y="1807.50"></text></g><g><title>`0x7FF7E00E578D (4 samples, 0.02%)</title><rect x="4.2781%" y="1893" width="0.0191%" height="15" fill="rgb(224,25,9)" fg:x="894" fg:w="4"/><text x="4.5281%" y="1903.50"></text></g><g><title>`0x7FF7E00E2109 (4 samples, 0.02%)</title><rect x="4.2781%" y="1877" width="0.0191%" height="15" fill="rgb(244,153,23)" fg:x="894" fg:w="4"/><text x="4.5281%" y="1887.50"></text></g><g><title>`0x7FF7E00B0619 (4 samples, 0.02%)</title><rect x="4.2781%" y="1861" width="0.0191%" height="15" fill="rgb(212,203,14)" fg:x="894" fg:w="4"/><text x="4.5281%" y="1871.50"></text></g><g><title>`0x7FF7E00A42DE (4 samples, 0.02%)</title><rect x="4.3068%" y="1573" width="0.0191%" height="15" fill="rgb(220,164,20)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.3068%" y="1557" width="0.0191%" height="15" fill="rgb(222,203,48)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1567.50"></text></g><g><title>`0x7FF7E00A3F3C (4 samples, 0.02%)</title><rect x="4.3068%" y="1541" width="0.0191%" height="15" fill="rgb(215,159,22)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1551.50"></text></g><g><title>`0x7FF7E00F2D99 (4 samples, 0.02%)</title><rect x="4.3068%" y="1525" width="0.0191%" height="15" fill="rgb(216,183,47)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1535.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="4.3068%" y="1509" width="0.0191%" height="15" fill="rgb(229,195,25)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1519.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.3068%" y="1493" width="0.0191%" height="15" fill="rgb(224,132,51)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1503.50"></text></g><g><title>`0x7FF7E00A4236 (4 samples, 0.02%)</title><rect x="4.3068%" y="1477" width="0.0191%" height="15" fill="rgb(240,63,7)" fg:x="900" fg:w="4"/><text x="4.5568%" y="1487.50"></text></g><g><title>`0x7FF7E00FA6CF (3 samples, 0.01%)</title><rect x="4.3116%" y="1461" width="0.0144%" height="15" fill="rgb(249,182,41)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1471.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.3116%" y="1445" width="0.0144%" height="15" fill="rgb(243,47,26)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1455.50"></text></g><g><title>`0x7FF7E00FA6CF (3 samples, 0.01%)</title><rect x="4.3116%" y="1429" width="0.0144%" height="15" fill="rgb(233,48,2)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1439.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.3116%" y="1413" width="0.0144%" height="15" fill="rgb(244,165,34)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1423.50"></text></g><g><title>`0x7FF7E00FA663 (3 samples, 0.01%)</title><rect x="4.3116%" y="1397" width="0.0144%" height="15" fill="rgb(207,89,7)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1407.50"></text></g><g><title>`0x7FF7E00A3F3C (3 samples, 0.01%)</title><rect x="4.3116%" y="1381" width="0.0144%" height="15" fill="rgb(244,117,36)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1391.50"></text></g><g><title>`0x7FF7E00F2D99 (3 samples, 0.01%)</title><rect x="4.3116%" y="1365" width="0.0144%" height="15" fill="rgb(226,144,34)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1375.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.3116%" y="1349" width="0.0144%" height="15" fill="rgb(213,23,19)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1359.50"></text></g><g><title>`0x7FF7E01106E8 (3 samples, 0.01%)</title><rect x="4.3116%" y="1333" width="0.0144%" height="15" fill="rgb(217,75,12)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1343.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.3116%" y="1317" width="0.0144%" height="15" fill="rgb(224,159,17)" fg:x="901" fg:w="3"/><text x="4.5616%" y="1327.50"></text></g><g><title>`0x7FF7E00A415C (6 samples, 0.03%)</title><rect x="4.3068%" y="1797" width="0.0287%" height="15" fill="rgb(217,118,1)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1807.50"></text></g><g><title>`0x7FF7E00E5876 (6 samples, 0.03%)</title><rect x="4.3068%" y="1781" width="0.0287%" height="15" fill="rgb(232,180,48)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1791.50"></text></g><g><title>`0x7FF7E00E4BA2 (6 samples, 0.03%)</title><rect x="4.3068%" y="1765" width="0.0287%" height="15" fill="rgb(230,27,33)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1775.50"></text></g><g><title>`0x7FF7E00E71CC (6 samples, 0.03%)</title><rect x="4.3068%" y="1749" width="0.0287%" height="15" fill="rgb(205,31,21)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1759.50"></text></g><g><title>`0x7FF7E00F2D99 (6 samples, 0.03%)</title><rect x="4.3068%" y="1733" width="0.0287%" height="15" fill="rgb(253,59,4)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1743.50"></text></g><g><title>`0x7FF7E0092CAB (6 samples, 0.03%)</title><rect x="4.3068%" y="1717" width="0.0287%" height="15" fill="rgb(224,201,9)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1727.50"></text></g><g><title>`0x7FF7E01106E8 (6 samples, 0.03%)</title><rect x="4.3068%" y="1701" width="0.0287%" height="15" fill="rgb(229,206,30)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1711.50"></text></g><g><title>`0x7FF7E00A415C (6 samples, 0.03%)</title><rect x="4.3068%" y="1685" width="0.0287%" height="15" fill="rgb(212,67,47)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1695.50"></text></g><g><title>`0x7FF7E00E5876 (6 samples, 0.03%)</title><rect x="4.3068%" y="1669" width="0.0287%" height="15" fill="rgb(211,96,50)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1679.50"></text></g><g><title>`0x7FF7E00E4BA2 (6 samples, 0.03%)</title><rect x="4.3068%" y="1653" width="0.0287%" height="15" fill="rgb(252,114,18)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1663.50"></text></g><g><title>`0x7FF7E00E71CC (6 samples, 0.03%)</title><rect x="4.3068%" y="1637" width="0.0287%" height="15" fill="rgb(223,58,37)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1647.50"></text></g><g><title>`0x7FF7E00F2D99 (6 samples, 0.03%)</title><rect x="4.3068%" y="1621" width="0.0287%" height="15" fill="rgb(237,70,4)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1631.50"></text></g><g><title>`0x7FF7E0092CAB (6 samples, 0.03%)</title><rect x="4.3068%" y="1605" width="0.0287%" height="15" fill="rgb(244,85,46)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1615.50"></text></g><g><title>`0x7FF7E01106E8 (6 samples, 0.03%)</title><rect x="4.3068%" y="1589" width="0.0287%" height="15" fill="rgb(223,39,52)" fg:x="900" fg:w="6"/><text x="4.5568%" y="1599.50"></text></g><g><title>`0x7FF7E00A4236 (4 samples, 0.02%)</title><rect x="4.3356%" y="1797" width="0.0191%" height="15" fill="rgb(218,200,14)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1807.50"></text></g><g><title>`0x7FF7E00FA663 (4 samples, 0.02%)</title><rect x="4.3356%" y="1781" width="0.0191%" height="15" fill="rgb(208,171,16)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1791.50"></text></g><g><title>`0x7FF7E00A3F3C (4 samples, 0.02%)</title><rect x="4.3356%" y="1765" width="0.0191%" height="15" fill="rgb(234,200,18)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1775.50"></text></g><g><title>`0x7FF7E00F2D99 (4 samples, 0.02%)</title><rect x="4.3356%" y="1749" width="0.0191%" height="15" fill="rgb(228,45,11)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1759.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="4.3356%" y="1733" width="0.0191%" height="15" fill="rgb(237,182,11)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1743.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.3356%" y="1717" width="0.0191%" height="15" fill="rgb(241,175,49)" fg:x="906" fg:w="4"/><text x="4.5856%" y="1727.50"></text></g><g><title>`0x7FF7E00A42DE (3 samples, 0.01%)</title><rect x="4.3547%" y="1797" width="0.0144%" height="15" fill="rgb(247,38,35)" fg:x="910" fg:w="3"/><text x="4.6047%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.3547%" y="1781" width="0.0144%" height="15" fill="rgb(228,39,49)" fg:x="910" fg:w="3"/><text x="4.6047%" y="1791.50"></text></g><g><title>`0x7FF7E00E5876 (16 samples, 0.08%)</title><rect x="4.3068%" y="1893" width="0.0766%" height="15" fill="rgb(226,101,26)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1903.50"></text></g><g><title>`0x7FF7E00E4BA2 (16 samples, 0.08%)</title><rect x="4.3068%" y="1877" width="0.0766%" height="15" fill="rgb(206,141,19)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1887.50"></text></g><g><title>`0x7FF7E00E71CC (16 samples, 0.08%)</title><rect x="4.3068%" y="1861" width="0.0766%" height="15" fill="rgb(211,200,13)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1871.50"></text></g><g><title>`0x7FF7E00F2D99 (16 samples, 0.08%)</title><rect x="4.3068%" y="1845" width="0.0766%" height="15" fill="rgb(241,121,6)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1855.50"></text></g><g><title>`0x7FF7E0092CAB (16 samples, 0.08%)</title><rect x="4.3068%" y="1829" width="0.0766%" height="15" fill="rgb(234,221,29)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1839.50"></text></g><g><title>`0x7FF7E01106E8 (16 samples, 0.08%)</title><rect x="4.3068%" y="1813" width="0.0766%" height="15" fill="rgb(229,136,5)" fg:x="900" fg:w="16"/><text x="4.5568%" y="1823.50"></text></g><g><title>`0x7FF7E00910ED (93 samples, 0.45%)</title><rect x="3.9575%" y="1989" width="0.4450%" height="15" fill="rgb(238,36,11)" fg:x="827" fg:w="93"/><text x="4.2075%" y="1999.50"></text></g><g><title>`0x7FF7E0092CAB (92 samples, 0.44%)</title><rect x="3.9623%" y="1973" width="0.4403%" height="15" fill="rgb(251,55,41)" fg:x="828" fg:w="92"/><text x="4.2123%" y="1983.50"></text></g><g><title>`0x7FF7E01106E8 (28 samples, 0.13%)</title><rect x="4.2686%" y="1957" width="0.1340%" height="15" fill="rgb(242,34,40)" fg:x="892" fg:w="28"/><text x="4.5186%" y="1967.50"></text></g><g><title>`0x7FF7E00A455B (28 samples, 0.13%)</title><rect x="4.2686%" y="1941" width="0.1340%" height="15" fill="rgb(215,42,17)" fg:x="892" fg:w="28"/><text x="4.5186%" y="1951.50"></text></g><g><title>`0x7FF7E0094AC3 (28 samples, 0.13%)</title><rect x="4.2686%" y="1925" width="0.1340%" height="15" fill="rgb(207,44,46)" fg:x="892" fg:w="28"/><text x="4.5186%" y="1935.50"></text></g><g><title>`0x7FF7E0095C97 (28 samples, 0.13%)</title><rect x="4.2686%" y="1909" width="0.1340%" height="15" fill="rgb(211,206,28)" fg:x="892" fg:w="28"/><text x="4.5186%" y="1919.50"></text></g><g><title>`0x7FF7E00E59E0 (4 samples, 0.02%)</title><rect x="4.3834%" y="1893" width="0.0191%" height="15" fill="rgb(237,167,16)" fg:x="916" fg:w="4"/><text x="4.6334%" y="1903.50"></text></g><g><title>`0x7FF7E011233E (4 samples, 0.02%)</title><rect x="4.3834%" y="1877" width="0.0191%" height="15" fill="rgb(233,66,6)" fg:x="916" fg:w="4"/><text x="4.6334%" y="1887.50"></text></g><g><title>`0x7FF7E008EE16 (98 samples, 0.47%)</title><rect x="3.9479%" y="2053" width="0.4690%" height="15" fill="rgb(246,123,29)" fg:x="825" fg:w="98"/><text x="4.1979%" y="2063.50"></text></g><g><title>`0x7FF7E008A6CC (97 samples, 0.46%)</title><rect x="3.9527%" y="2037" width="0.4642%" height="15" fill="rgb(209,62,40)" fg:x="826" fg:w="97"/><text x="4.2027%" y="2047.50"></text></g><g><title>`0x7FF7E00903B2 (97 samples, 0.46%)</title><rect x="3.9527%" y="2021" width="0.4642%" height="15" fill="rgb(218,4,25)" fg:x="826" fg:w="97"/><text x="4.2027%" y="2031.50"></text></g><g><title>`0x7FF7E008B107 (97 samples, 0.46%)</title><rect x="3.9527%" y="2005" width="0.4642%" height="15" fill="rgb(253,91,49)" fg:x="826" fg:w="97"/><text x="4.2027%" y="2015.50"></text></g><g><title>`0x7FF7E00912C0 (3 samples, 0.01%)</title><rect x="4.4025%" y="1989" width="0.0144%" height="15" fill="rgb(228,155,29)" fg:x="920" fg:w="3"/><text x="4.6525%" y="1999.50"></text></g><g><title>`0x7FF7E00CFF57 (3 samples, 0.01%)</title><rect x="4.4025%" y="1973" width="0.0144%" height="15" fill="rgb(243,57,37)" fg:x="920" fg:w="3"/><text x="4.6525%" y="1983.50"></text></g><g><title>`0x7FF7E008A3F1 (3 samples, 0.01%)</title><rect x="4.4265%" y="1989" width="0.0144%" height="15" fill="rgb(244,167,17)" fg:x="925" fg:w="3"/><text x="4.6765%" y="1999.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (3 samples, 0.01%)</title><rect x="4.4265%" y="1973" width="0.0144%" height="15" fill="rgb(207,181,38)" fg:x="925" fg:w="3"/><text x="4.6765%" y="1983.50"></text></g><g><title>deno.exe`deno::tsc::op_load::v8_fn_ptr (3 samples, 0.01%)</title><rect x="4.4265%" y="1957" width="0.0144%" height="15" fill="rgb(211,8,23)" fg:x="925" fg:w="3"/><text x="4.6765%" y="1967.50"></text></g><g><title>deno.exe`deno::tsc::op_load::v8_func(v8::scope::HandleScope (3 samples, 0.01%)</title><rect x="4.4265%" y="1941" width="0.0144%" height="15" fill="rgb(235,11,44)" fg:x="925" fg:w="3"/><text x="4.6765%" y="1951.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.4504%" y="1813" width="0.0144%" height="15" fill="rgb(248,18,52)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1823.50"></text></g><g><title>`0x7FF7E01106E8 (3 samples, 0.01%)</title><rect x="4.4504%" y="1797" width="0.0144%" height="15" fill="rgb(208,4,7)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1807.50"></text></g><g><title>`0x7FF7E00A439E (3 samples, 0.01%)</title><rect x="4.4504%" y="1781" width="0.0144%" height="15" fill="rgb(240,17,39)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1791.50"></text></g><g><title>`0x7FF7E00F3D61 (3 samples, 0.01%)</title><rect x="4.4504%" y="1765" width="0.0144%" height="15" fill="rgb(207,170,3)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1775.50"></text></g><g><title>`0x7FF7E00A7A8C (3 samples, 0.01%)</title><rect x="4.4504%" y="1749" width="0.0144%" height="15" fill="rgb(236,100,52)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1759.50"></text></g><g><title>`0x7FF7E01125A7 (3 samples, 0.01%)</title><rect x="4.4504%" y="1733" width="0.0144%" height="15" fill="rgb(246,78,51)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1743.50"></text></g><g><title>`0x7FF7E00A7CEB (3 samples, 0.01%)</title><rect x="4.4504%" y="1717" width="0.0144%" height="15" fill="rgb(211,17,15)" fg:x="930" fg:w="3"/><text x="4.7004%" y="1727.50"></text></g><g><title>`0x7FF7E00A415C (7 samples, 0.03%)</title><rect x="4.4504%" y="1893" width="0.0335%" height="15" fill="rgb(209,59,46)" fg:x="930" fg:w="7"/><text x="4.7004%" y="1903.50"></text></g><g><title>`0x7FF7E00E5876 (7 samples, 0.03%)</title><rect x="4.4504%" y="1877" width="0.0335%" height="15" fill="rgb(210,92,25)" fg:x="930" fg:w="7"/><text x="4.7004%" y="1887.50"></text></g><g><title>`0x7FF7E00E4BA2 (7 samples, 0.03%)</title><rect x="4.4504%" y="1861" width="0.0335%" height="15" fill="rgb(238,174,52)" fg:x="930" fg:w="7"/><text x="4.7004%" y="1871.50"></text></g><g><title>`0x7FF7E00E71CC (7 samples, 0.03%)</title><rect x="4.4504%" y="1845" width="0.0335%" height="15" fill="rgb(230,73,7)" fg:x="930" fg:w="7"/><text x="4.7004%" y="1855.50"></text></g><g><title>`0x7FF7E00F2D99 (7 samples, 0.03%)</title><rect x="4.4504%" y="1829" width="0.0335%" height="15" fill="rgb(243,124,40)" fg:x="930" fg:w="7"/><text x="4.7004%" y="1839.50"></text></g><g><title>`0x7FF7E014F447 (4 samples, 0.02%)</title><rect x="4.4648%" y="1813" width="0.0191%" height="15" fill="rgb(244,170,11)" fg:x="933" fg:w="4"/><text x="4.7148%" y="1823.50"></text></g><g><title>`0x7FF7E00A440E (4 samples, 0.02%)</title><rect x="4.4648%" y="1797" width="0.0191%" height="15" fill="rgb(207,114,54)" fg:x="933" fg:w="4"/><text x="4.7148%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.4648%" y="1781" width="0.0191%" height="15" fill="rgb(205,42,20)" fg:x="933" fg:w="4"/><text x="4.7148%" y="1791.50"></text></g><g><title>`0x7FF7E00B1E0D (3 samples, 0.01%)</title><rect x="4.4983%" y="1845" width="0.0144%" height="15" fill="rgb(230,30,28)" fg:x="940" fg:w="3"/><text x="4.7483%" y="1855.50"></text></g><g><title>`0x7FF7E00B221A (3 samples, 0.01%)</title><rect x="4.4983%" y="1829" width="0.0144%" height="15" fill="rgb(205,73,54)" fg:x="940" fg:w="3"/><text x="4.7483%" y="1839.50"></text></g><g><title>`0x7FF7E0095C3E (4 samples, 0.02%)</title><rect x="4.4983%" y="1861" width="0.0191%" height="15" fill="rgb(254,227,23)" fg:x="940" fg:w="4"/><text x="4.7483%" y="1871.50"></text></g><g><title>`0x7FF7E00E578D (5 samples, 0.02%)</title><rect x="4.5174%" y="1845" width="0.0239%" height="15" fill="rgb(228,202,34)" fg:x="944" fg:w="5"/><text x="4.7674%" y="1855.50"></text></g><g><title>`0x7FF7E00E2109 (4 samples, 0.02%)</title><rect x="4.5222%" y="1829" width="0.0191%" height="15" fill="rgb(222,225,37)" fg:x="945" fg:w="4"/><text x="4.7722%" y="1839.50"></text></g><g><title>`0x7FF7E00B0619 (4 samples, 0.02%)</title><rect x="4.5222%" y="1813" width="0.0191%" height="15" fill="rgb(221,14,54)" fg:x="945" fg:w="4"/><text x="4.7722%" y="1823.50"></text></g><g><title>`0x7FF7E0131D88 (3 samples, 0.01%)</title><rect x="4.5270%" y="1797" width="0.0144%" height="15" fill="rgb(254,102,2)" fg:x="946" fg:w="3"/><text x="4.7770%" y="1807.50"></text></g><g><title>`0x7FF7E00E221F (3 samples, 0.01%)</title><rect x="4.5270%" y="1781" width="0.0144%" height="15" fill="rgb(232,104,17)" fg:x="946" fg:w="3"/><text x="4.7770%" y="1791.50"></text></g><g><title>`0x7FF7E00E22FF (3 samples, 0.01%)</title><rect x="4.5270%" y="1765" width="0.0144%" height="15" fill="rgb(250,220,14)" fg:x="946" fg:w="3"/><text x="4.7770%" y="1775.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.5461%" y="1637" width="0.0144%" height="15" fill="rgb(241,158,9)" fg:x="950" fg:w="3"/><text x="4.7961%" y="1647.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="4.5461%" y="1669" width="0.0191%" height="15" fill="rgb(246,9,43)" fg:x="950" fg:w="4"/><text x="4.7961%" y="1679.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.5461%" y="1653" width="0.0191%" height="15" fill="rgb(206,73,33)" fg:x="950" fg:w="4"/><text x="4.7961%" y="1663.50"></text></g><g><title>`0x7FF7E00F2D99 (5 samples, 0.02%)</title><rect x="4.5461%" y="1685" width="0.0239%" height="15" fill="rgb(222,79,8)" fg:x="950" fg:w="5"/><text x="4.7961%" y="1695.50"></text></g><g><title>`0x7FF7E00A415C (7 samples, 0.03%)</title><rect x="4.5413%" y="1749" width="0.0335%" height="15" fill="rgb(234,8,54)" fg:x="949" fg:w="7"/><text x="4.7913%" y="1759.50"></text></g><g><title>`0x7FF7E00E5876 (7 samples, 0.03%)</title><rect x="4.5413%" y="1733" width="0.0335%" height="15" fill="rgb(209,134,38)" fg:x="949" fg:w="7"/><text x="4.7913%" y="1743.50"></text></g><g><title>`0x7FF7E00E4BA2 (7 samples, 0.03%)</title><rect x="4.5413%" y="1717" width="0.0335%" height="15" fill="rgb(230,127,29)" fg:x="949" fg:w="7"/><text x="4.7913%" y="1727.50"></text></g><g><title>`0x7FF7E00E71CC (7 samples, 0.03%)</title><rect x="4.5413%" y="1701" width="0.0335%" height="15" fill="rgb(242,44,41)" fg:x="949" fg:w="7"/><text x="4.7913%" y="1711.50"></text></g><g><title>`0x7FF7E00A42DE (3 samples, 0.01%)</title><rect x="4.5748%" y="1749" width="0.0144%" height="15" fill="rgb(222,56,43)" fg:x="956" fg:w="3"/><text x="4.8248%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::Process (4 samples, 0.02%)</title><rect x="4.6083%" y="869" width="0.0191%" height="15" fill="rgb(238,39,47)" fg:x="963" fg:w="4"/><text x="4.8583%" y="879.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (5 samples, 0.02%)</title><rect x="4.6083%" y="933" width="0.0239%" height="15" fill="rgb(226,79,43)" fg:x="963" fg:w="5"/><text x="4.8583%" y="943.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (5 samples, 0.02%)</title><rect x="4.6083%" y="917" width="0.0239%" height="15" fill="rgb(242,105,53)" fg:x="963" fg:w="5"/><text x="4.8583%" y="927.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (5 samples, 0.02%)</title><rect x="4.6083%" y="901" width="0.0239%" height="15" fill="rgb(251,132,46)" fg:x="963" fg:w="5"/><text x="4.8583%" y="911.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (5 samples, 0.02%)</title><rect x="4.6083%" y="885" width="0.0239%" height="15" fill="rgb(231,77,14)" fg:x="963" fg:w="5"/><text x="4.8583%" y="895.50"></text></g><g><title>`0x7FF7E00A67E2 (8 samples, 0.04%)</title><rect x="4.5987%" y="1125" width="0.0383%" height="15" fill="rgb(240,135,9)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1135.50"></text></g><g><title>`0x7FF7E00FB5F2 (8 samples, 0.04%)</title><rect x="4.5987%" y="1109" width="0.0383%" height="15" fill="rgb(248,109,14)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1119.50"></text></g><g><title>`0x7FF7E0111C07 (8 samples, 0.04%)</title><rect x="4.5987%" y="1093" width="0.0383%" height="15" fill="rgb(227,146,52)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1103.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (8 samples, 0.04%)</title><rect x="4.5987%" y="1077" width="0.0383%" height="15" fill="rgb(232,54,3)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1087.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (8 samples, 0.04%)</title><rect x="4.5987%" y="1061" width="0.0383%" height="15" fill="rgb(229,201,43)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1071.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (8 samples, 0.04%)</title><rect x="4.5987%" y="1045" width="0.0383%" height="15" fill="rgb(252,161,33)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1055.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (8 samples, 0.04%)</title><rect x="4.5987%" y="1029" width="0.0383%" height="15" fill="rgb(226,146,40)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1039.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (8 samples, 0.04%)</title><rect x="4.5987%" y="1013" width="0.0383%" height="15" fill="rgb(219,47,25)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1023.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (8 samples, 0.04%)</title><rect x="4.5987%" y="997" width="0.0383%" height="15" fill="rgb(250,135,13)" fg:x="961" fg:w="8"/><text x="4.8487%" y="1007.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (7 samples, 0.03%)</title><rect x="4.6035%" y="981" width="0.0335%" height="15" fill="rgb(219,229,18)" fg:x="962" fg:w="7"/><text x="4.8535%" y="991.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (7 samples, 0.03%)</title><rect x="4.6035%" y="965" width="0.0335%" height="15" fill="rgb(217,152,27)" fg:x="962" fg:w="7"/><text x="4.8535%" y="975.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (7 samples, 0.03%)</title><rect x="4.6035%" y="949" width="0.0335%" height="15" fill="rgb(225,71,47)" fg:x="962" fg:w="7"/><text x="4.8535%" y="959.50"></text></g><g><title>`0x7FF7E00FE448 (9 samples, 0.04%)</title><rect x="4.5987%" y="1269" width="0.0431%" height="15" fill="rgb(220,139,14)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1279.50"></text></g><g><title>`0x7FF7E0131D88 (9 samples, 0.04%)</title><rect x="4.5987%" y="1253" width="0.0431%" height="15" fill="rgb(247,54,32)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1263.50"></text></g><g><title>`0x7FF7E00B53ED (9 samples, 0.04%)</title><rect x="4.5987%" y="1237" width="0.0431%" height="15" fill="rgb(252,131,39)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1247.50"></text></g><g><title>`0x7FF7E012DEF4 (9 samples, 0.04%)</title><rect x="4.5987%" y="1221" width="0.0431%" height="15" fill="rgb(210,108,39)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1231.50"></text></g><g><title>`0x7FF7E00A8D26 (9 samples, 0.04%)</title><rect x="4.5987%" y="1205" width="0.0431%" height="15" fill="rgb(205,23,29)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1215.50"></text></g><g><title>`0x7FF7E01296D9 (9 samples, 0.04%)</title><rect x="4.5987%" y="1189" width="0.0431%" height="15" fill="rgb(246,139,46)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1199.50"></text></g><g><title>`0x7FF7E010FD9A (9 samples, 0.04%)</title><rect x="4.5987%" y="1173" width="0.0431%" height="15" fill="rgb(250,81,26)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1183.50"></text></g><g><title>`0x7FF7E0127908 (9 samples, 0.04%)</title><rect x="4.5987%" y="1157" width="0.0431%" height="15" fill="rgb(214,104,7)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1167.50"></text></g><g><title>`0x7FF7E00A652B (9 samples, 0.04%)</title><rect x="4.5987%" y="1141" width="0.0431%" height="15" fill="rgb(233,189,8)" fg:x="961" fg:w="9"/><text x="4.8487%" y="1151.50"></text></g><g><title>`0x7FF7E01289C5 (10 samples, 0.05%)</title><rect x="4.5987%" y="1445" width="0.0479%" height="15" fill="rgb(228,141,17)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1455.50"></text></g><g><title>`0x7FF7E00B5593 (10 samples, 0.05%)</title><rect x="4.5987%" y="1429" width="0.0479%" height="15" fill="rgb(247,157,1)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1439.50"></text></g><g><title>`0x7FF7E0131D88 (10 samples, 0.05%)</title><rect x="4.5987%" y="1413" width="0.0479%" height="15" fill="rgb(249,225,5)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1423.50"></text></g><g><title>`0x7FF7E00B54A5 (10 samples, 0.05%)</title><rect x="4.5987%" y="1397" width="0.0479%" height="15" fill="rgb(242,55,13)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1407.50"></text></g><g><title>`0x7FF7E01125A7 (10 samples, 0.05%)</title><rect x="4.5987%" y="1381" width="0.0479%" height="15" fill="rgb(230,49,50)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1391.50"></text></g><g><title>`0x7FF7E00B53ED (10 samples, 0.05%)</title><rect x="4.5987%" y="1365" width="0.0479%" height="15" fill="rgb(241,111,38)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1375.50"></text></g><g><title>`0x7FF7E012DEF4 (10 samples, 0.05%)</title><rect x="4.5987%" y="1349" width="0.0479%" height="15" fill="rgb(252,155,4)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1359.50"></text></g><g><title>`0x7FF7E00A8D26 (10 samples, 0.05%)</title><rect x="4.5987%" y="1333" width="0.0479%" height="15" fill="rgb(212,69,32)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1343.50"></text></g><g><title>`0x7FF7E01296D9 (10 samples, 0.05%)</title><rect x="4.5987%" y="1317" width="0.0479%" height="15" fill="rgb(243,107,47)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1327.50"></text></g><g><title>`0x7FF7E010FD9A (10 samples, 0.05%)</title><rect x="4.5987%" y="1301" width="0.0479%" height="15" fill="rgb(247,130,12)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1311.50"></text></g><g><title>`0x7FF7E0127A24 (10 samples, 0.05%)</title><rect x="4.5987%" y="1285" width="0.0479%" height="15" fill="rgb(233,74,16)" fg:x="961" fg:w="10"/><text x="4.8487%" y="1295.50"></text></g><g><title>`0x7FF7E01289C5 (13 samples, 0.06%)</title><rect x="4.5892%" y="1605" width="0.0622%" height="15" fill="rgb(208,58,18)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1615.50"></text></g><g><title>`0x7FF7E00B5593 (13 samples, 0.06%)</title><rect x="4.5892%" y="1589" width="0.0622%" height="15" fill="rgb(242,225,1)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1599.50"></text></g><g><title>`0x7FF7E0131D88 (13 samples, 0.06%)</title><rect x="4.5892%" y="1573" width="0.0622%" height="15" fill="rgb(249,39,40)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1583.50"></text></g><g><title>`0x7FF7E00B54A5 (13 samples, 0.06%)</title><rect x="4.5892%" y="1557" width="0.0622%" height="15" fill="rgb(207,72,44)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1567.50"></text></g><g><title>`0x7FF7E01125A7 (13 samples, 0.06%)</title><rect x="4.5892%" y="1541" width="0.0622%" height="15" fill="rgb(215,193,12)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1551.50"></text></g><g><title>`0x7FF7E00B53ED (13 samples, 0.06%)</title><rect x="4.5892%" y="1525" width="0.0622%" height="15" fill="rgb(248,41,39)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1535.50"></text></g><g><title>`0x7FF7E012DEF4 (13 samples, 0.06%)</title><rect x="4.5892%" y="1509" width="0.0622%" height="15" fill="rgb(253,85,4)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1519.50"></text></g><g><title>`0x7FF7E00A8D26 (13 samples, 0.06%)</title><rect x="4.5892%" y="1493" width="0.0622%" height="15" fill="rgb(243,70,31)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1503.50"></text></g><g><title>`0x7FF7E01296D9 (13 samples, 0.06%)</title><rect x="4.5892%" y="1477" width="0.0622%" height="15" fill="rgb(253,195,26)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1487.50"></text></g><g><title>`0x7FF7E010FE05 (13 samples, 0.06%)</title><rect x="4.5892%" y="1461" width="0.0622%" height="15" fill="rgb(243,42,11)" fg:x="959" fg:w="13"/><text x="4.8392%" y="1471.50"></text></g><g><title>`0x7FF7E012DEF4 (15 samples, 0.07%)</title><rect x="4.5892%" y="1669" width="0.0718%" height="15" fill="rgb(239,66,17)" fg:x="959" fg:w="15"/><text x="4.8392%" y="1679.50"></text></g><g><title>`0x7FF7E00A8D26 (15 samples, 0.07%)</title><rect x="4.5892%" y="1653" width="0.0718%" height="15" fill="rgb(217,132,21)" fg:x="959" fg:w="15"/><text x="4.8392%" y="1663.50"></text></g><g><title>`0x7FF7E01296D9 (15 samples, 0.07%)</title><rect x="4.5892%" y="1637" width="0.0718%" height="15" fill="rgb(252,202,21)" fg:x="959" fg:w="15"/><text x="4.8392%" y="1647.50"></text></g><g><title>`0x7FF7E010FE05 (15 samples, 0.07%)</title><rect x="4.5892%" y="1621" width="0.0718%" height="15" fill="rgb(233,98,36)" fg:x="959" fg:w="15"/><text x="4.8392%" y="1631.50"></text></g><g><title>`0x7FF7E0092CAB (26 samples, 0.12%)</title><rect x="4.5413%" y="1781" width="0.1244%" height="15" fill="rgb(216,153,54)" fg:x="949" fg:w="26"/><text x="4.7913%" y="1791.50"></text></g><g><title>`0x7FF7E01106E8 (26 samples, 0.12%)</title><rect x="4.5413%" y="1765" width="0.1244%" height="15" fill="rgb(250,99,7)" fg:x="949" fg:w="26"/><text x="4.7913%" y="1775.50"></text></g><g><title>`0x7FF7E00A439E (16 samples, 0.08%)</title><rect x="4.5892%" y="1749" width="0.0766%" height="15" fill="rgb(207,56,50)" fg:x="959" fg:w="16"/><text x="4.8392%" y="1759.50"></text></g><g><title>`0x7FF7E00F3D61 (16 samples, 0.08%)</title><rect x="4.5892%" y="1733" width="0.0766%" height="15" fill="rgb(244,61,34)" fg:x="959" fg:w="16"/><text x="4.8392%" y="1743.50"></text></g><g><title>`0x7FF7E00A7A8C (16 samples, 0.08%)</title><rect x="4.5892%" y="1717" width="0.0766%" height="15" fill="rgb(241,50,38)" fg:x="959" fg:w="16"/><text x="4.8392%" y="1727.50"></text></g><g><title>`0x7FF7E01125A7 (16 samples, 0.08%)</title><rect x="4.5892%" y="1701" width="0.0766%" height="15" fill="rgb(212,166,30)" fg:x="959" fg:w="16"/><text x="4.8392%" y="1711.50"></text></g><g><title>`0x7FF7E00A7CEB (16 samples, 0.08%)</title><rect x="4.5892%" y="1685" width="0.0766%" height="15" fill="rgb(249,127,32)" fg:x="959" fg:w="16"/><text x="4.8392%" y="1695.50"></text></g><g><title>`0x7FF7E00E5876 (30 samples, 0.14%)</title><rect x="4.5413%" y="1845" width="0.1436%" height="15" fill="rgb(209,103,0)" fg:x="949" fg:w="30"/><text x="4.7913%" y="1855.50"></text></g><g><title>`0x7FF7E00E4BA2 (30 samples, 0.14%)</title><rect x="4.5413%" y="1829" width="0.1436%" height="15" fill="rgb(238,209,51)" fg:x="949" fg:w="30"/><text x="4.7913%" y="1839.50"></text></g><g><title>`0x7FF7E00E71CC (30 samples, 0.14%)</title><rect x="4.5413%" y="1813" width="0.1436%" height="15" fill="rgb(237,56,23)" fg:x="949" fg:w="30"/><text x="4.7913%" y="1823.50"></text></g><g><title>`0x7FF7E00F2D99 (30 samples, 0.14%)</title><rect x="4.5413%" y="1797" width="0.1436%" height="15" fill="rgb(215,153,46)" fg:x="949" fg:w="30"/><text x="4.7913%" y="1807.50"></text></g><g><title>`0x7FF7E014F447 (4 samples, 0.02%)</title><rect x="4.6657%" y="1781" width="0.0191%" height="15" fill="rgb(224,49,31)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1791.50"></text></g><g><title>`0x7FF7E00A4598 (4 samples, 0.02%)</title><rect x="4.6657%" y="1765" width="0.0191%" height="15" fill="rgb(250,18,42)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1775.50"></text></g><g><title>`0x7FF7E00B6A3C (4 samples, 0.02%)</title><rect x="4.6657%" y="1749" width="0.0191%" height="15" fill="rgb(215,176,39)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1759.50"></text></g><g><title>`0x7FF7E014DE70 (4 samples, 0.02%)</title><rect x="4.6657%" y="1733" width="0.0191%" height="15" fill="rgb(223,77,29)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1743.50"></text></g><g><title>`0x7FF7E014EF7C (4 samples, 0.02%)</title><rect x="4.6657%" y="1717" width="0.0191%" height="15" fill="rgb(234,94,52)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1727.50"></text></g><g><title>`0x7FF7E012DEF4 (4 samples, 0.02%)</title><rect x="4.6657%" y="1701" width="0.0191%" height="15" fill="rgb(220,154,50)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1711.50"></text></g><g><title>`0x7FF7E014BCBB (4 samples, 0.02%)</title><rect x="4.6657%" y="1685" width="0.0191%" height="15" fill="rgb(212,11,10)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1695.50"></text></g><g><title>`0x7FF7E00A9685 (4 samples, 0.02%)</title><rect x="4.6657%" y="1669" width="0.0191%" height="15" fill="rgb(205,166,19)" fg:x="975" fg:w="4"/><text x="4.9157%" y="1679.50"></text></g><g><title>`0x7FF7E010FE05 (3 samples, 0.01%)</title><rect x="4.6705%" y="1653" width="0.0144%" height="15" fill="rgb(244,198,16)" fg:x="976" fg:w="3"/><text x="4.9205%" y="1663.50"></text></g><g><title>`0x7FF7E00DCD87 (3 samples, 0.01%)</title><rect x="4.6945%" y="1685" width="0.0144%" height="15" fill="rgb(219,69,12)" fg:x="981" fg:w="3"/><text x="4.9445%" y="1695.50"></text></g><g><title>`0x7FF7E00E59E0 (6 samples, 0.03%)</title><rect x="4.6897%" y="1845" width="0.0287%" height="15" fill="rgb(245,30,7)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1855.50"></text></g><g><title>`0x7FF7E011233E (6 samples, 0.03%)</title><rect x="4.6897%" y="1829" width="0.0287%" height="15" fill="rgb(218,221,48)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1839.50"></text></g><g><title>`0x7FF7E00B773E (6 samples, 0.03%)</title><rect x="4.6897%" y="1813" width="0.0287%" height="15" fill="rgb(216,66,15)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1823.50"></text></g><g><title>`0x7FF7E00B7EE9 (6 samples, 0.03%)</title><rect x="4.6897%" y="1797" width="0.0287%" height="15" fill="rgb(226,122,50)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1807.50"></text></g><g><title>`0x7FF7E00C9506 (6 samples, 0.03%)</title><rect x="4.6897%" y="1781" width="0.0287%" height="15" fill="rgb(239,156,16)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1791.50"></text></g><g><title>`0x7FF7E00C96CA (6 samples, 0.03%)</title><rect x="4.6897%" y="1765" width="0.0287%" height="15" fill="rgb(224,27,38)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1775.50"></text></g><g><title>`0x7FF7E00C99DA (6 samples, 0.03%)</title><rect x="4.6897%" y="1749" width="0.0287%" height="15" fill="rgb(224,39,27)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1759.50"></text></g><g><title>`0x7FF7E00C9AE4 (6 samples, 0.03%)</title><rect x="4.6897%" y="1733" width="0.0287%" height="15" fill="rgb(215,92,29)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1743.50"></text></g><g><title>`0x7FF7E00D7D8A (6 samples, 0.03%)</title><rect x="4.6897%" y="1717" width="0.0287%" height="15" fill="rgb(207,159,16)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1727.50"></text></g><g><title>`0x7FF7E00C9DC9 (6 samples, 0.03%)</title><rect x="4.6897%" y="1701" width="0.0287%" height="15" fill="rgb(238,163,47)" fg:x="980" fg:w="6"/><text x="4.9397%" y="1711.50"></text></g><g><title>`0x7FF7E0095C97 (43 samples, 0.21%)</title><rect x="4.5174%" y="1861" width="0.2058%" height="15" fill="rgb(219,91,49)" fg:x="944" fg:w="43"/><text x="4.7674%" y="1871.50"></text></g><g><title>`0x7FF7E00A455B (51 samples, 0.24%)</title><rect x="4.4839%" y="1893" width="0.2441%" height="15" fill="rgb(227,167,31)" fg:x="937" fg:w="51"/><text x="4.7339%" y="1903.50"></text></g><g><title>`0x7FF7E0094AC3 (48 samples, 0.23%)</title><rect x="4.4983%" y="1877" width="0.2297%" height="15" fill="rgb(234,80,54)" fg:x="940" fg:w="48"/><text x="4.7483%" y="1887.50"></text></g><g><title>`0x7FF7E00A8D26 (4 samples, 0.02%)</title><rect x="4.7567%" y="1557" width="0.0191%" height="15" fill="rgb(212,114,2)" fg:x="994" fg:w="4"/><text x="5.0067%" y="1567.50"></text></g><g><title>`0x7FF7E01296D9 (4 samples, 0.02%)</title><rect x="4.7567%" y="1541" width="0.0191%" height="15" fill="rgb(234,50,24)" fg:x="994" fg:w="4"/><text x="5.0067%" y="1551.50"></text></g><g><title>`0x7FF7E010FE05 (3 samples, 0.01%)</title><rect x="4.7614%" y="1525" width="0.0144%" height="15" fill="rgb(221,68,8)" fg:x="995" fg:w="3"/><text x="5.0114%" y="1535.50"></text></g><g><title>`0x7FF7E01289C5 (3 samples, 0.01%)</title><rect x="4.7614%" y="1509" width="0.0144%" height="15" fill="rgb(254,180,31)" fg:x="995" fg:w="3"/><text x="5.0114%" y="1519.50"></text></g><g><title>`0x7FF7E00B5593 (3 samples, 0.01%)</title><rect x="4.7614%" y="1493" width="0.0144%" height="15" fill="rgb(247,130,50)" fg:x="995" fg:w="3"/><text x="5.0114%" y="1503.50"></text></g><g><title>`0x7FF7E00968E5 (4 samples, 0.02%)</title><rect x="4.7758%" y="1477" width="0.0191%" height="15" fill="rgb(211,109,4)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1487.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.7758%" y="1461" width="0.0191%" height="15" fill="rgb(238,50,21)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1471.50"></text></g><g><title>`0x7FF7E014B595 (4 samples, 0.02%)</title><rect x="4.7758%" y="1445" width="0.0191%" height="15" fill="rgb(225,57,45)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.7758%" y="1429" width="0.0191%" height="15" fill="rgb(209,196,50)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1439.50"></text></g><g><title>`0x7FF7E012DEF4 (4 samples, 0.02%)</title><rect x="4.7758%" y="1413" width="0.0191%" height="15" fill="rgb(242,140,13)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1423.50"></text></g><g><title>`0x7FF7E014BCBB (4 samples, 0.02%)</title><rect x="4.7758%" y="1397" width="0.0191%" height="15" fill="rgb(217,111,7)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1407.50"></text></g><g><title>`0x7FF7E01296D9 (4 samples, 0.02%)</title><rect x="4.7758%" y="1381" width="0.0191%" height="15" fill="rgb(253,193,51)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1391.50"></text></g><g><title>`0x7FF7E010FE05 (4 samples, 0.02%)</title><rect x="4.7758%" y="1365" width="0.0191%" height="15" fill="rgb(252,70,29)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1375.50"></text></g><g><title>`0x7FF7E01289C5 (4 samples, 0.02%)</title><rect x="4.7758%" y="1349" width="0.0191%" height="15" fill="rgb(232,127,12)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1359.50"></text></g><g><title>`0x7FF7E00B5593 (4 samples, 0.02%)</title><rect x="4.7758%" y="1333" width="0.0191%" height="15" fill="rgb(211,180,21)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1343.50"></text></g><g><title>`0x7FF7E00968E5 (4 samples, 0.02%)</title><rect x="4.7758%" y="1317" width="0.0191%" height="15" fill="rgb(229,72,13)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1327.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.7758%" y="1301" width="0.0191%" height="15" fill="rgb(240,211,49)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1311.50"></text></g><g><title>`0x7FF7E014C9B0 (4 samples, 0.02%)</title><rect x="4.7758%" y="1285" width="0.0191%" height="15" fill="rgb(219,149,40)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1295.50"></text></g><g><title>`0x7FF7E012DD9C (4 samples, 0.02%)</title><rect x="4.7758%" y="1269" width="0.0191%" height="15" fill="rgb(210,127,46)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1279.50"></text></g><g><title>`0x7FF7E00EAC71 (4 samples, 0.02%)</title><rect x="4.7758%" y="1253" width="0.0191%" height="15" fill="rgb(220,106,7)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1263.50"></text></g><g><title>`0x7FF7E0093C9E (4 samples, 0.02%)</title><rect x="4.7758%" y="1237" width="0.0191%" height="15" fill="rgb(249,31,22)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1247.50"></text></g><g><title>`0x7FF7E00EADEA (4 samples, 0.02%)</title><rect x="4.7758%" y="1221" width="0.0191%" height="15" fill="rgb(253,1,49)" fg:x="998" fg:w="4"/><text x="5.0258%" y="1231.50"></text></g><g><title>`0x7FF7E012DD9C (3 samples, 0.01%)</title><rect x="4.7997%" y="1125" width="0.0144%" height="15" fill="rgb(227,144,33)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1135.50"></text></g><g><title>`0x7FF7E00EAC71 (3 samples, 0.01%)</title><rect x="4.7997%" y="1109" width="0.0144%" height="15" fill="rgb(249,163,44)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1119.50"></text></g><g><title>`0x7FF7E00EB379 (3 samples, 0.01%)</title><rect x="4.7997%" y="1093" width="0.0144%" height="15" fill="rgb(234,15,39)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1103.50"></text></g><g><title>`0x7FF7E00EADEA (3 samples, 0.01%)</title><rect x="4.7997%" y="1077" width="0.0144%" height="15" fill="rgb(207,66,16)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1087.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.7997%" y="1061" width="0.0144%" height="15" fill="rgb(233,112,24)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1071.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.7997%" y="1045" width="0.0144%" height="15" fill="rgb(230,90,22)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1055.50"></text></g><g><title>`0x7FF7E010E322 (3 samples, 0.01%)</title><rect x="4.7997%" y="1029" width="0.0144%" height="15" fill="rgb(229,61,13)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1039.50"></text></g><g><title>`0x7FF7E00B0619 (3 samples, 0.01%)</title><rect x="4.7997%" y="1013" width="0.0144%" height="15" fill="rgb(225,57,24)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1023.50"></text></g><g><title>`0x7FF7E01324DF (3 samples, 0.01%)</title><rect x="4.7997%" y="997" width="0.0144%" height="15" fill="rgb(208,169,48)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="1007.50"></text></g><g><title>`0x7FF7E00E2291 (3 samples, 0.01%)</title><rect x="4.7997%" y="981" width="0.0144%" height="15" fill="rgb(244,218,51)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="991.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.7997%" y="965" width="0.0144%" height="15" fill="rgb(214,148,10)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="975.50"></text></g><g><title>`0x7FF7E00E28C1 (3 samples, 0.01%)</title><rect x="4.7997%" y="949" width="0.0144%" height="15" fill="rgb(225,174,27)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="959.50"></text></g><g><title>`0x7FF7E00E2BF1 (3 samples, 0.01%)</title><rect x="4.7997%" y="933" width="0.0144%" height="15" fill="rgb(230,96,26)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="943.50"></text></g><g><title>`0x7FF7E00B294C (3 samples, 0.01%)</title><rect x="4.7997%" y="917" width="0.0144%" height="15" fill="rgb(232,10,30)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="927.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.7997%" y="901" width="0.0144%" height="15" fill="rgb(222,8,50)" fg:x="1003" fg:w="3"/><text x="5.0497%" y="911.50"></text></g><g><title>`0x7FF7E0152539 (13 samples, 0.06%)</title><rect x="4.7567%" y="1749" width="0.0622%" height="15" fill="rgb(213,81,27)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1759.50"></text></g><g><title>`0x7FF7E00FA663 (13 samples, 0.06%)</title><rect x="4.7567%" y="1733" width="0.0622%" height="15" fill="rgb(245,50,10)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1743.50"></text></g><g><title>`0x7FF7E01522D7 (13 samples, 0.06%)</title><rect x="4.7567%" y="1717" width="0.0622%" height="15" fill="rgb(216,100,18)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1727.50"></text></g><g><title>`0x7FF7E00F2D99 (13 samples, 0.06%)</title><rect x="4.7567%" y="1701" width="0.0622%" height="15" fill="rgb(236,147,54)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1711.50"></text></g><g><title>`0x7FF7E0092CAB (13 samples, 0.06%)</title><rect x="4.7567%" y="1685" width="0.0622%" height="15" fill="rgb(205,143,26)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1695.50"></text></g><g><title>`0x7FF7E01106E8 (13 samples, 0.06%)</title><rect x="4.7567%" y="1669" width="0.0622%" height="15" fill="rgb(236,26,9)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1679.50"></text></g><g><title>`0x7FF7E01526B3 (13 samples, 0.06%)</title><rect x="4.7567%" y="1653" width="0.0622%" height="15" fill="rgb(221,165,53)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1663.50"></text></g><g><title>`0x7FF7E00F3D61 (13 samples, 0.06%)</title><rect x="4.7567%" y="1637" width="0.0622%" height="15" fill="rgb(214,110,17)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1647.50"></text></g><g><title>`0x7FF7E00A7A8C (13 samples, 0.06%)</title><rect x="4.7567%" y="1621" width="0.0622%" height="15" fill="rgb(237,197,12)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1631.50"></text></g><g><title>`0x7FF7E01125A7 (13 samples, 0.06%)</title><rect x="4.7567%" y="1605" width="0.0622%" height="15" fill="rgb(205,84,17)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1615.50"></text></g><g><title>`0x7FF7E00A7CEB (13 samples, 0.06%)</title><rect x="4.7567%" y="1589" width="0.0622%" height="15" fill="rgb(237,18,45)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1599.50"></text></g><g><title>`0x7FF7E012DEF4 (13 samples, 0.06%)</title><rect x="4.7567%" y="1573" width="0.0622%" height="15" fill="rgb(221,87,14)" fg:x="994" fg:w="13"/><text x="5.0067%" y="1583.50"></text></g><g><title>`0x7FF7E014BCBB (9 samples, 0.04%)</title><rect x="4.7758%" y="1557" width="0.0431%" height="15" fill="rgb(238,186,15)" fg:x="998" fg:w="9"/><text x="5.0258%" y="1567.50"></text></g><g><title>`0x7FF7E01296D9 (9 samples, 0.04%)</title><rect x="4.7758%" y="1541" width="0.0431%" height="15" fill="rgb(208,115,11)" fg:x="998" fg:w="9"/><text x="5.0258%" y="1551.50"></text></g><g><title>`0x7FF7E010FD9A (9 samples, 0.04%)</title><rect x="4.7758%" y="1525" width="0.0431%" height="15" fill="rgb(254,175,0)" fg:x="998" fg:w="9"/><text x="5.0258%" y="1535.50"></text></g><g><title>`0x7FF7E0127A24 (9 samples, 0.04%)</title><rect x="4.7758%" y="1509" width="0.0431%" height="15" fill="rgb(227,24,42)" fg:x="998" fg:w="9"/><text x="5.0258%" y="1519.50"></text></g><g><title>`0x7FF7E00FE448 (9 samples, 0.04%)</title><rect x="4.7758%" y="1493" width="0.0431%" height="15" fill="rgb(223,211,37)" fg:x="998" fg:w="9"/><text x="5.0258%" y="1503.50"></text></g><g><title>`0x7FF7E01324DF (4 samples, 0.02%)</title><rect x="4.7997%" y="1477" width="0.0191%" height="15" fill="rgb(235,49,27)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1487.50"></text></g><g><title>`0x7FF7E014B595 (4 samples, 0.02%)</title><rect x="4.7997%" y="1461" width="0.0191%" height="15" fill="rgb(254,97,51)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.7997%" y="1445" width="0.0191%" height="15" fill="rgb(249,51,40)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1455.50"></text></g><g><title>`0x7FF7E012DEF4 (4 samples, 0.02%)</title><rect x="4.7997%" y="1429" width="0.0191%" height="15" fill="rgb(210,128,45)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1439.50"></text></g><g><title>`0x7FF7E014BCBB (4 samples, 0.02%)</title><rect x="4.7997%" y="1413" width="0.0191%" height="15" fill="rgb(224,137,50)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1423.50"></text></g><g><title>`0x7FF7E01296D9 (4 samples, 0.02%)</title><rect x="4.7997%" y="1397" width="0.0191%" height="15" fill="rgb(242,15,9)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1407.50"></text></g><g><title>`0x7FF7E010FE05 (4 samples, 0.02%)</title><rect x="4.7997%" y="1381" width="0.0191%" height="15" fill="rgb(233,187,41)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1391.50"></text></g><g><title>`0x7FF7E01289C5 (4 samples, 0.02%)</title><rect x="4.7997%" y="1365" width="0.0191%" height="15" fill="rgb(227,2,29)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1375.50"></text></g><g><title>`0x7FF7E00B5593 (4 samples, 0.02%)</title><rect x="4.7997%" y="1349" width="0.0191%" height="15" fill="rgb(222,70,3)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1359.50"></text></g><g><title>`0x7FF7E01324DF (4 samples, 0.02%)</title><rect x="4.7997%" y="1333" width="0.0191%" height="15" fill="rgb(213,11,42)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1343.50"></text></g><g><title>`0x7FF7E014C9B0 (4 samples, 0.02%)</title><rect x="4.7997%" y="1317" width="0.0191%" height="15" fill="rgb(225,150,9)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1327.50"></text></g><g><title>`0x7FF7E012DD9C (4 samples, 0.02%)</title><rect x="4.7997%" y="1301" width="0.0191%" height="15" fill="rgb(230,162,45)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1311.50"></text></g><g><title>`0x7FF7E00EAC71 (4 samples, 0.02%)</title><rect x="4.7997%" y="1285" width="0.0191%" height="15" fill="rgb(222,14,52)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1295.50"></text></g><g><title>`0x7FF7E00EB379 (4 samples, 0.02%)</title><rect x="4.7997%" y="1269" width="0.0191%" height="15" fill="rgb(254,198,14)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1279.50"></text></g><g><title>`0x7FF7E00EADEA (4 samples, 0.02%)</title><rect x="4.7997%" y="1253" width="0.0191%" height="15" fill="rgb(220,217,30)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1263.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.7997%" y="1237" width="0.0191%" height="15" fill="rgb(215,146,41)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1247.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.7997%" y="1221" width="0.0191%" height="15" fill="rgb(217,27,36)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1231.50"></text></g><g><title>`0x7FF7E010E921 (4 samples, 0.02%)</title><rect x="4.7997%" y="1205" width="0.0191%" height="15" fill="rgb(219,218,39)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1215.50"></text></g><g><title>`0x7FF7E012D1A6 (4 samples, 0.02%)</title><rect x="4.7997%" y="1189" width="0.0191%" height="15" fill="rgb(219,4,42)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1199.50"></text></g><g><title>`0x7FF7E00E5A8C (4 samples, 0.02%)</title><rect x="4.7997%" y="1173" width="0.0191%" height="15" fill="rgb(249,119,36)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1183.50"></text></g><g><title>`0x7FF7E01125A7 (4 samples, 0.02%)</title><rect x="4.7997%" y="1157" width="0.0191%" height="15" fill="rgb(209,23,33)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1167.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="4.7997%" y="1141" width="0.0191%" height="15" fill="rgb(211,10,0)" fg:x="1003" fg:w="4"/><text x="5.0497%" y="1151.50"></text></g><g><title>`0x7FF7E01528A9 (4 samples, 0.02%)</title><rect x="4.8237%" y="1749" width="0.0191%" height="15" fill="rgb(208,99,37)" fg:x="1008" fg:w="4"/><text x="5.0737%" y="1759.50"></text></g><g><title>`0x7FF7E0094AC3 (3 samples, 0.01%)</title><rect x="4.8284%" y="1733" width="0.0144%" height="15" fill="rgb(213,132,31)" fg:x="1009" fg:w="3"/><text x="5.0784%" y="1743.50"></text></g><g><title>`0x7FF7E0095C3E (3 samples, 0.01%)</title><rect x="4.8284%" y="1717" width="0.0144%" height="15" fill="rgb(243,129,40)" fg:x="1009" fg:w="3"/><text x="5.0784%" y="1727.50"></text></g><g><title>`0x7FF7E00E5876 (22 samples, 0.11%)</title><rect x="4.7423%" y="1845" width="0.1053%" height="15" fill="rgb(210,66,33)" fg:x="991" fg:w="22"/><text x="4.9923%" y="1855.50"></text></g><g><title>`0x7FF7E00E4BA2 (22 samples, 0.11%)</title><rect x="4.7423%" y="1829" width="0.1053%" height="15" fill="rgb(209,189,4)" fg:x="991" fg:w="22"/><text x="4.9923%" y="1839.50"></text></g><g><title>`0x7FF7E00E71CC (22 samples, 0.11%)</title><rect x="4.7423%" y="1813" width="0.1053%" height="15" fill="rgb(214,107,37)" fg:x="991" fg:w="22"/><text x="4.9923%" y="1823.50"></text></g><g><title>`0x7FF7E00F2D99 (22 samples, 0.11%)</title><rect x="4.7423%" y="1797" width="0.1053%" height="15" fill="rgb(245,88,54)" fg:x="991" fg:w="22"/><text x="4.9923%" y="1807.50"></text></g><g><title>`0x7FF7E0092CAB (21 samples, 0.10%)</title><rect x="4.7471%" y="1781" width="0.1005%" height="15" fill="rgb(205,146,20)" fg:x="992" fg:w="21"/><text x="4.9971%" y="1791.50"></text></g><g><title>`0x7FF7E01106E8 (21 samples, 0.10%)</title><rect x="4.7471%" y="1765" width="0.1005%" height="15" fill="rgb(220,161,25)" fg:x="992" fg:w="21"/><text x="4.9971%" y="1775.50"></text></g><g><title>`0x7FF7E0095C97 (24 samples, 0.11%)</title><rect x="4.7423%" y="1861" width="0.1148%" height="15" fill="rgb(215,152,15)" fg:x="991" fg:w="24"/><text x="4.9923%" y="1871.50"></text></g><g><title>`0x7FF7E01528A9 (27 samples, 0.13%)</title><rect x="4.7375%" y="1893" width="0.1292%" height="15" fill="rgb(233,192,44)" fg:x="990" fg:w="27"/><text x="4.9875%" y="1903.50"></text></g><g><title>`0x7FF7E0094AC3 (27 samples, 0.13%)</title><rect x="4.7375%" y="1877" width="0.1292%" height="15" fill="rgb(240,170,46)" fg:x="990" fg:w="27"/><text x="4.9875%" y="1887.50"></text></g><g><title>`0x7FF7E00A4236 (3 samples, 0.01%)</title><rect x="4.8667%" y="1637" width="0.0144%" height="15" fill="rgb(207,104,33)" fg:x="1017" fg:w="3"/><text x="5.1167%" y="1647.50"></text></g><g><title>`0x7FF7E00A415C (4 samples, 0.02%)</title><rect x="4.8667%" y="1749" width="0.0191%" height="15" fill="rgb(219,21,39)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1759.50"></text></g><g><title>`0x7FF7E00E5876 (4 samples, 0.02%)</title><rect x="4.8667%" y="1733" width="0.0191%" height="15" fill="rgb(214,133,29)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1743.50"></text></g><g><title>`0x7FF7E00E4BA2 (4 samples, 0.02%)</title><rect x="4.8667%" y="1717" width="0.0191%" height="15" fill="rgb(226,93,6)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1727.50"></text></g><g><title>`0x7FF7E00E71CC (4 samples, 0.02%)</title><rect x="4.8667%" y="1701" width="0.0191%" height="15" fill="rgb(252,222,34)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1711.50"></text></g><g><title>`0x7FF7E00F2D99 (4 samples, 0.02%)</title><rect x="4.8667%" y="1685" width="0.0191%" height="15" fill="rgb(252,92,48)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1695.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="4.8667%" y="1669" width="0.0191%" height="15" fill="rgb(245,223,24)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1679.50"></text></g><g><title>`0x7FF7E01106E8 (4 samples, 0.02%)</title><rect x="4.8667%" y="1653" width="0.0191%" height="15" fill="rgb(205,176,3)" fg:x="1017" fg:w="4"/><text x="5.1167%" y="1663.50"></text></g><g><title>`0x7FF7E0152BE5 (11 samples, 0.05%)</title><rect x="4.8667%" y="1893" width="0.0526%" height="15" fill="rgb(235,151,15)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1903.50"></text></g><g><title>`0x7FF7E0094AC3 (11 samples, 0.05%)</title><rect x="4.8667%" y="1877" width="0.0526%" height="15" fill="rgb(237,209,11)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1887.50"></text></g><g><title>`0x7FF7E0095C97 (11 samples, 0.05%)</title><rect x="4.8667%" y="1861" width="0.0526%" height="15" fill="rgb(243,227,24)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1871.50"></text></g><g><title>`0x7FF7E00E5876 (11 samples, 0.05%)</title><rect x="4.8667%" y="1845" width="0.0526%" height="15" fill="rgb(239,193,16)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1855.50"></text></g><g><title>`0x7FF7E00E4BA2 (11 samples, 0.05%)</title><rect x="4.8667%" y="1829" width="0.0526%" height="15" fill="rgb(231,27,9)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1839.50"></text></g><g><title>`0x7FF7E00E71CC (11 samples, 0.05%)</title><rect x="4.8667%" y="1813" width="0.0526%" height="15" fill="rgb(219,169,10)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1823.50"></text></g><g><title>`0x7FF7E00F2D99 (11 samples, 0.05%)</title><rect x="4.8667%" y="1797" width="0.0526%" height="15" fill="rgb(244,229,43)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1807.50"></text></g><g><title>`0x7FF7E0092CAB (11 samples, 0.05%)</title><rect x="4.8667%" y="1781" width="0.0526%" height="15" fill="rgb(254,38,20)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1791.50"></text></g><g><title>`0x7FF7E01106E8 (11 samples, 0.05%)</title><rect x="4.8667%" y="1765" width="0.0526%" height="15" fill="rgb(250,47,30)" fg:x="1017" fg:w="11"/><text x="5.1167%" y="1775.50"></text></g><g><title>`0x7FF7E0152BC1 (3 samples, 0.01%)</title><rect x="4.9050%" y="1749" width="0.0144%" height="15" fill="rgb(224,124,36)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1759.50"></text></g><g><title>`0x7FF7E00E5876 (3 samples, 0.01%)</title><rect x="4.9050%" y="1733" width="0.0144%" height="15" fill="rgb(246,68,51)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1743.50"></text></g><g><title>`0x7FF7E00E4BA2 (3 samples, 0.01%)</title><rect x="4.9050%" y="1717" width="0.0144%" height="15" fill="rgb(253,43,49)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1727.50"></text></g><g><title>`0x7FF7E00E71CC (3 samples, 0.01%)</title><rect x="4.9050%" y="1701" width="0.0144%" height="15" fill="rgb(219,54,36)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1711.50"></text></g><g><title>`0x7FF7E00F2D99 (3 samples, 0.01%)</title><rect x="4.9050%" y="1685" width="0.0144%" height="15" fill="rgb(227,133,34)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1695.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="4.9050%" y="1669" width="0.0144%" height="15" fill="rgb(247,227,15)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1679.50"></text></g><g><title>`0x7FF7E01106E8 (3 samples, 0.01%)</title><rect x="4.9050%" y="1653" width="0.0144%" height="15" fill="rgb(229,96,14)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.9050%" y="1637" width="0.0144%" height="15" fill="rgb(220,79,17)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.9050%" y="1621" width="0.0144%" height="15" fill="rgb(205,131,53)" fg:x="1025" fg:w="3"/><text x="5.1550%" y="1631.50"></text></g><g><title>`0x7FF7E0092CAB (100 samples, 0.48%)</title><rect x="4.4456%" y="1925" width="0.4785%" height="15" fill="rgb(209,50,29)" fg:x="929" fg:w="100"/><text x="4.6956%" y="1935.50"></text></g><g><title>`0x7FF7E01106E8 (100 samples, 0.48%)</title><rect x="4.4456%" y="1909" width="0.4785%" height="15" fill="rgb(245,86,46)" fg:x="929" fg:w="100"/><text x="4.6956%" y="1919.50"></text></g><g><title>`0x7FF7E00910ED (103 samples, 0.49%)</title><rect x="4.4456%" y="1941" width="0.4929%" height="15" fill="rgb(235,66,46)" fg:x="929" fg:w="103"/><text x="4.6956%" y="1951.50"></text></g><g><title>`0x7FF7E008EE16 (108 samples, 0.52%)</title><rect x="4.4265%" y="2005" width="0.5168%" height="15" fill="rgb(232,148,31)" fg:x="925" fg:w="108"/><text x="4.6765%" y="2015.50"></text></g><g><title>`0x7FF7E008A6CC (105 samples, 0.50%)</title><rect x="4.4408%" y="1989" width="0.5025%" height="15" fill="rgb(217,149,8)" fg:x="928" fg:w="105"/><text x="4.6908%" y="1999.50"></text></g><g><title>`0x7FF7E00903B2 (105 samples, 0.50%)</title><rect x="4.4408%" y="1973" width="0.5025%" height="15" fill="rgb(209,183,11)" fg:x="928" fg:w="105"/><text x="4.6908%" y="1983.50"></text></g><g><title>`0x7FF7E008B107 (105 samples, 0.50%)</title><rect x="4.4408%" y="1957" width="0.5025%" height="15" fill="rgb(208,55,20)" fg:x="928" fg:w="105"/><text x="4.6908%" y="1967.50"></text></g><g><title>`0x7FF7E0088BAC (211 samples, 1.01%)</title><rect x="3.9479%" y="2069" width="1.0097%" height="15" fill="rgb(218,39,14)" fg:x="825" fg:w="211"/><text x="4.1979%" y="2079.50"></text></g><g><title>`0x7FF7E008FB74 (113 samples, 0.54%)</title><rect x="4.4169%" y="2053" width="0.5407%" height="15" fill="rgb(216,169,33)" fg:x="923" fg:w="113"/><text x="4.6669%" y="2063.50"></text></g><g><title>`0x7FF7E00D158C (111 samples, 0.53%)</title><rect x="4.4265%" y="2037" width="0.5312%" height="15" fill="rgb(233,80,24)" fg:x="925" fg:w="111"/><text x="4.6765%" y="2047.50"></text></g><g><title>`0x7FF7E0088BAC (111 samples, 0.53%)</title><rect x="4.4265%" y="2021" width="0.5312%" height="15" fill="rgb(213,179,31)" fg:x="925" fg:w="111"/><text x="4.6765%" y="2031.50"></text></g><g><title>`0x7FF7E008FB74 (3 samples, 0.01%)</title><rect x="4.9433%" y="2005" width="0.0144%" height="15" fill="rgb(209,19,5)" fg:x="1033" fg:w="3"/><text x="5.1933%" y="2015.50"></text></g><g><title>`0x7FF7E022ED99 (4 samples, 0.02%)</title><rect x="4.9768%" y="2037" width="0.0191%" height="15" fill="rgb(219,18,35)" fg:x="1040" fg:w="4"/><text x="5.2268%" y="2047.50"></text></g><g><title>`0x7FF7E0239F09 (4 samples, 0.02%)</title><rect x="4.9768%" y="2021" width="0.0191%" height="15" fill="rgb(209,169,16)" fg:x="1040" fg:w="4"/><text x="5.2268%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="4.9816%" y="2005" width="0.0144%" height="15" fill="rgb(245,90,51)" fg:x="1041" fg:w="3"/><text x="5.2316%" y="2015.50"></text></g><g><title>`0x7FF7E00F66DB (4 samples, 0.02%)</title><rect x="5.0151%" y="1861" width="0.0191%" height="15" fill="rgb(220,99,45)" fg:x="1048" fg:w="4"/><text x="5.2651%" y="1871.50"></text></g><g><title>`0x7FF7E022ED99 (4 samples, 0.02%)</title><rect x="5.0151%" y="1845" width="0.0191%" height="15" fill="rgb(249,89,25)" fg:x="1048" fg:w="4"/><text x="5.2651%" y="1855.50"></text></g><g><title>`0x7FF7E0263EC0 (3 samples, 0.01%)</title><rect x="5.0390%" y="1733" width="0.0144%" height="15" fill="rgb(239,193,0)" fg:x="1053" fg:w="3"/><text x="5.2890%" y="1743.50"></text></g><g><title>`0x7FF7E023D454 (3 samples, 0.01%)</title><rect x="5.0390%" y="1717" width="0.0144%" height="15" fill="rgb(231,126,1)" fg:x="1053" fg:w="3"/><text x="5.2890%" y="1727.50"></text></g><g><title>`0x7FF7E02397CF (9 samples, 0.04%)</title><rect x="5.0390%" y="1829" width="0.0431%" height="15" fill="rgb(243,166,3)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1839.50"></text></g><g><title>`0x7FF7E02CAC46 (9 samples, 0.04%)</title><rect x="5.0390%" y="1813" width="0.0431%" height="15" fill="rgb(223,22,34)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1823.50"></text></g><g><title>`0x7FF7E00F66DB (9 samples, 0.04%)</title><rect x="5.0390%" y="1797" width="0.0431%" height="15" fill="rgb(251,52,51)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1807.50"></text></g><g><title>`0x7FF7E022ED99 (9 samples, 0.04%)</title><rect x="5.0390%" y="1781" width="0.0431%" height="15" fill="rgb(221,165,28)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1791.50"></text></g><g><title>`0x7FF7E0239C25 (9 samples, 0.04%)</title><rect x="5.0390%" y="1765" width="0.0431%" height="15" fill="rgb(218,121,47)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1775.50"></text></g><g><title>`0x7FF7E02CB53E (9 samples, 0.04%)</title><rect x="5.0390%" y="1749" width="0.0431%" height="15" fill="rgb(209,120,9)" fg:x="1053" fg:w="9"/><text x="5.2890%" y="1759.50"></text></g><g><title>`0x7FF7E02642E3 (6 samples, 0.03%)</title><rect x="5.0534%" y="1733" width="0.0287%" height="15" fill="rgb(236,68,12)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1743.50"></text></g><g><title>`0x7FF7E031B261 (6 samples, 0.03%)</title><rect x="5.0534%" y="1717" width="0.0287%" height="15" fill="rgb(225,194,26)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1727.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="5.0534%" y="1701" width="0.0287%" height="15" fill="rgb(231,84,39)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1711.50"></text></g><g><title>`0x7FF7E027097A (6 samples, 0.03%)</title><rect x="5.0534%" y="1685" width="0.0287%" height="15" fill="rgb(210,11,45)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.0534%" y="1669" width="0.0287%" height="15" fill="rgb(224,54,52)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1679.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="5.0534%" y="1653" width="0.0287%" height="15" fill="rgb(238,102,14)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1663.50"></text></g><g><title>`0x7FF7E0270672 (6 samples, 0.03%)</title><rect x="5.0534%" y="1637" width="0.0287%" height="15" fill="rgb(243,160,52)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1647.50"></text></g><g><title>`0x7FF7E0318A86 (6 samples, 0.03%)</title><rect x="5.0534%" y="1621" width="0.0287%" height="15" fill="rgb(216,114,19)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1631.50"></text></g><g><title>`0x7FF7E0309C82 (6 samples, 0.03%)</title><rect x="5.0534%" y="1605" width="0.0287%" height="15" fill="rgb(244,166,37)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1615.50"></text></g><g><title>`0x7FF7E0320144 (6 samples, 0.03%)</title><rect x="5.0534%" y="1589" width="0.0287%" height="15" fill="rgb(246,29,44)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1599.50"></text></g><g><title>`0x7FF7E031AB5C (6 samples, 0.03%)</title><rect x="5.0534%" y="1573" width="0.0287%" height="15" fill="rgb(215,56,53)" fg:x="1056" fg:w="6"/><text x="5.3034%" y="1583.50"></text></g><g><title>`0x7FF7E03315E8 (5 samples, 0.02%)</title><rect x="5.0581%" y="1557" width="0.0239%" height="15" fill="rgb(217,60,2)" fg:x="1057" fg:w="5"/><text x="5.3081%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.0677%" y="1541" width="0.0144%" height="15" fill="rgb(207,26,24)" fg:x="1059" fg:w="3"/><text x="5.3177%" y="1551.50"></text></g><g><title>`0x7FF7E028F8EA (4 samples, 0.02%)</title><rect x="5.1491%" y="965" width="0.0191%" height="15" fill="rgb(252,210,15)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="975.50"></text></g><g><title>`0x7FF7E028FE9B (4 samples, 0.02%)</title><rect x="5.1491%" y="949" width="0.0191%" height="15" fill="rgb(253,209,26)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="959.50"></text></g><g><title>`0x7FF7E0285A49 (4 samples, 0.02%)</title><rect x="5.1491%" y="933" width="0.0191%" height="15" fill="rgb(238,170,14)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="943.50"></text></g><g><title>`0x7FF7E0287FBF (4 samples, 0.02%)</title><rect x="5.1491%" y="917" width="0.0191%" height="15" fill="rgb(216,178,15)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="927.50"></text></g><g><title>`0x7FF7E0294F22 (4 samples, 0.02%)</title><rect x="5.1491%" y="901" width="0.0191%" height="15" fill="rgb(250,197,2)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="911.50"></text></g><g><title>`0x7FF7E0295792 (4 samples, 0.02%)</title><rect x="5.1491%" y="885" width="0.0191%" height="15" fill="rgb(212,70,42)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="895.50"></text></g><g><title>`0x7FF7E0297096 (4 samples, 0.02%)</title><rect x="5.1491%" y="869" width="0.0191%" height="15" fill="rgb(227,213,9)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="879.50"></text></g><g><title>`0x7FF7E02906A6 (4 samples, 0.02%)</title><rect x="5.1491%" y="853" width="0.0191%" height="15" fill="rgb(245,99,25)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="863.50"></text></g><g><title>`0x7FF7E02A3041 (4 samples, 0.02%)</title><rect x="5.1491%" y="837" width="0.0191%" height="15" fill="rgb(250,82,29)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="847.50"></text></g><g><title>`0x7FF7E0287FBF (4 samples, 0.02%)</title><rect x="5.1491%" y="821" width="0.0191%" height="15" fill="rgb(241,226,54)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="831.50"></text></g><g><title>`0x7FF7E0294F22 (4 samples, 0.02%)</title><rect x="5.1491%" y="805" width="0.0191%" height="15" fill="rgb(221,99,41)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="815.50"></text></g><g><title>`0x7FF7E0295792 (4 samples, 0.02%)</title><rect x="5.1491%" y="789" width="0.0191%" height="15" fill="rgb(213,90,21)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="799.50"></text></g><g><title>`0x7FF7E029D57F (4 samples, 0.02%)</title><rect x="5.1491%" y="773" width="0.0191%" height="15" fill="rgb(205,208,24)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="783.50"></text></g><g><title>`0x7FF7E02A002D (4 samples, 0.02%)</title><rect x="5.1491%" y="757" width="0.0191%" height="15" fill="rgb(246,31,12)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="767.50"></text></g><g><title>`0x7FF7E02ABC50 (4 samples, 0.02%)</title><rect x="5.1491%" y="741" width="0.0191%" height="15" fill="rgb(213,154,6)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="751.50"></text></g><g><title>`0x7FF7E02A440B (4 samples, 0.02%)</title><rect x="5.1491%" y="725" width="0.0191%" height="15" fill="rgb(222,163,29)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="735.50"></text></g><g><title>`0x7FF7E028FF53 (4 samples, 0.02%)</title><rect x="5.1491%" y="709" width="0.0191%" height="15" fill="rgb(227,201,8)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="719.50"></text></g><g><title>`0x7FF7E023D388 (4 samples, 0.02%)</title><rect x="5.1491%" y="693" width="0.0191%" height="15" fill="rgb(233,9,32)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="703.50"></text></g><g><title>`0x7FF7E031F1CD (4 samples, 0.02%)</title><rect x="5.1491%" y="677" width="0.0191%" height="15" fill="rgb(217,54,24)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="687.50"></text></g><g><title>`0x7FF7E02FC712 (4 samples, 0.02%)</title><rect x="5.1491%" y="661" width="0.0191%" height="15" fill="rgb(235,192,0)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="671.50"></text></g><g><title>`0x7FF7E031E576 (4 samples, 0.02%)</title><rect x="5.1491%" y="645" width="0.0191%" height="15" fill="rgb(235,45,9)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="655.50"></text></g><g><title>`0x7FF7E029244F (4 samples, 0.02%)</title><rect x="5.1491%" y="629" width="0.0191%" height="15" fill="rgb(246,42,40)" fg:x="1076" fg:w="4"/><text x="5.3991%" y="639.50"></text></g><g><title>`0x7FF7E0324E57 (12 samples, 0.06%)</title><rect x="5.1156%" y="1493" width="0.0574%" height="15" fill="rgb(248,111,24)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1503.50"></text></g><g><title>`0x7FF7E0306443 (12 samples, 0.06%)</title><rect x="5.1156%" y="1477" width="0.0574%" height="15" fill="rgb(249,65,22)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1487.50"></text></g><g><title>`0x7FF7E0305CC2 (12 samples, 0.06%)</title><rect x="5.1156%" y="1461" width="0.0574%" height="15" fill="rgb(238,111,51)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="5.1156%" y="1445" width="0.0574%" height="15" fill="rgb(250,118,22)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1455.50"></text></g><g><title>`0x7FF7E02FC712 (12 samples, 0.06%)</title><rect x="5.1156%" y="1429" width="0.0574%" height="15" fill="rgb(234,84,26)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1439.50"></text></g><g><title>`0x7FF7E031E576 (12 samples, 0.06%)</title><rect x="5.1156%" y="1413" width="0.0574%" height="15" fill="rgb(243,172,12)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1423.50"></text></g><g><title>`0x7FF7E029244F (12 samples, 0.06%)</title><rect x="5.1156%" y="1397" width="0.0574%" height="15" fill="rgb(236,150,49)" fg:x="1069" fg:w="12"/><text x="5.3656%" y="1407.50"></text></g><g><title>`0x7FF7E02DDE80 (10 samples, 0.05%)</title><rect x="5.1251%" y="1381" width="0.0479%" height="15" fill="rgb(225,197,26)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1391.50"></text></g><g><title>`0x7FF7E02E7EA3 (10 samples, 0.05%)</title><rect x="5.1251%" y="1365" width="0.0479%" height="15" fill="rgb(214,17,42)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1375.50"></text></g><g><title>`0x7FF7E028F8EA (10 samples, 0.05%)</title><rect x="5.1251%" y="1349" width="0.0479%" height="15" fill="rgb(224,165,40)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1359.50"></text></g><g><title>`0x7FF7E028FE9B (10 samples, 0.05%)</title><rect x="5.1251%" y="1333" width="0.0479%" height="15" fill="rgb(246,100,4)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1343.50"></text></g><g><title>`0x7FF7E0285A49 (10 samples, 0.05%)</title><rect x="5.1251%" y="1317" width="0.0479%" height="15" fill="rgb(222,103,0)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1327.50"></text></g><g><title>`0x7FF7E0287FBF (10 samples, 0.05%)</title><rect x="5.1251%" y="1301" width="0.0479%" height="15" fill="rgb(227,189,26)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1311.50"></text></g><g><title>`0x7FF7E0294F22 (10 samples, 0.05%)</title><rect x="5.1251%" y="1285" width="0.0479%" height="15" fill="rgb(214,202,17)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1295.50"></text></g><g><title>`0x7FF7E0295792 (10 samples, 0.05%)</title><rect x="5.1251%" y="1269" width="0.0479%" height="15" fill="rgb(229,111,3)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1279.50"></text></g><g><title>`0x7FF7E0297096 (10 samples, 0.05%)</title><rect x="5.1251%" y="1253" width="0.0479%" height="15" fill="rgb(229,172,15)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1263.50"></text></g><g><title>`0x7FF7E02906A6 (10 samples, 0.05%)</title><rect x="5.1251%" y="1237" width="0.0479%" height="15" fill="rgb(230,224,35)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1247.50"></text></g><g><title>`0x7FF7E02A3041 (10 samples, 0.05%)</title><rect x="5.1251%" y="1221" width="0.0479%" height="15" fill="rgb(251,141,6)" fg:x="1071" fg:w="10"/><text x="5.3751%" y="1231.50"></text></g><g><title>`0x7FF7E0287FBF (8 samples, 0.04%)</title><rect x="5.1347%" y="1205" width="0.0383%" height="15" fill="rgb(225,208,6)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1215.50"></text></g><g><title>`0x7FF7E0294F22 (8 samples, 0.04%)</title><rect x="5.1347%" y="1189" width="0.0383%" height="15" fill="rgb(246,181,16)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1199.50"></text></g><g><title>`0x7FF7E0295792 (8 samples, 0.04%)</title><rect x="5.1347%" y="1173" width="0.0383%" height="15" fill="rgb(227,129,36)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1183.50"></text></g><g><title>`0x7FF7E029D57F (8 samples, 0.04%)</title><rect x="5.1347%" y="1157" width="0.0383%" height="15" fill="rgb(248,117,24)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1167.50"></text></g><g><title>`0x7FF7E02A002D (8 samples, 0.04%)</title><rect x="5.1347%" y="1141" width="0.0383%" height="15" fill="rgb(214,185,35)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1151.50"></text></g><g><title>`0x7FF7E02ABC50 (8 samples, 0.04%)</title><rect x="5.1347%" y="1125" width="0.0383%" height="15" fill="rgb(236,150,34)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1135.50"></text></g><g><title>`0x7FF7E02A440B (8 samples, 0.04%)</title><rect x="5.1347%" y="1109" width="0.0383%" height="15" fill="rgb(243,228,27)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1119.50"></text></g><g><title>`0x7FF7E028FF53 (8 samples, 0.04%)</title><rect x="5.1347%" y="1093" width="0.0383%" height="15" fill="rgb(245,77,44)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1103.50"></text></g><g><title>`0x7FF7E023D388 (8 samples, 0.04%)</title><rect x="5.1347%" y="1077" width="0.0383%" height="15" fill="rgb(235,214,42)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1087.50"></text></g><g><title>`0x7FF7E031F1CD (8 samples, 0.04%)</title><rect x="5.1347%" y="1061" width="0.0383%" height="15" fill="rgb(221,74,3)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1071.50"></text></g><g><title>`0x7FF7E02FC712 (8 samples, 0.04%)</title><rect x="5.1347%" y="1045" width="0.0383%" height="15" fill="rgb(206,121,29)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1055.50"></text></g><g><title>`0x7FF7E031E576 (8 samples, 0.04%)</title><rect x="5.1347%" y="1029" width="0.0383%" height="15" fill="rgb(249,131,53)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1039.50"></text></g><g><title>`0x7FF7E029244F (8 samples, 0.04%)</title><rect x="5.1347%" y="1013" width="0.0383%" height="15" fill="rgb(236,170,29)" fg:x="1073" fg:w="8"/><text x="5.3847%" y="1023.50"></text></g><g><title>`0x7FF7E02DDE80 (6 samples, 0.03%)</title><rect x="5.1443%" y="997" width="0.0287%" height="15" fill="rgb(247,96,15)" fg:x="1075" fg:w="6"/><text x="5.3943%" y="1007.50"></text></g><g><title>`0x7FF7E02E7EA3 (5 samples, 0.02%)</title><rect x="5.1491%" y="981" width="0.0239%" height="15" fill="rgb(211,210,7)" fg:x="1076" fg:w="5"/><text x="5.3991%" y="991.50"></text></g><g><title>`0x7FF7E0277791 (3 samples, 0.01%)</title><rect x="5.1730%" y="1349" width="0.0144%" height="15" fill="rgb(240,88,50)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1359.50"></text></g><g><title>`0x7FF7E0354F37 (3 samples, 0.01%)</title><rect x="5.1730%" y="1333" width="0.0144%" height="15" fill="rgb(209,229,26)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1343.50"></text></g><g><title>`0x7FF7E0344FFA (3 samples, 0.01%)</title><rect x="5.1730%" y="1317" width="0.0144%" height="15" fill="rgb(210,68,23)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1327.50"></text></g><g><title>`0x7FF7E03455C6 (3 samples, 0.01%)</title><rect x="5.1730%" y="1301" width="0.0144%" height="15" fill="rgb(229,180,13)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1311.50"></text></g><g><title>`0x7FF7E02FC712 (3 samples, 0.01%)</title><rect x="5.1730%" y="1285" width="0.0144%" height="15" fill="rgb(236,53,44)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1295.50"></text></g><g><title>`0x7FF7E031E576 (3 samples, 0.01%)</title><rect x="5.1730%" y="1269" width="0.0144%" height="15" fill="rgb(244,214,29)" fg:x="1081" fg:w="3"/><text x="5.4230%" y="1279.50"></text></g><g><title>`0x7FF7E0324F9A (4 samples, 0.02%)</title><rect x="5.1730%" y="1493" width="0.0191%" height="15" fill="rgb(220,75,29)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1503.50"></text></g><g><title>`0x7FF7E030610E (4 samples, 0.02%)</title><rect x="5.1730%" y="1477" width="0.0191%" height="15" fill="rgb(214,183,37)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1487.50"></text></g><g><title>`0x7FF7E02D3DBA (4 samples, 0.02%)</title><rect x="5.1730%" y="1461" width="0.0191%" height="15" fill="rgb(239,117,29)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.1730%" y="1445" width="0.0191%" height="15" fill="rgb(237,171,35)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1455.50"></text></g><g><title>`0x7FF7E02771FF (4 samples, 0.02%)</title><rect x="5.1730%" y="1429" width="0.0191%" height="15" fill="rgb(229,178,53)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1439.50"></text></g><g><title>`0x7FF7E02774BE (4 samples, 0.02%)</title><rect x="5.1730%" y="1413" width="0.0191%" height="15" fill="rgb(210,102,19)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1423.50"></text></g><g><title>`0x7FF7E02777AD (4 samples, 0.02%)</title><rect x="5.1730%" y="1397" width="0.0191%" height="15" fill="rgb(235,127,22)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1407.50"></text></g><g><title>`0x7FF7E026C1B1 (4 samples, 0.02%)</title><rect x="5.1730%" y="1381" width="0.0191%" height="15" fill="rgb(244,31,31)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1391.50"></text></g><g><title>`0x7FF7E02789FD (4 samples, 0.02%)</title><rect x="5.1730%" y="1365" width="0.0191%" height="15" fill="rgb(231,43,21)" fg:x="1081" fg:w="4"/><text x="5.4230%" y="1375.50"></text></g><g><title>`0x7FF7E0337728 (4 samples, 0.02%)</title><rect x="5.2065%" y="1365" width="0.0191%" height="15" fill="rgb(217,131,35)" fg:x="1088" fg:w="4"/><text x="5.4565%" y="1375.50"></text></g><g><title>`0x7FF7E02704A8 (4 samples, 0.02%)</title><rect x="5.2065%" y="1349" width="0.0191%" height="15" fill="rgb(221,149,4)" fg:x="1088" fg:w="4"/><text x="5.4565%" y="1359.50"></text></g><g><title>`0x7FF7E03347A3 (8 samples, 0.04%)</title><rect x="5.1921%" y="1461" width="0.0383%" height="15" fill="rgb(232,170,28)" fg:x="1085" fg:w="8"/><text x="5.4421%" y="1471.50"></text></g><g><title>`0x7FF7E0337728 (8 samples, 0.04%)</title><rect x="5.1921%" y="1445" width="0.0383%" height="15" fill="rgb(238,56,10)" fg:x="1085" fg:w="8"/><text x="5.4421%" y="1455.50"></text></g><g><title>`0x7FF7E02704E6 (8 samples, 0.04%)</title><rect x="5.1921%" y="1429" width="0.0383%" height="15" fill="rgb(235,196,14)" fg:x="1085" fg:w="8"/><text x="5.4421%" y="1439.50"></text></g><g><title>`0x7FF7E0325BED (5 samples, 0.02%)</title><rect x="5.2065%" y="1413" width="0.0239%" height="15" fill="rgb(216,45,48)" fg:x="1088" fg:w="5"/><text x="5.4565%" y="1423.50"></text></g><g><title>`0x7FF7E0334A78 (5 samples, 0.02%)</title><rect x="5.2065%" y="1397" width="0.0239%" height="15" fill="rgb(238,213,17)" fg:x="1088" fg:w="5"/><text x="5.4565%" y="1407.50"></text></g><g><title>`0x7FF7E03347A3 (5 samples, 0.02%)</title><rect x="5.2065%" y="1381" width="0.0239%" height="15" fill="rgb(212,13,2)" fg:x="1088" fg:w="5"/><text x="5.4565%" y="1391.50"></text></g><g><title>`0x7FF7E030B03F (27 samples, 0.13%)</title><rect x="5.1156%" y="1541" width="0.1292%" height="15" fill="rgb(240,114,20)" fg:x="1069" fg:w="27"/><text x="5.3656%" y="1551.50"></text></g><g><title>`0x7FF7E0337728 (27 samples, 0.13%)</title><rect x="5.1156%" y="1525" width="0.1292%" height="15" fill="rgb(228,41,40)" fg:x="1069" fg:w="27"/><text x="5.3656%" y="1535.50"></text></g><g><title>`0x7FF7E02704E6 (27 samples, 0.13%)</title><rect x="5.1156%" y="1509" width="0.1292%" height="15" fill="rgb(244,132,35)" fg:x="1069" fg:w="27"/><text x="5.3656%" y="1519.50"></text></g><g><title>`0x7FF7E0325BED (11 samples, 0.05%)</title><rect x="5.1921%" y="1493" width="0.0526%" height="15" fill="rgb(253,189,4)" fg:x="1085" fg:w="11"/><text x="5.4421%" y="1503.50"></text></g><g><title>`0x7FF7E0334A78 (11 samples, 0.05%)</title><rect x="5.1921%" y="1477" width="0.0526%" height="15" fill="rgb(224,37,19)" fg:x="1085" fg:w="11"/><text x="5.4421%" y="1487.50"></text></g><g><title>`0x7FF7E030C833 (4 samples, 0.02%)</title><rect x="5.2448%" y="1541" width="0.0191%" height="15" fill="rgb(235,223,18)" fg:x="1096" fg:w="4"/><text x="5.4948%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.2448%" y="1525" width="0.0191%" height="15" fill="rgb(235,163,25)" fg:x="1096" fg:w="4"/><text x="5.4948%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.2448%" y="1509" width="0.0191%" height="15" fill="rgb(217,145,28)" fg:x="1096" fg:w="4"/><text x="5.4948%" y="1519.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.2448%" y="1493" width="0.0191%" height="15" fill="rgb(223,223,32)" fg:x="1096" fg:w="4"/><text x="5.4948%" y="1503.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.2448%" y="1477" width="0.0191%" height="15" fill="rgb(227,189,39)" fg:x="1096" fg:w="4"/><text x="5.4948%" y="1487.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.2496%" y="1461" width="0.0144%" height="15" fill="rgb(248,10,22)" fg:x="1097" fg:w="3"/><text x="5.4996%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.2496%" y="1445" width="0.0144%" height="15" fill="rgb(248,46,39)" fg:x="1097" fg:w="3"/><text x="5.4996%" y="1455.50"></text></g><g><title>`0x7FF7E028F8EA (8 samples, 0.04%)</title><rect x="5.3405%" y="69" width="0.0383%" height="15" fill="rgb(248,113,48)" fg:x="1116" fg:w="8"/><text x="5.5905%" y="79.50"></text></g><g><title>`0x7FF7E028FE9B (8 samples, 0.04%)</title><rect x="5.3405%" y="53" width="0.0383%" height="15" fill="rgb(245,16,25)" fg:x="1116" fg:w="8"/><text x="5.5905%" y="63.50"></text></g><g><title>`0x7FF7E0285A49 (8 samples, 0.04%)</title><rect x="5.3405%" y="37" width="0.0383%" height="15" fill="rgb(249,152,16)" fg:x="1116" fg:w="8"/><text x="5.5905%" y="47.50"></text></g><g><title>`0x7FF7E029C106 (10 samples, 0.05%)</title><rect x="5.3357%" y="181" width="0.0479%" height="15" fill="rgb(250,16,1)" fg:x="1115" fg:w="10"/><text x="5.5857%" y="191.50"></text></g><g><title>`0x7FF7E0287FBF (9 samples, 0.04%)</title><rect x="5.3405%" y="165" width="0.0431%" height="15" fill="rgb(249,138,3)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="175.50"></text></g><g><title>`0x7FF7E0294F22 (9 samples, 0.04%)</title><rect x="5.3405%" y="149" width="0.0431%" height="15" fill="rgb(227,71,41)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="159.50"></text></g><g><title>`0x7FF7E0295792 (9 samples, 0.04%)</title><rect x="5.3405%" y="133" width="0.0431%" height="15" fill="rgb(209,184,23)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="143.50"></text></g><g><title>`0x7FF7E029CBE4 (9 samples, 0.04%)</title><rect x="5.3405%" y="117" width="0.0431%" height="15" fill="rgb(223,215,31)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="127.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="5.3405%" y="101" width="0.0431%" height="15" fill="rgb(210,146,28)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="111.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="5.3405%" y="85" width="0.0431%" height="15" fill="rgb(209,183,41)" fg:x="1116" fg:w="9"/><text x="5.5905%" y="95.50"></text></g><g><title>`0x7FF7E0297360 (13 samples, 0.06%)</title><rect x="5.3309%" y="325" width="0.0622%" height="15" fill="rgb(209,224,45)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="335.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="5.3309%" y="309" width="0.0622%" height="15" fill="rgb(224,209,51)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="319.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="5.3309%" y="293" width="0.0622%" height="15" fill="rgb(223,17,39)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="303.50"></text></g><g><title>`0x7FF7E028F8EA (13 samples, 0.06%)</title><rect x="5.3309%" y="277" width="0.0622%" height="15" fill="rgb(234,204,37)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="287.50"></text></g><g><title>`0x7FF7E028FE9B (13 samples, 0.06%)</title><rect x="5.3309%" y="261" width="0.0622%" height="15" fill="rgb(236,120,5)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="271.50"></text></g><g><title>`0x7FF7E0285A49 (13 samples, 0.06%)</title><rect x="5.3309%" y="245" width="0.0622%" height="15" fill="rgb(248,97,27)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="255.50"></text></g><g><title>`0x7FF7E0287FBF (13 samples, 0.06%)</title><rect x="5.3309%" y="229" width="0.0622%" height="15" fill="rgb(240,66,17)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="239.50"></text></g><g><title>`0x7FF7E0294F22 (13 samples, 0.06%)</title><rect x="5.3309%" y="213" width="0.0622%" height="15" fill="rgb(210,79,3)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="223.50"></text></g><g><title>`0x7FF7E0295792 (13 samples, 0.06%)</title><rect x="5.3309%" y="197" width="0.0622%" height="15" fill="rgb(214,176,27)" fg:x="1114" fg:w="13"/><text x="5.5809%" y="207.50"></text></g><g><title>`0x7FF7E029C244 (9 samples, 0.04%)</title><rect x="5.4075%" y="85" width="0.0431%" height="15" fill="rgb(235,185,3)" fg:x="1130" fg:w="9"/><text x="5.6575%" y="95.50"></text></g><g><title>`0x7FF7E0287FBF (9 samples, 0.04%)</title><rect x="5.4075%" y="69" width="0.0431%" height="15" fill="rgb(227,24,12)" fg:x="1130" fg:w="9"/><text x="5.6575%" y="79.50"></text></g><g><title>`0x7FF7E0294F22 (9 samples, 0.04%)</title><rect x="5.4075%" y="53" width="0.0431%" height="15" fill="rgb(252,169,48)" fg:x="1130" fg:w="9"/><text x="5.6575%" y="63.50"></text></g><g><title>`0x7FF7E0295792 (9 samples, 0.04%)</title><rect x="5.4075%" y="37" width="0.0431%" height="15" fill="rgb(212,65,1)" fg:x="1130" fg:w="9"/><text x="5.6575%" y="47.50"></text></g><g><title>`0x7FF7E029C106 (27 samples, 0.13%)</title><rect x="5.3261%" y="517" width="0.1292%" height="15" fill="rgb(242,39,24)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="527.50"></text></g><g><title>`0x7FF7E0287FBF (27 samples, 0.13%)</title><rect x="5.3261%" y="501" width="0.1292%" height="15" fill="rgb(249,32,23)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="511.50"></text></g><g><title>`0x7FF7E0294F22 (27 samples, 0.13%)</title><rect x="5.3261%" y="485" width="0.1292%" height="15" fill="rgb(251,195,23)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="495.50"></text></g><g><title>`0x7FF7E0295792 (27 samples, 0.13%)</title><rect x="5.3261%" y="469" width="0.1292%" height="15" fill="rgb(236,174,8)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="479.50"></text></g><g><title>`0x7FF7E029D666 (27 samples, 0.13%)</title><rect x="5.3261%" y="453" width="0.1292%" height="15" fill="rgb(220,197,8)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="463.50"></text></g><g><title>`0x7FF7E02A17BA (27 samples, 0.13%)</title><rect x="5.3261%" y="437" width="0.1292%" height="15" fill="rgb(240,108,37)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="447.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (27 samples, 0.13%)</title><rect x="5.3261%" y="421" width="0.1292%" height="15" fill="rgb(232,176,24)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="431.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (27 samples, 0.13%)</title><rect x="5.3261%" y="405" width="0.1292%" height="15" fill="rgb(243,35,29)" fg:x="1113" fg:w="27"/><text x="5.5761%" y="415.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (26 samples, 0.12%)</title><rect x="5.3309%" y="389" width="0.1244%" height="15" fill="rgb(210,37,18)" fg:x="1114" fg:w="26"/><text x="5.5809%" y="399.50"></text></g><g><title>`0x7FF7E0287FBF (26 samples, 0.12%)</title><rect x="5.3309%" y="373" width="0.1244%" height="15" fill="rgb(224,184,40)" fg:x="1114" fg:w="26"/><text x="5.5809%" y="383.50"></text></g><g><title>`0x7FF7E0294F22 (26 samples, 0.12%)</title><rect x="5.3309%" y="357" width="0.1244%" height="15" fill="rgb(236,39,29)" fg:x="1114" fg:w="26"/><text x="5.5809%" y="367.50"></text></g><g><title>`0x7FF7E0295792 (26 samples, 0.12%)</title><rect x="5.3309%" y="341" width="0.1244%" height="15" fill="rgb(232,48,39)" fg:x="1114" fg:w="26"/><text x="5.5809%" y="351.50"></text></g><g><title>`0x7FF7E029771A (13 samples, 0.06%)</title><rect x="5.3931%" y="325" width="0.0622%" height="15" fill="rgb(236,34,42)" fg:x="1127" fg:w="13"/><text x="5.6431%" y="335.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="5.3931%" y="309" width="0.0622%" height="15" fill="rgb(243,106,37)" fg:x="1127" fg:w="13"/><text x="5.6431%" y="319.50"></text></g><g><title>`0x7FF7E034EB24 (13 samples, 0.06%)</title><rect x="5.3931%" y="293" width="0.0622%" height="15" fill="rgb(218,96,6)" fg:x="1127" fg:w="13"/><text x="5.6431%" y="303.50"></text></g><g><title>`0x7FF7E0287FBF (12 samples, 0.06%)</title><rect x="5.3979%" y="277" width="0.0574%" height="15" fill="rgb(235,130,12)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="287.50"></text></g><g><title>`0x7FF7E0294F22 (12 samples, 0.06%)</title><rect x="5.3979%" y="261" width="0.0574%" height="15" fill="rgb(231,95,0)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="271.50"></text></g><g><title>`0x7FF7E0295792 (12 samples, 0.06%)</title><rect x="5.3979%" y="245" width="0.0574%" height="15" fill="rgb(228,12,23)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="255.50"></text></g><g><title>`0x7FF7E0297360 (12 samples, 0.06%)</title><rect x="5.3979%" y="229" width="0.0574%" height="15" fill="rgb(216,12,1)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="239.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="5.3979%" y="213" width="0.0574%" height="15" fill="rgb(219,59,3)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="223.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="5.3979%" y="197" width="0.0574%" height="15" fill="rgb(215,208,46)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="207.50"></text></g><g><title>`0x7FF7E028F8EA (12 samples, 0.06%)</title><rect x="5.3979%" y="181" width="0.0574%" height="15" fill="rgb(254,224,29)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="191.50"></text></g><g><title>`0x7FF7E028FE9B (12 samples, 0.06%)</title><rect x="5.3979%" y="165" width="0.0574%" height="15" fill="rgb(232,14,29)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="175.50"></text></g><g><title>`0x7FF7E0285A49 (12 samples, 0.06%)</title><rect x="5.3979%" y="149" width="0.0574%" height="15" fill="rgb(208,45,52)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="159.50"></text></g><g><title>`0x7FF7E0287FBF (12 samples, 0.06%)</title><rect x="5.3979%" y="133" width="0.0574%" height="15" fill="rgb(234,191,28)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="143.50"></text></g><g><title>`0x7FF7E0294F22 (12 samples, 0.06%)</title><rect x="5.3979%" y="117" width="0.0574%" height="15" fill="rgb(244,67,43)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="127.50"></text></g><g><title>`0x7FF7E0295792 (12 samples, 0.06%)</title><rect x="5.3979%" y="101" width="0.0574%" height="15" fill="rgb(236,189,24)" fg:x="1128" fg:w="12"/><text x="5.6479%" y="111.50"></text></g><g><title>`0x7FF7E02B1BB8 (3 samples, 0.01%)</title><rect x="5.4601%" y="309" width="0.0144%" height="15" fill="rgb(239,214,33)" fg:x="1141" fg:w="3"/><text x="5.7101%" y="319.50"></text></g><g><title>`0x7FF7E015A5EA (3 samples, 0.01%)</title><rect x="5.4601%" y="293" width="0.0144%" height="15" fill="rgb(226,176,41)" fg:x="1141" fg:w="3"/><text x="5.7101%" y="303.50"></text></g><g><title>`0x7FF7E02774BE (3 samples, 0.01%)</title><rect x="5.4601%" y="277" width="0.0144%" height="15" fill="rgb(248,47,8)" fg:x="1141" fg:w="3"/><text x="5.7101%" y="287.50"></text></g><g><title>`0x7FF7E034D60E (9 samples, 0.04%)</title><rect x="5.4601%" y="405" width="0.0431%" height="15" fill="rgb(218,81,44)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="415.50"></text></g><g><title>`0x7FF7E00BC4A6 (9 samples, 0.04%)</title><rect x="5.4601%" y="389" width="0.0431%" height="15" fill="rgb(213,98,6)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="399.50"></text></g><g><title>`0x7FF7E00DAC21 (9 samples, 0.04%)</title><rect x="5.4601%" y="373" width="0.0431%" height="15" fill="rgb(222,85,22)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="383.50"></text></g><g><title>`0x7FF7E00DAF89 (9 samples, 0.04%)</title><rect x="5.4601%" y="357" width="0.0431%" height="15" fill="rgb(239,46,39)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="367.50"></text></g><g><title>`0x7FF7E00DB42D (9 samples, 0.04%)</title><rect x="5.4601%" y="341" width="0.0431%" height="15" fill="rgb(237,12,29)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="351.50"></text></g><g><title>`0x7FF7E00BBB04 (9 samples, 0.04%)</title><rect x="5.4601%" y="325" width="0.0431%" height="15" fill="rgb(214,77,8)" fg:x="1141" fg:w="9"/><text x="5.7101%" y="335.50"></text></g><g><title>`0x7FF7E02B2473 (6 samples, 0.03%)</title><rect x="5.4745%" y="309" width="0.0287%" height="15" fill="rgb(217,168,37)" fg:x="1144" fg:w="6"/><text x="5.7245%" y="319.50"></text></g><g><title>`0x7FF7E028A954 (6 samples, 0.03%)</title><rect x="5.4745%" y="293" width="0.0287%" height="15" fill="rgb(221,217,23)" fg:x="1144" fg:w="6"/><text x="5.7245%" y="303.50"></text></g><g><title>`0x7FF7E0348680 (6 samples, 0.03%)</title><rect x="5.4745%" y="277" width="0.0287%" height="15" fill="rgb(243,229,36)" fg:x="1144" fg:w="6"/><text x="5.7245%" y="287.50"></text></g><g><title>`0x7FF7E02B21D7 (6 samples, 0.03%)</title><rect x="5.4745%" y="261" width="0.0287%" height="15" fill="rgb(251,163,40)" fg:x="1144" fg:w="6"/><text x="5.7245%" y="271.50"></text></g><g><title>`0x7FF7E02A9042 (6 samples, 0.03%)</title><rect x="5.4745%" y="245" width="0.0287%" height="15" fill="rgb(237,222,12)" fg:x="1144" fg:w="6"/><text x="5.7245%" y="255.50"></text></g><g><title>`0x7FF7E02FC2C2 (5 samples, 0.02%)</title><rect x="5.4793%" y="229" width="0.0239%" height="15" fill="rgb(248,132,6)" fg:x="1145" fg:w="5"/><text x="5.7293%" y="239.50"></text></g><g><title>`0x7FF7E029BE9B (3 samples, 0.01%)</title><rect x="5.5128%" y="181" width="0.0144%" height="15" fill="rgb(227,167,50)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="191.50"></text></g><g><title>`0x7FF7E034582A (3 samples, 0.01%)</title><rect x="5.5128%" y="165" width="0.0144%" height="15" fill="rgb(242,84,37)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="175.50"></text></g><g><title>`0x7FF7E028FE9B (3 samples, 0.01%)</title><rect x="5.5128%" y="149" width="0.0144%" height="15" fill="rgb(212,4,50)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="159.50"></text></g><g><title>`0x7FF7E0285A49 (3 samples, 0.01%)</title><rect x="5.5128%" y="133" width="0.0144%" height="15" fill="rgb(230,228,32)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="143.50"></text></g><g><title>`0x7FF7E0286C66 (3 samples, 0.01%)</title><rect x="5.5128%" y="117" width="0.0144%" height="15" fill="rgb(248,217,23)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="127.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.5128%" y="101" width="0.0144%" height="15" fill="rgb(238,197,32)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="111.50"></text></g><g><title>`0x7FF7E0295792 (3 samples, 0.01%)</title><rect x="5.5128%" y="85" width="0.0144%" height="15" fill="rgb(236,106,1)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="95.50"></text></g><g><title>`0x7FF7E029D57F (3 samples, 0.01%)</title><rect x="5.5128%" y="69" width="0.0144%" height="15" fill="rgb(219,228,13)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="79.50"></text></g><g><title>`0x7FF7E029DC4B (3 samples, 0.01%)</title><rect x="5.5128%" y="53" width="0.0144%" height="15" fill="rgb(238,30,35)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="63.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.5128%" y="37" width="0.0144%" height="15" fill="rgb(236,70,23)" fg:x="1152" fg:w="3"/><text x="5.7628%" y="47.50"></text></g><g><title>`0x7FF7E029A80E (3 samples, 0.01%)</title><rect x="5.5367%" y="69" width="0.0144%" height="15" fill="rgb(249,104,48)" fg:x="1157" fg:w="3"/><text x="5.7867%" y="79.50"></text></g><g><title>`0x7FF7E0287FBF (3 samples, 0.01%)</title><rect x="5.5367%" y="53" width="0.0144%" height="15" fill="rgb(254,117,50)" fg:x="1157" fg:w="3"/><text x="5.7867%" y="63.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.5367%" y="37" width="0.0144%" height="15" fill="rgb(223,152,4)" fg:x="1157" fg:w="3"/><text x="5.7867%" y="47.50"></text></g><g><title>`0x7FF7E034F89E (11 samples, 0.05%)</title><rect x="5.5080%" y="293" width="0.0526%" height="15" fill="rgb(245,6,2)" fg:x="1151" fg:w="11"/><text x="5.7580%" y="303.50"></text></g><g><title>`0x7FF7E028F8EA (11 samples, 0.05%)</title><rect x="5.5080%" y="277" width="0.0526%" height="15" fill="rgb(249,150,24)" fg:x="1151" fg:w="11"/><text x="5.7580%" y="287.50"></text></g><g><title>`0x7FF7E028FE9B (11 samples, 0.05%)</title><rect x="5.5080%" y="261" width="0.0526%" height="15" fill="rgb(228,185,42)" fg:x="1151" fg:w="11"/><text x="5.7580%" y="271.50"></text></g><g><title>`0x7FF7E0285A49 (11 samples, 0.05%)</title><rect x="5.5080%" y="245" width="0.0526%" height="15" fill="rgb(226,39,33)" fg:x="1151" fg:w="11"/><text x="5.7580%" y="255.50"></text></g><g><title>`0x7FF7E0287FBF (11 samples, 0.05%)</title><rect x="5.5080%" y="229" width="0.0526%" height="15" fill="rgb(221,166,19)" fg:x="1151" fg:w="11"/><text x="5.7580%" y="239.50"></text></g><g><title>`0x7FF7E0294F22 (10 samples, 0.05%)</title><rect x="5.5128%" y="213" width="0.0479%" height="15" fill="rgb(209,109,2)" fg:x="1152" fg:w="10"/><text x="5.7628%" y="223.50"></text></g><g><title>`0x7FF7E0295792 (10 samples, 0.05%)</title><rect x="5.5128%" y="197" width="0.0479%" height="15" fill="rgb(252,216,26)" fg:x="1152" fg:w="10"/><text x="5.7628%" y="207.50"></text></g><g><title>`0x7FF7E029C50F (7 samples, 0.03%)</title><rect x="5.5271%" y="181" width="0.0335%" height="15" fill="rgb(227,173,36)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="191.50"></text></g><g><title>`0x7FF7E0287F38 (7 samples, 0.03%)</title><rect x="5.5271%" y="165" width="0.0335%" height="15" fill="rgb(209,90,7)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="175.50"></text></g><g><title>`0x7FF7E0290551 (7 samples, 0.03%)</title><rect x="5.5271%" y="149" width="0.0335%" height="15" fill="rgb(250,194,11)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="159.50"></text></g><g><title>`0x7FF7E02B79C4 (7 samples, 0.03%)</title><rect x="5.5271%" y="133" width="0.0335%" height="15" fill="rgb(220,72,50)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="143.50"></text></g><g><title>`0x7FF7E0287FBF (7 samples, 0.03%)</title><rect x="5.5271%" y="117" width="0.0335%" height="15" fill="rgb(222,106,48)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="127.50"></text></g><g><title>`0x7FF7E0294F22 (7 samples, 0.03%)</title><rect x="5.5271%" y="101" width="0.0335%" height="15" fill="rgb(216,220,45)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="111.50"></text></g><g><title>`0x7FF7E0295792 (7 samples, 0.03%)</title><rect x="5.5271%" y="85" width="0.0335%" height="15" fill="rgb(234,112,18)" fg:x="1155" fg:w="7"/><text x="5.7771%" y="95.50"></text></g><g><title>`0x7FF7E029C244 (23 samples, 0.11%)</title><rect x="5.4553%" y="517" width="0.1101%" height="15" fill="rgb(206,179,9)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="527.50"></text></g><g><title>`0x7FF7E0287FBF (23 samples, 0.11%)</title><rect x="5.4553%" y="501" width="0.1101%" height="15" fill="rgb(215,115,40)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="511.50"></text></g><g><title>`0x7FF7E0294F22 (23 samples, 0.11%)</title><rect x="5.4553%" y="485" width="0.1101%" height="15" fill="rgb(222,69,34)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="495.50"></text></g><g><title>`0x7FF7E0295792 (23 samples, 0.11%)</title><rect x="5.4553%" y="469" width="0.1101%" height="15" fill="rgb(209,161,10)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="479.50"></text></g><g><title>`0x7FF7E029D666 (23 samples, 0.11%)</title><rect x="5.4553%" y="453" width="0.1101%" height="15" fill="rgb(217,6,38)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="463.50"></text></g><g><title>`0x7FF7E02A17BA (23 samples, 0.11%)</title><rect x="5.4553%" y="437" width="0.1101%" height="15" fill="rgb(229,229,48)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="447.50"></text></g><g><title>`0x7FF7E0346401 (23 samples, 0.11%)</title><rect x="5.4553%" y="421" width="0.1101%" height="15" fill="rgb(225,21,28)" fg:x="1140" fg:w="23"/><text x="5.7053%" y="431.50"></text></g><g><title>`0x7FF7E034DA84 (12 samples, 0.06%)</title><rect x="5.5080%" y="405" width="0.0574%" height="15" fill="rgb(206,33,13)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="415.50"></text></g><g><title>`0x7FF7E0347E11 (12 samples, 0.06%)</title><rect x="5.5080%" y="389" width="0.0574%" height="15" fill="rgb(242,178,17)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="399.50"></text></g><g><title>`0x7FF7E0287FBF (12 samples, 0.06%)</title><rect x="5.5080%" y="373" width="0.0574%" height="15" fill="rgb(220,162,5)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="383.50"></text></g><g><title>`0x7FF7E0294F22 (12 samples, 0.06%)</title><rect x="5.5080%" y="357" width="0.0574%" height="15" fill="rgb(210,33,43)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="367.50"></text></g><g><title>`0x7FF7E0295792 (12 samples, 0.06%)</title><rect x="5.5080%" y="341" width="0.0574%" height="15" fill="rgb(216,116,54)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="351.50"></text></g><g><title>`0x7FF7E0297360 (12 samples, 0.06%)</title><rect x="5.5080%" y="325" width="0.0574%" height="15" fill="rgb(249,92,24)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="335.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="5.5080%" y="309" width="0.0574%" height="15" fill="rgb(231,189,14)" fg:x="1151" fg:w="12"/><text x="5.7580%" y="319.50"></text></g><g><title>`0x7FF7E0297360 (52 samples, 0.25%)</title><rect x="5.3261%" y="661" width="0.2488%" height="15" fill="rgb(230,8,41)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="671.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (52 samples, 0.25%)</title><rect x="5.3261%" y="645" width="0.2488%" height="15" fill="rgb(249,7,27)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="655.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (52 samples, 0.25%)</title><rect x="5.3261%" y="629" width="0.2488%" height="15" fill="rgb(232,86,5)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="639.50"></text></g><g><title>`0x7FF7E028F8EA (52 samples, 0.25%)</title><rect x="5.3261%" y="613" width="0.2488%" height="15" fill="rgb(224,175,18)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="623.50"></text></g><g><title>`0x7FF7E028FE9B (52 samples, 0.25%)</title><rect x="5.3261%" y="597" width="0.2488%" height="15" fill="rgb(220,129,12)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="607.50"></text></g><g><title>`0x7FF7E0285A49 (52 samples, 0.25%)</title><rect x="5.3261%" y="581" width="0.2488%" height="15" fill="rgb(210,19,36)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="591.50"></text></g><g><title>`0x7FF7E0287FBF (52 samples, 0.25%)</title><rect x="5.3261%" y="565" width="0.2488%" height="15" fill="rgb(219,96,14)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="575.50"></text></g><g><title>`0x7FF7E0294F22 (52 samples, 0.25%)</title><rect x="5.3261%" y="549" width="0.2488%" height="15" fill="rgb(249,106,1)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="559.50"></text></g><g><title>`0x7FF7E0295792 (52 samples, 0.25%)</title><rect x="5.3261%" y="533" width="0.2488%" height="15" fill="rgb(249,155,20)" fg:x="1113" fg:w="52"/><text x="5.5761%" y="543.50"></text></g><g><title>`0x7FF7E034EB24 (4 samples, 0.02%)</title><rect x="5.5845%" y="437" width="0.0191%" height="15" fill="rgb(244,168,9)" fg:x="1167" fg:w="4"/><text x="5.8345%" y="447.50"></text></g><g><title>`0x7FF7E0287FBF (3 samples, 0.01%)</title><rect x="5.5893%" y="421" width="0.0144%" height="15" fill="rgb(216,23,50)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="431.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.5893%" y="405" width="0.0144%" height="15" fill="rgb(224,219,20)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="415.50"></text></g><g><title>`0x7FF7E0295792 (3 samples, 0.01%)</title><rect x="5.5893%" y="389" width="0.0144%" height="15" fill="rgb(222,156,15)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="399.50"></text></g><g><title>`0x7FF7E029771A (3 samples, 0.01%)</title><rect x="5.5893%" y="373" width="0.0144%" height="15" fill="rgb(231,97,17)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="383.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.5893%" y="357" width="0.0144%" height="15" fill="rgb(218,70,48)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="367.50"></text></g><g><title>`0x7FF7E034EB24 (3 samples, 0.01%)</title><rect x="5.5893%" y="341" width="0.0144%" height="15" fill="rgb(212,196,52)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="351.50"></text></g><g><title>`0x7FF7E0287FBF (3 samples, 0.01%)</title><rect x="5.5893%" y="325" width="0.0144%" height="15" fill="rgb(243,203,18)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="335.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.5893%" y="309" width="0.0144%" height="15" fill="rgb(252,125,41)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="319.50"></text></g><g><title>`0x7FF7E0295792 (3 samples, 0.01%)</title><rect x="5.5893%" y="293" width="0.0144%" height="15" fill="rgb(223,180,33)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="303.50"></text></g><g><title>`0x7FF7E02994B4 (3 samples, 0.01%)</title><rect x="5.5893%" y="277" width="0.0144%" height="15" fill="rgb(254,159,46)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="287.50"></text></g><g><title>`0x7FF7E0287FBF (3 samples, 0.01%)</title><rect x="5.5893%" y="261" width="0.0144%" height="15" fill="rgb(254,38,10)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="271.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.5893%" y="245" width="0.0144%" height="15" fill="rgb(208,217,32)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="255.50"></text></g><g><title>`0x7FF7E0295792 (3 samples, 0.01%)</title><rect x="5.5893%" y="229" width="0.0144%" height="15" fill="rgb(221,120,13)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="239.50"></text></g><g><title>`0x7FF7E0297096 (3 samples, 0.01%)</title><rect x="5.5893%" y="213" width="0.0144%" height="15" fill="rgb(246,54,52)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="223.50"></text></g><g><title>`0x7FF7E02906A6 (3 samples, 0.01%)</title><rect x="5.5893%" y="197" width="0.0144%" height="15" fill="rgb(242,34,25)" fg:x="1168" fg:w="3"/><text x="5.8393%" y="207.50"></text></g><g><title>`0x7FF7E029C106 (5 samples, 0.02%)</title><rect x="5.5845%" y="661" width="0.0239%" height="15" fill="rgb(247,209,9)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="671.50"></text></g><g><title>`0x7FF7E0287FBF (5 samples, 0.02%)</title><rect x="5.5845%" y="645" width="0.0239%" height="15" fill="rgb(228,71,26)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="655.50"></text></g><g><title>`0x7FF7E0294F22 (5 samples, 0.02%)</title><rect x="5.5845%" y="629" width="0.0239%" height="15" fill="rgb(222,145,49)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="639.50"></text></g><g><title>`0x7FF7E0295792 (5 samples, 0.02%)</title><rect x="5.5845%" y="613" width="0.0239%" height="15" fill="rgb(218,121,17)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="623.50"></text></g><g><title>`0x7FF7E029D666 (5 samples, 0.02%)</title><rect x="5.5845%" y="597" width="0.0239%" height="15" fill="rgb(244,50,7)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="607.50"></text></g><g><title>`0x7FF7E02A17BA (5 samples, 0.02%)</title><rect x="5.5845%" y="581" width="0.0239%" height="15" fill="rgb(246,229,37)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="591.50"></text></g><g><title>`0x7FF7E0346401 (5 samples, 0.02%)</title><rect x="5.5845%" y="565" width="0.0239%" height="15" fill="rgb(225,18,5)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="575.50"></text></g><g><title>`0x7FF7E034E580 (5 samples, 0.02%)</title><rect x="5.5845%" y="549" width="0.0239%" height="15" fill="rgb(213,204,8)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="559.50"></text></g><g><title>`0x7FF7E0347E11 (5 samples, 0.02%)</title><rect x="5.5845%" y="533" width="0.0239%" height="15" fill="rgb(238,103,6)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="543.50"></text></g><g><title>`0x7FF7E0287FBF (5 samples, 0.02%)</title><rect x="5.5845%" y="517" width="0.0239%" height="15" fill="rgb(222,25,35)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="527.50"></text></g><g><title>`0x7FF7E0294F22 (5 samples, 0.02%)</title><rect x="5.5845%" y="501" width="0.0239%" height="15" fill="rgb(213,203,35)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="511.50"></text></g><g><title>`0x7FF7E0295792 (5 samples, 0.02%)</title><rect x="5.5845%" y="485" width="0.0239%" height="15" fill="rgb(221,79,53)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="495.50"></text></g><g><title>`0x7FF7E029771A (5 samples, 0.02%)</title><rect x="5.5845%" y="469" width="0.0239%" height="15" fill="rgb(243,200,35)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="479.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="5.5845%" y="453" width="0.0239%" height="15" fill="rgb(248,60,25)" fg:x="1167" fg:w="5"/><text x="5.8345%" y="463.50"></text></g><g><title>`0x7FF7E02777AD (7 samples, 0.03%)</title><rect x="5.6085%" y="405" width="0.0335%" height="15" fill="rgb(227,53,46)" fg:x="1172" fg:w="7"/><text x="5.8585%" y="415.50"></text></g><g><title>`0x7FF7E026C1B1 (6 samples, 0.03%)</title><rect x="5.6132%" y="389" width="0.0287%" height="15" fill="rgb(216,120,32)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="399.50"></text></g><g><title>`0x7FF7E02789FD (6 samples, 0.03%)</title><rect x="5.6132%" y="373" width="0.0287%" height="15" fill="rgb(220,134,1)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="383.50"></text></g><g><title>`0x7FF7E02777AD (6 samples, 0.03%)</title><rect x="5.6132%" y="357" width="0.0287%" height="15" fill="rgb(237,168,5)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="367.50"></text></g><g><title>`0x7FF7E026B484 (6 samples, 0.03%)</title><rect x="5.6132%" y="341" width="0.0287%" height="15" fill="rgb(231,100,33)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="351.50"></text></g><g><title>`0x7FF7E02789FD (6 samples, 0.03%)</title><rect x="5.6132%" y="325" width="0.0287%" height="15" fill="rgb(236,177,47)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="335.50"></text></g><g><title>`0x7FF7E02777AD (6 samples, 0.03%)</title><rect x="5.6132%" y="309" width="0.0287%" height="15" fill="rgb(235,7,49)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="319.50"></text></g><g><title>`0x7FF7E026C1B1 (6 samples, 0.03%)</title><rect x="5.6132%" y="293" width="0.0287%" height="15" fill="rgb(232,119,22)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="303.50"></text></g><g><title>`0x7FF7E02789FD (6 samples, 0.03%)</title><rect x="5.6132%" y="277" width="0.0287%" height="15" fill="rgb(254,73,53)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="287.50"></text></g><g><title>`0x7FF7E02777AD (6 samples, 0.03%)</title><rect x="5.6132%" y="261" width="0.0287%" height="15" fill="rgb(251,35,20)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="271.50"></text></g><g><title>`0x7FF7E026B484 (6 samples, 0.03%)</title><rect x="5.6132%" y="245" width="0.0287%" height="15" fill="rgb(241,119,20)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="255.50"></text></g><g><title>`0x7FF7E02789FD (6 samples, 0.03%)</title><rect x="5.6132%" y="229" width="0.0287%" height="15" fill="rgb(207,102,14)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="239.50"></text></g><g><title>`0x7FF7E02777AD (6 samples, 0.03%)</title><rect x="5.6132%" y="213" width="0.0287%" height="15" fill="rgb(248,201,50)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="223.50"></text></g><g><title>`0x7FF7E026C16F (6 samples, 0.03%)</title><rect x="5.6132%" y="197" width="0.0287%" height="15" fill="rgb(222,185,44)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="207.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.6132%" y="181" width="0.0287%" height="15" fill="rgb(218,107,18)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="191.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.6132%" y="165" width="0.0287%" height="15" fill="rgb(237,177,39)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="175.50"></text></g><g><title>`0x7FF7E02DDE80 (6 samples, 0.03%)</title><rect x="5.6132%" y="149" width="0.0287%" height="15" fill="rgb(246,69,6)" fg:x="1173" fg:w="6"/><text x="5.8632%" y="159.50"></text></g><g><title>`0x7FF7E02E8555 (5 samples, 0.02%)</title><rect x="5.6180%" y="133" width="0.0239%" height="15" fill="rgb(234,208,37)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="143.50"></text></g><g><title>`0x7FF7E02FC712 (5 samples, 0.02%)</title><rect x="5.6180%" y="117" width="0.0239%" height="15" fill="rgb(225,4,6)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="127.50"></text></g><g><title>`0x7FF7E031E576 (5 samples, 0.02%)</title><rect x="5.6180%" y="101" width="0.0239%" height="15" fill="rgb(233,45,0)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="111.50"></text></g><g><title>`0x7FF7E0291B10 (5 samples, 0.02%)</title><rect x="5.6180%" y="85" width="0.0239%" height="15" fill="rgb(226,136,5)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="95.50"></text></g><g><title>`0x7FF7E029355B (5 samples, 0.02%)</title><rect x="5.6180%" y="69" width="0.0239%" height="15" fill="rgb(211,91,47)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="79.50"></text></g><g><title>`0x7FF7E02D5D56 (5 samples, 0.02%)</title><rect x="5.6180%" y="53" width="0.0239%" height="15" fill="rgb(242,88,51)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="63.50"></text></g><g><title>`0x7FF7E02D63AA (5 samples, 0.02%)</title><rect x="5.6180%" y="37" width="0.0239%" height="15" fill="rgb(230,91,28)" fg:x="1174" fg:w="5"/><text x="5.8680%" y="47.50"></text></g><g><title>`0x7FF7E034D60E (8 samples, 0.04%)</title><rect x="5.6085%" y="549" width="0.0383%" height="15" fill="rgb(254,186,29)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="559.50"></text></g><g><title>`0x7FF7E00BC4A6 (8 samples, 0.04%)</title><rect x="5.6085%" y="533" width="0.0383%" height="15" fill="rgb(238,6,4)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="543.50"></text></g><g><title>`0x7FF7E00DAC21 (8 samples, 0.04%)</title><rect x="5.6085%" y="517" width="0.0383%" height="15" fill="rgb(221,151,16)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="527.50"></text></g><g><title>`0x7FF7E00DAF89 (8 samples, 0.04%)</title><rect x="5.6085%" y="501" width="0.0383%" height="15" fill="rgb(251,143,52)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="511.50"></text></g><g><title>`0x7FF7E00DB42D (8 samples, 0.04%)</title><rect x="5.6085%" y="485" width="0.0383%" height="15" fill="rgb(206,90,15)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="495.50"></text></g><g><title>`0x7FF7E00BBB04 (8 samples, 0.04%)</title><rect x="5.6085%" y="469" width="0.0383%" height="15" fill="rgb(218,35,8)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="479.50"></text></g><g><title>`0x7FF7E02B1BB8 (8 samples, 0.04%)</title><rect x="5.6085%" y="453" width="0.0383%" height="15" fill="rgb(239,215,6)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="463.50"></text></g><g><title>`0x7FF7E015A5EA (8 samples, 0.04%)</title><rect x="5.6085%" y="437" width="0.0383%" height="15" fill="rgb(245,116,39)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="447.50"></text></g><g><title>`0x7FF7E02774BE (8 samples, 0.04%)</title><rect x="5.6085%" y="421" width="0.0383%" height="15" fill="rgb(242,65,28)" fg:x="1172" fg:w="8"/><text x="5.8585%" y="431.50"></text></g><g><title>`0x7FF7E029C106 (70 samples, 0.33%)</title><rect x="5.3213%" y="725" width="0.3350%" height="15" fill="rgb(252,132,53)" fg:x="1112" fg:w="70"/><text x="5.5713%" y="735.50"></text></g><g><title>`0x7FF7E0287FBF (69 samples, 0.33%)</title><rect x="5.3261%" y="709" width="0.3302%" height="15" fill="rgb(224,159,50)" fg:x="1113" fg:w="69"/><text x="5.5761%" y="719.50"></text></g><g><title>`0x7FF7E0294F22 (69 samples, 0.33%)</title><rect x="5.3261%" y="693" width="0.3302%" height="15" fill="rgb(224,93,4)" fg:x="1113" fg:w="69"/><text x="5.5761%" y="703.50"></text></g><g><title>`0x7FF7E0295792 (69 samples, 0.33%)</title><rect x="5.3261%" y="677" width="0.3302%" height="15" fill="rgb(208,81,34)" fg:x="1113" fg:w="69"/><text x="5.5761%" y="687.50"></text></g><g><title>`0x7FF7E029C244 (10 samples, 0.05%)</title><rect x="5.6085%" y="661" width="0.0479%" height="15" fill="rgb(233,92,54)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="671.50"></text></g><g><title>`0x7FF7E0287FBF (10 samples, 0.05%)</title><rect x="5.6085%" y="645" width="0.0479%" height="15" fill="rgb(237,21,14)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="655.50"></text></g><g><title>`0x7FF7E0294F22 (10 samples, 0.05%)</title><rect x="5.6085%" y="629" width="0.0479%" height="15" fill="rgb(249,128,51)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="639.50"></text></g><g><title>`0x7FF7E0295792 (10 samples, 0.05%)</title><rect x="5.6085%" y="613" width="0.0479%" height="15" fill="rgb(223,129,24)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="623.50"></text></g><g><title>`0x7FF7E029D666 (10 samples, 0.05%)</title><rect x="5.6085%" y="597" width="0.0479%" height="15" fill="rgb(231,168,25)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="607.50"></text></g><g><title>`0x7FF7E02A17BA (10 samples, 0.05%)</title><rect x="5.6085%" y="581" width="0.0479%" height="15" fill="rgb(224,39,20)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="591.50"></text></g><g><title>`0x7FF7E0346401 (10 samples, 0.05%)</title><rect x="5.6085%" y="565" width="0.0479%" height="15" fill="rgb(225,152,53)" fg:x="1172" fg:w="10"/><text x="5.8585%" y="575.50"></text></g><g><title>`0x7FF7E0367285 (3 samples, 0.01%)</title><rect x="5.6755%" y="581" width="0.0144%" height="15" fill="rgb(252,17,24)" fg:x="1186" fg:w="3"/><text x="5.9255%" y="591.50"></text></g><g><title>`0x7FF7E034EB24 (3 samples, 0.01%)</title><rect x="5.6755%" y="565" width="0.0144%" height="15" fill="rgb(250,114,30)" fg:x="1186" fg:w="3"/><text x="5.9255%" y="575.50"></text></g><g><title>`0x7FF7E0287FBF (3 samples, 0.01%)</title><rect x="5.6755%" y="549" width="0.0144%" height="15" fill="rgb(229,5,4)" fg:x="1186" fg:w="3"/><text x="5.9255%" y="559.50"></text></g><g><title>`0x7FF7E0294F22 (3 samples, 0.01%)</title><rect x="5.6755%" y="533" width="0.0144%" height="15" fill="rgb(225,176,49)" fg:x="1186" fg:w="3"/><text x="5.9255%" y="543.50"></text></g><g><title>`0x7FF7E0295792 (3 samples, 0.01%)</title><rect x="5.6755%" y="517" width="0.0144%" height="15" fill="rgb(224,221,49)" fg:x="1186" fg:w="3"/><text x="5.9255%" y="527.50"></text></g><g><title>`0x7FF7E029C244 (8 samples, 0.04%)</title><rect x="5.6563%" y="725" width="0.0383%" height="15" fill="rgb(253,169,27)" fg:x="1182" fg:w="8"/><text x="5.9063%" y="735.50"></text></g><g><title>`0x7FF7E0287FBF (7 samples, 0.03%)</title><rect x="5.6611%" y="709" width="0.0335%" height="15" fill="rgb(211,206,16)" fg:x="1183" fg:w="7"/><text x="5.9111%" y="719.50"></text></g><g><title>`0x7FF7E0294F22 (7 samples, 0.03%)</title><rect x="5.6611%" y="693" width="0.0335%" height="15" fill="rgb(244,87,35)" fg:x="1183" fg:w="7"/><text x="5.9111%" y="703.50"></text></g><g><title>`0x7FF7E0295792 (7 samples, 0.03%)</title><rect x="5.6611%" y="677" width="0.0335%" height="15" fill="rgb(246,28,10)" fg:x="1183" fg:w="7"/><text x="5.9111%" y="687.50"></text></g><g><title>`0x7FF7E029C106 (7 samples, 0.03%)</title><rect x="5.6611%" y="661" width="0.0335%" height="15" fill="rgb(229,12,44)" fg:x="1183" fg:w="7"/><text x="5.9111%" y="671.50"></text></g><g><title>`0x7FF7E0287FBF (6 samples, 0.03%)</title><rect x="5.6659%" y="645" width="0.0287%" height="15" fill="rgb(210,145,37)" fg:x="1184" fg:w="6"/><text x="5.9159%" y="655.50"></text></g><g><title>`0x7FF7E0294F22 (6 samples, 0.03%)</title><rect x="5.6659%" y="629" width="0.0287%" height="15" fill="rgb(227,112,52)" fg:x="1184" fg:w="6"/><text x="5.9159%" y="639.50"></text></g><g><title>`0x7FF7E0295792 (6 samples, 0.03%)</title><rect x="5.6659%" y="613" width="0.0287%" height="15" fill="rgb(238,155,34)" fg:x="1184" fg:w="6"/><text x="5.9159%" y="623.50"></text></g><g><title>`0x7FF7E029771A (4 samples, 0.02%)</title><rect x="5.6755%" y="597" width="0.0191%" height="15" fill="rgb(239,226,36)" fg:x="1186" fg:w="4"/><text x="5.9255%" y="607.50"></text></g><g><title>`0x7FF7E0287FBF (82 samples, 0.39%)</title><rect x="5.3070%" y="1077" width="0.3924%" height="15" fill="rgb(230,16,23)" fg:x="1109" fg:w="82"/><text x="5.5570%" y="1087.50"></text></g><g><title>`0x7FF7E0294F22 (82 samples, 0.39%)</title><rect x="5.3070%" y="1061" width="0.3924%" height="15" fill="rgb(236,171,36)" fg:x="1109" fg:w="82"/><text x="5.5570%" y="1071.50"></text></g><g><title>`0x7FF7E0295792 (82 samples, 0.39%)</title><rect x="5.3070%" y="1045" width="0.3924%" height="15" fill="rgb(221,22,14)" fg:x="1109" fg:w="82"/><text x="5.5570%" y="1055.50"></text></g><g><title>`0x7FF7E029C106 (81 samples, 0.39%)</title><rect x="5.3118%" y="1029" width="0.3876%" height="15" fill="rgb(242,43,11)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="1039.50"></text></g><g><title>`0x7FF7E0287FBF (81 samples, 0.39%)</title><rect x="5.3118%" y="1013" width="0.3876%" height="15" fill="rgb(232,69,23)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="1023.50"></text></g><g><title>`0x7FF7E0294F22 (81 samples, 0.39%)</title><rect x="5.3118%" y="997" width="0.3876%" height="15" fill="rgb(216,180,54)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="1007.50"></text></g><g><title>`0x7FF7E0295792 (81 samples, 0.39%)</title><rect x="5.3118%" y="981" width="0.3876%" height="15" fill="rgb(216,5,24)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="991.50"></text></g><g><title>`0x7FF7E0297096 (81 samples, 0.39%)</title><rect x="5.3118%" y="965" width="0.3876%" height="15" fill="rgb(225,89,9)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="975.50"></text></g><g><title>`0x7FF7E0290551 (81 samples, 0.39%)</title><rect x="5.3118%" y="949" width="0.3876%" height="15" fill="rgb(243,75,33)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="959.50"></text></g><g><title>`0x7FF7E02B7913 (81 samples, 0.39%)</title><rect x="5.3118%" y="933" width="0.3876%" height="15" fill="rgb(247,141,45)" fg:x="1110" fg:w="81"/><text x="5.5618%" y="943.50"></text></g><g><title>`0x7FF7E0287FBF (80 samples, 0.38%)</title><rect x="5.3166%" y="917" width="0.3828%" height="15" fill="rgb(232,177,36)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="927.50"></text></g><g><title>`0x7FF7E0294F22 (80 samples, 0.38%)</title><rect x="5.3166%" y="901" width="0.3828%" height="15" fill="rgb(219,125,36)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="911.50"></text></g><g><title>`0x7FF7E0295792 (80 samples, 0.38%)</title><rect x="5.3166%" y="885" width="0.3828%" height="15" fill="rgb(227,94,9)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="895.50"></text></g><g><title>`0x7FF7E0297360 (80 samples, 0.38%)</title><rect x="5.3166%" y="869" width="0.3828%" height="15" fill="rgb(240,34,52)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="879.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (80 samples, 0.38%)</title><rect x="5.3166%" y="853" width="0.3828%" height="15" fill="rgb(216,45,12)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="863.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (80 samples, 0.38%)</title><rect x="5.3166%" y="837" width="0.3828%" height="15" fill="rgb(246,21,19)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="847.50"></text></g><g><title>`0x7FF7E028F8EA (80 samples, 0.38%)</title><rect x="5.3166%" y="821" width="0.3828%" height="15" fill="rgb(213,98,42)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="831.50"></text></g><g><title>`0x7FF7E028FE9B (80 samples, 0.38%)</title><rect x="5.3166%" y="805" width="0.3828%" height="15" fill="rgb(250,136,47)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="815.50"></text></g><g><title>`0x7FF7E0285A49 (80 samples, 0.38%)</title><rect x="5.3166%" y="789" width="0.3828%" height="15" fill="rgb(251,124,27)" fg:x="1111" fg:w="80"/><text x="5.5666%" y="799.50"></text></g><g><title>`0x7FF7E0287FBF (79 samples, 0.38%)</title><rect x="5.3213%" y="773" width="0.3780%" height="15" fill="rgb(229,180,14)" fg:x="1112" fg:w="79"/><text x="5.5713%" y="783.50"></text></g><g><title>`0x7FF7E0294F22 (79 samples, 0.38%)</title><rect x="5.3213%" y="757" width="0.3780%" height="15" fill="rgb(245,216,25)" fg:x="1112" fg:w="79"/><text x="5.5713%" y="767.50"></text></g><g><title>`0x7FF7E0295792 (79 samples, 0.38%)</title><rect x="5.3213%" y="741" width="0.3780%" height="15" fill="rgb(251,43,5)" fg:x="1112" fg:w="79"/><text x="5.5713%" y="751.50"></text></g><g><title>`0x7FF7E03356F4 (125 samples, 0.60%)</title><rect x="5.1060%" y="1573" width="0.5982%" height="15" fill="rgb(250,128,24)" fg:x="1067" fg:w="125"/><text x="5.3560%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (124 samples, 0.59%)</title><rect x="5.1108%" y="1557" width="0.5934%" height="15" fill="rgb(217,117,27)" fg:x="1068" fg:w="124"/><text x="5.3608%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (89 samples, 0.43%)</title><rect x="5.2783%" y="1541" width="0.4259%" height="15" fill="rgb(245,147,4)" fg:x="1103" fg:w="89"/><text x="5.5283%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (87 samples, 0.42%)</title><rect x="5.2878%" y="1525" width="0.4163%" height="15" fill="rgb(242,201,35)" fg:x="1105" fg:w="87"/><text x="5.5378%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (87 samples, 0.42%)</title><rect x="5.2878%" y="1509" width="0.4163%" height="15" fill="rgb(218,181,1)" fg:x="1105" fg:w="87"/><text x="5.5378%" y="1519.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (87 samples, 0.42%)</title><rect x="5.2878%" y="1493" width="0.4163%" height="15" fill="rgb(222,6,29)" fg:x="1105" fg:w="87"/><text x="5.5378%" y="1503.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (87 samples, 0.42%)</title><rect x="5.2878%" y="1477" width="0.4163%" height="15" fill="rgb(208,186,3)" fg:x="1105" fg:w="87"/><text x="5.5378%" y="1487.50"></text></g><g><title>`0x7FF7E028F8EA (87 samples, 0.42%)</title><rect x="5.2878%" y="1461" width="0.4163%" height="15" fill="rgb(216,36,26)" fg:x="1105" fg:w="87"/><text x="5.5378%" y="1471.50"></text></g><g><title>`0x7FF7E028FE9B (86 samples, 0.41%)</title><rect x="5.2926%" y="1445" width="0.4115%" height="15" fill="rgb(248,201,23)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1455.50"></text></g><g><title>`0x7FF7E0285A49 (86 samples, 0.41%)</title><rect x="5.2926%" y="1429" width="0.4115%" height="15" fill="rgb(251,170,31)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1439.50"></text></g><g><title>`0x7FF7E0287FBF (86 samples, 0.41%)</title><rect x="5.2926%" y="1413" width="0.4115%" height="15" fill="rgb(207,110,25)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1423.50"></text></g><g><title>`0x7FF7E0294F22 (86 samples, 0.41%)</title><rect x="5.2926%" y="1397" width="0.4115%" height="15" fill="rgb(250,54,15)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1407.50"></text></g><g><title>`0x7FF7E0295792 (86 samples, 0.41%)</title><rect x="5.2926%" y="1381" width="0.4115%" height="15" fill="rgb(227,68,33)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1391.50"></text></g><g><title>`0x7FF7E029D57F (86 samples, 0.41%)</title><rect x="5.2926%" y="1365" width="0.4115%" height="15" fill="rgb(238,34,41)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1375.50"></text></g><g><title>`0x7FF7E02A002D (86 samples, 0.41%)</title><rect x="5.2926%" y="1349" width="0.4115%" height="15" fill="rgb(220,11,15)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1359.50"></text></g><g><title>`0x7FF7E02ABC50 (86 samples, 0.41%)</title><rect x="5.2926%" y="1333" width="0.4115%" height="15" fill="rgb(246,111,35)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1343.50"></text></g><g><title>`0x7FF7E02A44CA (86 samples, 0.41%)</title><rect x="5.2926%" y="1317" width="0.4115%" height="15" fill="rgb(209,88,53)" fg:x="1106" fg:w="86"/><text x="5.5426%" y="1327.50"></text></g><g><title>`0x7FF7E0287FBF (84 samples, 0.40%)</title><rect x="5.3022%" y="1301" width="0.4020%" height="15" fill="rgb(231,185,47)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1311.50"></text></g><g><title>`0x7FF7E0294F22 (84 samples, 0.40%)</title><rect x="5.3022%" y="1285" width="0.4020%" height="15" fill="rgb(233,154,1)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1295.50"></text></g><g><title>`0x7FF7E0295792 (84 samples, 0.40%)</title><rect x="5.3022%" y="1269" width="0.4020%" height="15" fill="rgb(225,15,46)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1279.50"></text></g><g><title>`0x7FF7E0297360 (84 samples, 0.40%)</title><rect x="5.3022%" y="1253" width="0.4020%" height="15" fill="rgb(211,135,41)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1263.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (84 samples, 0.40%)</title><rect x="5.3022%" y="1237" width="0.4020%" height="15" fill="rgb(208,54,0)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1247.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (84 samples, 0.40%)</title><rect x="5.3022%" y="1221" width="0.4020%" height="15" fill="rgb(244,136,14)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1231.50"></text></g><g><title>`0x7FF7E028F8EA (84 samples, 0.40%)</title><rect x="5.3022%" y="1205" width="0.4020%" height="15" fill="rgb(241,56,14)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1215.50"></text></g><g><title>`0x7FF7E028FE9B (84 samples, 0.40%)</title><rect x="5.3022%" y="1189" width="0.4020%" height="15" fill="rgb(205,80,24)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1199.50"></text></g><g><title>`0x7FF7E0285A49 (84 samples, 0.40%)</title><rect x="5.3022%" y="1173" width="0.4020%" height="15" fill="rgb(220,57,4)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1183.50"></text></g><g><title>`0x7FF7E0287FBF (84 samples, 0.40%)</title><rect x="5.3022%" y="1157" width="0.4020%" height="15" fill="rgb(226,193,50)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1167.50"></text></g><g><title>`0x7FF7E0294F22 (84 samples, 0.40%)</title><rect x="5.3022%" y="1141" width="0.4020%" height="15" fill="rgb(231,168,22)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1151.50"></text></g><g><title>`0x7FF7E0295792 (84 samples, 0.40%)</title><rect x="5.3022%" y="1125" width="0.4020%" height="15" fill="rgb(254,215,14)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1135.50"></text></g><g><title>`0x7FF7E029C7AF (84 samples, 0.40%)</title><rect x="5.3022%" y="1109" width="0.4020%" height="15" fill="rgb(211,115,16)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1119.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (84 samples, 0.40%)</title><rect x="5.3022%" y="1093" width="0.4020%" height="15" fill="rgb(236,210,16)" fg:x="1108" fg:w="84"/><text x="5.5522%" y="1103.50"></text></g><g><title>`0x7FF7E01EAED1 (135 samples, 0.65%)</title><rect x="5.0916%" y="1733" width="0.6460%" height="15" fill="rgb(221,94,12)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1743.50"></text></g><g><title>`0x7FF7E0320B62 (135 samples, 0.65%)</title><rect x="5.0916%" y="1717" width="0.6460%" height="15" fill="rgb(235,218,49)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1727.50"></text></g><g><title>`0x7FF7E02CA2CD (135 samples, 0.65%)</title><rect x="5.0916%" y="1701" width="0.6460%" height="15" fill="rgb(217,114,14)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1711.50"></text></g><g><title>`0x7FF7E0337728 (135 samples, 0.65%)</title><rect x="5.0916%" y="1685" width="0.6460%" height="15" fill="rgb(216,145,22)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1695.50"></text></g><g><title>`0x7FF7E0270672 (135 samples, 0.65%)</title><rect x="5.0916%" y="1669" width="0.6460%" height="15" fill="rgb(217,112,39)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1679.50"></text></g><g><title>`0x7FF7E0318A86 (135 samples, 0.65%)</title><rect x="5.0916%" y="1653" width="0.6460%" height="15" fill="rgb(225,85,32)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1663.50"></text></g><g><title>`0x7FF7E0309C82 (135 samples, 0.65%)</title><rect x="5.0916%" y="1637" width="0.6460%" height="15" fill="rgb(245,209,47)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1647.50"></text></g><g><title>`0x7FF7E0320144 (135 samples, 0.65%)</title><rect x="5.0916%" y="1621" width="0.6460%" height="15" fill="rgb(218,220,15)" fg:x="1064" fg:w="135"/><text x="5.3416%" y="1631.50"></text></g><g><title>`0x7FF7E031AB5C (134 samples, 0.64%)</title><rect x="5.0964%" y="1605" width="0.6412%" height="15" fill="rgb(222,202,31)" fg:x="1065" fg:w="134"/><text x="5.3464%" y="1615.50"></text></g><g><title>`0x7FF7E03315E8 (134 samples, 0.64%)</title><rect x="5.0964%" y="1589" width="0.6412%" height="15" fill="rgb(243,203,4)" fg:x="1065" fg:w="134"/><text x="5.3464%" y="1599.50"></text></g><g><title>`0x7FF7E0335B06 (6 samples, 0.03%)</title><rect x="5.7090%" y="1573" width="0.0287%" height="15" fill="rgb(237,92,17)" fg:x="1193" fg:w="6"/><text x="5.9590%" y="1583.50"></text></g><g><title>`0x7FF7E030E7F8 (4 samples, 0.02%)</title><rect x="5.7185%" y="1557" width="0.0191%" height="15" fill="rgb(231,119,7)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1567.50"></text></g><g><title>`0x7FF7E030B03F (4 samples, 0.02%)</title><rect x="5.7185%" y="1541" width="0.0191%" height="15" fill="rgb(237,82,41)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1551.50"></text></g><g><title>`0x7FF7E0337728 (4 samples, 0.02%)</title><rect x="5.7185%" y="1525" width="0.0191%" height="15" fill="rgb(226,81,48)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1535.50"></text></g><g><title>`0x7FF7E0270430 (4 samples, 0.02%)</title><rect x="5.7185%" y="1509" width="0.0191%" height="15" fill="rgb(234,70,51)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1519.50"></text></g><g><title>`0x7FF7E030B472 (4 samples, 0.02%)</title><rect x="5.7185%" y="1493" width="0.0191%" height="15" fill="rgb(251,86,4)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1503.50"></text></g><g><title>`0x7FF7E0337728 (4 samples, 0.02%)</title><rect x="5.7185%" y="1477" width="0.0191%" height="15" fill="rgb(244,144,28)" fg:x="1195" fg:w="4"/><text x="5.9685%" y="1487.50"></text></g><g><title>`0x7FF7E0337728 (138 samples, 0.66%)</title><rect x="5.0821%" y="1797" width="0.6604%" height="15" fill="rgb(232,161,39)" fg:x="1062" fg:w="138"/><text x="5.3321%" y="1807.50"></text></g><g><title>`0x7FF7E0270A2E (138 samples, 0.66%)</title><rect x="5.0821%" y="1781" width="0.6604%" height="15" fill="rgb(247,34,51)" fg:x="1062" fg:w="138"/><text x="5.3321%" y="1791.50"></text></g><g><title>`0x7FF7E03291F3 (138 samples, 0.66%)</title><rect x="5.0821%" y="1765" width="0.6604%" height="15" fill="rgb(225,132,2)" fg:x="1062" fg:w="138"/><text x="5.3321%" y="1775.50"></text></g><g><title>`0x7FF7E01E43E2 (138 samples, 0.66%)</title><rect x="5.0821%" y="1749" width="0.6604%" height="15" fill="rgb(209,159,44)" fg:x="1062" fg:w="138"/><text x="5.3321%" y="1759.50"></text></g><g><title>`0x7FF7E02E7EA3 (5 samples, 0.02%)</title><rect x="5.7425%" y="1397" width="0.0239%" height="15" fill="rgb(251,214,1)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1407.50"></text></g><g><title>`0x7FF7E0369C3B (5 samples, 0.02%)</title><rect x="5.7425%" y="1381" width="0.0239%" height="15" fill="rgb(247,84,47)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1391.50"></text></g><g><title>`0x7FF7E028FE9B (5 samples, 0.02%)</title><rect x="5.7425%" y="1365" width="0.0239%" height="15" fill="rgb(240,111,43)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1375.50"></text></g><g><title>`0x7FF7E0285A49 (5 samples, 0.02%)</title><rect x="5.7425%" y="1349" width="0.0239%" height="15" fill="rgb(215,214,35)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1359.50"></text></g><g><title>`0x7FF7E0287FBF (5 samples, 0.02%)</title><rect x="5.7425%" y="1333" width="0.0239%" height="15" fill="rgb(248,207,23)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1343.50"></text></g><g><title>`0x7FF7E0294F22 (5 samples, 0.02%)</title><rect x="5.7425%" y="1317" width="0.0239%" height="15" fill="rgb(214,186,4)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1327.50"></text></g><g><title>`0x7FF7E0295792 (5 samples, 0.02%)</title><rect x="5.7425%" y="1301" width="0.0239%" height="15" fill="rgb(220,133,22)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1311.50"></text></g><g><title>`0x7FF7E0297096 (5 samples, 0.02%)</title><rect x="5.7425%" y="1285" width="0.0239%" height="15" fill="rgb(239,134,19)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1295.50"></text></g><g><title>`0x7FF7E02906A6 (5 samples, 0.02%)</title><rect x="5.7425%" y="1269" width="0.0239%" height="15" fill="rgb(250,140,9)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1279.50"></text></g><g><title>`0x7FF7E02A3041 (5 samples, 0.02%)</title><rect x="5.7425%" y="1253" width="0.0239%" height="15" fill="rgb(225,59,14)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1263.50"></text></g><g><title>`0x7FF7E0287FBF (5 samples, 0.02%)</title><rect x="5.7425%" y="1237" width="0.0239%" height="15" fill="rgb(214,152,51)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1247.50"></text></g><g><title>`0x7FF7E0294F22 (5 samples, 0.02%)</title><rect x="5.7425%" y="1221" width="0.0239%" height="15" fill="rgb(251,227,43)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1231.50"></text></g><g><title>`0x7FF7E0295792 (5 samples, 0.02%)</title><rect x="5.7425%" y="1205" width="0.0239%" height="15" fill="rgb(241,96,17)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1215.50"></text></g><g><title>`0x7FF7E029D57F (5 samples, 0.02%)</title><rect x="5.7425%" y="1189" width="0.0239%" height="15" fill="rgb(234,198,43)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1199.50"></text></g><g><title>`0x7FF7E02A002D (5 samples, 0.02%)</title><rect x="5.7425%" y="1173" width="0.0239%" height="15" fill="rgb(220,108,29)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1183.50"></text></g><g><title>`0x7FF7E02ABC50 (5 samples, 0.02%)</title><rect x="5.7425%" y="1157" width="0.0239%" height="15" fill="rgb(226,163,33)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1167.50"></text></g><g><title>`0x7FF7E02A440B (5 samples, 0.02%)</title><rect x="5.7425%" y="1141" width="0.0239%" height="15" fill="rgb(205,194,45)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1151.50"></text></g><g><title>`0x7FF7E028FF53 (5 samples, 0.02%)</title><rect x="5.7425%" y="1125" width="0.0239%" height="15" fill="rgb(206,143,44)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1135.50"></text></g><g><title>`0x7FF7E023D388 (5 samples, 0.02%)</title><rect x="5.7425%" y="1109" width="0.0239%" height="15" fill="rgb(236,136,36)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1119.50"></text></g><g><title>`0x7FF7E031F1CD (5 samples, 0.02%)</title><rect x="5.7425%" y="1093" width="0.0239%" height="15" fill="rgb(249,172,42)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1103.50"></text></g><g><title>`0x7FF7E02FC712 (5 samples, 0.02%)</title><rect x="5.7425%" y="1077" width="0.0239%" height="15" fill="rgb(216,139,23)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1087.50"></text></g><g><title>`0x7FF7E031E576 (5 samples, 0.02%)</title><rect x="5.7425%" y="1061" width="0.0239%" height="15" fill="rgb(207,166,20)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1071.50"></text></g><g><title>`0x7FF7E029244F (5 samples, 0.02%)</title><rect x="5.7425%" y="1045" width="0.0239%" height="15" fill="rgb(210,209,22)" fg:x="1200" fg:w="5"/><text x="5.9925%" y="1055.50"></text></g><g><title>`0x7FF7E02DDE80 (3 samples, 0.01%)</title><rect x="5.7520%" y="1029" width="0.0144%" height="15" fill="rgb(232,118,20)" fg:x="1202" fg:w="3"/><text x="6.0020%" y="1039.50"></text></g><g><title>`0x7FF7E030E77D (11 samples, 0.05%)</title><rect x="5.7425%" y="1557" width="0.0526%" height="15" fill="rgb(238,113,42)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1567.50"></text></g><g><title>`0x7FF7E02D20C2 (11 samples, 0.05%)</title><rect x="5.7425%" y="1541" width="0.0526%" height="15" fill="rgb(231,42,5)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1551.50"></text></g><g><title>`0x7FF7E02D2226 (11 samples, 0.05%)</title><rect x="5.7425%" y="1525" width="0.0526%" height="15" fill="rgb(243,166,24)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1535.50"></text></g><g><title>`0x7FF7E02D24C1 (11 samples, 0.05%)</title><rect x="5.7425%" y="1509" width="0.0526%" height="15" fill="rgb(237,226,12)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1519.50"></text></g><g><title>`0x7FF7E023D32C (11 samples, 0.05%)</title><rect x="5.7425%" y="1493" width="0.0526%" height="15" fill="rgb(229,133,24)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1503.50"></text></g><g><title>`0x7FF7E02A4600 (11 samples, 0.05%)</title><rect x="5.7425%" y="1477" width="0.0526%" height="15" fill="rgb(238,33,43)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1487.50"></text></g><g><title>`0x7FF7E02FC712 (11 samples, 0.05%)</title><rect x="5.7425%" y="1461" width="0.0526%" height="15" fill="rgb(227,59,38)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1471.50"></text></g><g><title>`0x7FF7E031E576 (11 samples, 0.05%)</title><rect x="5.7425%" y="1445" width="0.0526%" height="15" fill="rgb(230,97,0)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1455.50"></text></g><g><title>`0x7FF7E029244F (11 samples, 0.05%)</title><rect x="5.7425%" y="1429" width="0.0526%" height="15" fill="rgb(250,173,50)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1439.50"></text></g><g><title>`0x7FF7E02DDE80 (11 samples, 0.05%)</title><rect x="5.7425%" y="1413" width="0.0526%" height="15" fill="rgb(240,15,50)" fg:x="1200" fg:w="11"/><text x="5.9925%" y="1423.50"></text></g><g><title>`0x7FF7E02E8429 (6 samples, 0.03%)</title><rect x="5.7664%" y="1397" width="0.0287%" height="15" fill="rgb(221,93,22)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1407.50"></text></g><g><title>`0x7FF7E0369C3B (6 samples, 0.03%)</title><rect x="5.7664%" y="1381" width="0.0287%" height="15" fill="rgb(245,180,53)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1391.50"></text></g><g><title>`0x7FF7E028FE9B (6 samples, 0.03%)</title><rect x="5.7664%" y="1365" width="0.0287%" height="15" fill="rgb(231,88,51)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1375.50"></text></g><g><title>`0x7FF7E0285A49 (6 samples, 0.03%)</title><rect x="5.7664%" y="1349" width="0.0287%" height="15" fill="rgb(240,58,21)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1359.50"></text></g><g><title>`0x7FF7E0287FBF (6 samples, 0.03%)</title><rect x="5.7664%" y="1333" width="0.0287%" height="15" fill="rgb(237,21,10)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1343.50"></text></g><g><title>`0x7FF7E0294F22 (6 samples, 0.03%)</title><rect x="5.7664%" y="1317" width="0.0287%" height="15" fill="rgb(218,43,11)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1327.50"></text></g><g><title>`0x7FF7E0295792 (6 samples, 0.03%)</title><rect x="5.7664%" y="1301" width="0.0287%" height="15" fill="rgb(218,221,29)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1311.50"></text></g><g><title>`0x7FF7E0297096 (6 samples, 0.03%)</title><rect x="5.7664%" y="1285" width="0.0287%" height="15" fill="rgb(214,118,42)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1295.50"></text></g><g><title>`0x7FF7E02906A6 (6 samples, 0.03%)</title><rect x="5.7664%" y="1269" width="0.0287%" height="15" fill="rgb(251,200,26)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1279.50"></text></g><g><title>`0x7FF7E02A3041 (6 samples, 0.03%)</title><rect x="5.7664%" y="1253" width="0.0287%" height="15" fill="rgb(237,101,39)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1263.50"></text></g><g><title>`0x7FF7E0287FBF (6 samples, 0.03%)</title><rect x="5.7664%" y="1237" width="0.0287%" height="15" fill="rgb(251,117,11)" fg:x="1205" fg:w="6"/><text x="6.0164%" y="1247.50"></text></g><g><title>`0x7FF7E0294F22 (5 samples, 0.02%)</title><rect x="5.7712%" y="1221" width="0.0239%" height="15" fill="rgb(216,223,23)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1231.50"></text></g><g><title>`0x7FF7E0295792 (5 samples, 0.02%)</title><rect x="5.7712%" y="1205" width="0.0239%" height="15" fill="rgb(251,54,12)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1215.50"></text></g><g><title>`0x7FF7E029D57F (5 samples, 0.02%)</title><rect x="5.7712%" y="1189" width="0.0239%" height="15" fill="rgb(254,176,54)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1199.50"></text></g><g><title>`0x7FF7E02A002D (5 samples, 0.02%)</title><rect x="5.7712%" y="1173" width="0.0239%" height="15" fill="rgb(210,32,8)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1183.50"></text></g><g><title>`0x7FF7E02ABC50 (5 samples, 0.02%)</title><rect x="5.7712%" y="1157" width="0.0239%" height="15" fill="rgb(235,52,38)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1167.50"></text></g><g><title>`0x7FF7E02A440B (5 samples, 0.02%)</title><rect x="5.7712%" y="1141" width="0.0239%" height="15" fill="rgb(231,4,44)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1151.50"></text></g><g><title>`0x7FF7E028FF53 (5 samples, 0.02%)</title><rect x="5.7712%" y="1125" width="0.0239%" height="15" fill="rgb(249,2,32)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1135.50"></text></g><g><title>`0x7FF7E023D388 (5 samples, 0.02%)</title><rect x="5.7712%" y="1109" width="0.0239%" height="15" fill="rgb(224,65,26)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1119.50"></text></g><g><title>`0x7FF7E031F1CD (5 samples, 0.02%)</title><rect x="5.7712%" y="1093" width="0.0239%" height="15" fill="rgb(250,73,40)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1103.50"></text></g><g><title>`0x7FF7E02FC712 (5 samples, 0.02%)</title><rect x="5.7712%" y="1077" width="0.0239%" height="15" fill="rgb(253,177,16)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1087.50"></text></g><g><title>`0x7FF7E031E576 (5 samples, 0.02%)</title><rect x="5.7712%" y="1061" width="0.0239%" height="15" fill="rgb(217,32,34)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1071.50"></text></g><g><title>`0x7FF7E029244F (5 samples, 0.02%)</title><rect x="5.7712%" y="1045" width="0.0239%" height="15" fill="rgb(212,7,10)" fg:x="1206" fg:w="5"/><text x="6.0212%" y="1055.50"></text></g><g><title>`0x7FF7E02DDE80 (4 samples, 0.02%)</title><rect x="5.7759%" y="1029" width="0.0191%" height="15" fill="rgb(245,89,8)" fg:x="1207" fg:w="4"/><text x="6.0259%" y="1039.50"></text></g><g><title>`0x7FF7E030E7F8 (3 samples, 0.01%)</title><rect x="5.7951%" y="1557" width="0.0144%" height="15" fill="rgb(237,16,53)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1567.50"></text></g><g><title>`0x7FF7E030B03F (3 samples, 0.01%)</title><rect x="5.7951%" y="1541" width="0.0144%" height="15" fill="rgb(250,204,30)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1551.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.7951%" y="1525" width="0.0144%" height="15" fill="rgb(208,77,27)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1535.50"></text></g><g><title>`0x7FF7E02704E6 (3 samples, 0.01%)</title><rect x="5.7951%" y="1509" width="0.0144%" height="15" fill="rgb(250,204,28)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1519.50"></text></g><g><title>`0x7FF7E0325BED (3 samples, 0.01%)</title><rect x="5.7951%" y="1493" width="0.0144%" height="15" fill="rgb(244,63,21)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1503.50"></text></g><g><title>`0x7FF7E0334A78 (3 samples, 0.01%)</title><rect x="5.7951%" y="1477" width="0.0144%" height="15" fill="rgb(236,85,44)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1487.50"></text></g><g><title>`0x7FF7E03347A3 (3 samples, 0.01%)</title><rect x="5.7951%" y="1461" width="0.0144%" height="15" fill="rgb(215,98,4)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1471.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.7951%" y="1445" width="0.0144%" height="15" fill="rgb(235,38,11)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1455.50"></text></g><g><title>`0x7FF7E02704E6 (3 samples, 0.01%)</title><rect x="5.7951%" y="1429" width="0.0144%" height="15" fill="rgb(254,186,25)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1439.50"></text></g><g><title>`0x7FF7E0325BED (3 samples, 0.01%)</title><rect x="5.7951%" y="1413" width="0.0144%" height="15" fill="rgb(225,55,31)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1423.50"></text></g><g><title>`0x7FF7E0334A78 (3 samples, 0.01%)</title><rect x="5.7951%" y="1397" width="0.0144%" height="15" fill="rgb(211,15,21)" fg:x="1211" fg:w="3"/><text x="6.0451%" y="1407.50"></text></g><g><title>`0x7FF7E01EAED1 (17 samples, 0.08%)</title><rect x="5.7425%" y="1733" width="0.0814%" height="15" fill="rgb(215,187,41)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1743.50"></text></g><g><title>`0x7FF7E0320B62 (17 samples, 0.08%)</title><rect x="5.7425%" y="1717" width="0.0814%" height="15" fill="rgb(248,69,32)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1727.50"></text></g><g><title>`0x7FF7E02CA2CD (17 samples, 0.08%)</title><rect x="5.7425%" y="1701" width="0.0814%" height="15" fill="rgb(252,102,52)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1711.50"></text></g><g><title>`0x7FF7E0337B8A (17 samples, 0.08%)</title><rect x="5.7425%" y="1685" width="0.0814%" height="15" fill="rgb(253,140,32)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1695.50"></text></g><g><title>`0x7FF7E0270672 (17 samples, 0.08%)</title><rect x="5.7425%" y="1669" width="0.0814%" height="15" fill="rgb(216,56,42)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1679.50"></text></g><g><title>`0x7FF7E0318A86 (17 samples, 0.08%)</title><rect x="5.7425%" y="1653" width="0.0814%" height="15" fill="rgb(216,184,14)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1663.50"></text></g><g><title>`0x7FF7E0309C82 (17 samples, 0.08%)</title><rect x="5.7425%" y="1637" width="0.0814%" height="15" fill="rgb(237,187,27)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1647.50"></text></g><g><title>`0x7FF7E0320144 (17 samples, 0.08%)</title><rect x="5.7425%" y="1621" width="0.0814%" height="15" fill="rgb(219,65,3)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1631.50"></text></g><g><title>`0x7FF7E031AB5C (17 samples, 0.08%)</title><rect x="5.7425%" y="1605" width="0.0814%" height="15" fill="rgb(245,83,25)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1615.50"></text></g><g><title>`0x7FF7E03315E8 (17 samples, 0.08%)</title><rect x="5.7425%" y="1589" width="0.0814%" height="15" fill="rgb(214,205,45)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1599.50"></text></g><g><title>`0x7FF7E0335B06 (17 samples, 0.08%)</title><rect x="5.7425%" y="1573" width="0.0814%" height="15" fill="rgb(241,20,18)" fg:x="1200" fg:w="17"/><text x="5.9925%" y="1583.50"></text></g><g><title>`0x7FF7E030E957 (3 samples, 0.01%)</title><rect x="5.8094%" y="1557" width="0.0144%" height="15" fill="rgb(232,163,23)" fg:x="1214" fg:w="3"/><text x="6.0594%" y="1567.50"></text></g><g><title>`0x7FF7E0329924 (3 samples, 0.01%)</title><rect x="5.8094%" y="1541" width="0.0144%" height="15" fill="rgb(214,5,46)" fg:x="1214" fg:w="3"/><text x="6.0594%" y="1551.50"></text></g><g><title>`0x7FF7E028FE9B (3 samples, 0.01%)</title><rect x="5.8094%" y="1525" width="0.0144%" height="15" fill="rgb(229,78,17)" fg:x="1214" fg:w="3"/><text x="6.0594%" y="1535.50"></text></g><g><title>`0x7FF7E0285A49 (3 samples, 0.01%)</title><rect x="5.8094%" y="1509" width="0.0144%" height="15" fill="rgb(248,89,10)" fg:x="1214" fg:w="3"/><text x="6.0594%" y="1519.50"></text></g><g><title>`0x7FF7E0239819 (156 samples, 0.75%)</title><rect x="5.0821%" y="1829" width="0.7465%" height="15" fill="rgb(248,54,15)" fg:x="1062" fg:w="156"/><text x="5.3321%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (156 samples, 0.75%)</title><rect x="5.0821%" y="1813" width="0.7465%" height="15" fill="rgb(223,116,6)" fg:x="1062" fg:w="156"/><text x="5.3321%" y="1823.50"></text></g><g><title>`0x7FF7E0337B8A (18 samples, 0.09%)</title><rect x="5.7425%" y="1797" width="0.0861%" height="15" fill="rgb(205,125,38)" fg:x="1200" fg:w="18"/><text x="5.9925%" y="1807.50"></text></g><g><title>`0x7FF7E0270A2E (18 samples, 0.09%)</title><rect x="5.7425%" y="1781" width="0.0861%" height="15" fill="rgb(251,78,38)" fg:x="1200" fg:w="18"/><text x="5.9925%" y="1791.50"></text></g><g><title>`0x7FF7E03291F3 (18 samples, 0.09%)</title><rect x="5.7425%" y="1765" width="0.0861%" height="15" fill="rgb(253,78,28)" fg:x="1200" fg:w="18"/><text x="5.9925%" y="1775.50"></text></g><g><title>`0x7FF7E01E43E2 (18 samples, 0.09%)</title><rect x="5.7425%" y="1749" width="0.0861%" height="15" fill="rgb(209,120,3)" fg:x="1200" fg:w="18"/><text x="5.9925%" y="1759.50"></text></g><g><title>`0x7FF7E00F681D (173 samples, 0.83%)</title><rect x="5.0342%" y="1861" width="0.8279%" height="15" fill="rgb(238,229,9)" fg:x="1052" fg:w="173"/><text x="5.2842%" y="1871.50"></text></g><g><title>`0x7FF7E022ED99 (173 samples, 0.83%)</title><rect x="5.0342%" y="1845" width="0.8279%" height="15" fill="rgb(253,159,18)" fg:x="1052" fg:w="173"/><text x="5.2842%" y="1855.50"></text></g><g><title>`0x7FF7E0239AFD (3 samples, 0.01%)</title><rect x="5.8477%" y="1829" width="0.0144%" height="15" fill="rgb(244,42,34)" fg:x="1222" fg:w="3"/><text x="6.0977%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.8477%" y="1813" width="0.0144%" height="15" fill="rgb(224,8,7)" fg:x="1222" fg:w="3"/><text x="6.0977%" y="1823.50"></text></g><g><title>`0x7FF7E0263EC0 (4 samples, 0.02%)</title><rect x="5.8669%" y="1733" width="0.0191%" height="15" fill="rgb(210,201,45)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1743.50"></text></g><g><title>`0x7FF7E023D454 (4 samples, 0.02%)</title><rect x="5.8669%" y="1717" width="0.0191%" height="15" fill="rgb(252,185,21)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1727.50"></text></g><g><title>`0x7FF7E0268015 (4 samples, 0.02%)</title><rect x="5.8669%" y="1701" width="0.0191%" height="15" fill="rgb(223,131,1)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1711.50"></text></g><g><title>`0x7FF7E0272BFE (4 samples, 0.02%)</title><rect x="5.8669%" y="1685" width="0.0191%" height="15" fill="rgb(245,141,16)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1695.50"></text></g><g><title>`0x7FF7E02685B4 (4 samples, 0.02%)</title><rect x="5.8669%" y="1669" width="0.0191%" height="15" fill="rgb(229,55,45)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1679.50"></text></g><g><title>`0x7FF7E02741EC (4 samples, 0.02%)</title><rect x="5.8669%" y="1653" width="0.0191%" height="15" fill="rgb(208,92,15)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.8669%" y="1637" width="0.0191%" height="15" fill="rgb(234,185,47)" fg:x="1226" fg:w="4"/><text x="6.1169%" y="1647.50"></text></g><g><title>`0x7FF7E0320144 (3 samples, 0.01%)</title><rect x="5.8908%" y="1589" width="0.0144%" height="15" fill="rgb(253,104,50)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1599.50"></text></g><g><title>`0x7FF7E031AB5C (3 samples, 0.01%)</title><rect x="5.8908%" y="1573" width="0.0144%" height="15" fill="rgb(205,70,7)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.8908%" y="1557" width="0.0144%" height="15" fill="rgb(240,178,43)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.8908%" y="1541" width="0.0144%" height="15" fill="rgb(214,112,2)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1551.50"></text></g><g><title>`0x7FF7E030E7F8 (3 samples, 0.01%)</title><rect x="5.8908%" y="1525" width="0.0144%" height="15" fill="rgb(206,46,17)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1535.50"></text></g><g><title>`0x7FF7E030B03F (3 samples, 0.01%)</title><rect x="5.8908%" y="1509" width="0.0144%" height="15" fill="rgb(225,220,16)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1519.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.8908%" y="1493" width="0.0144%" height="15" fill="rgb(238,65,40)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1503.50"></text></g><g><title>`0x7FF7E0270672 (3 samples, 0.01%)</title><rect x="5.8908%" y="1477" width="0.0144%" height="15" fill="rgb(230,151,21)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1487.50"></text></g><g><title>`0x7FF7E0318A86 (3 samples, 0.01%)</title><rect x="5.8908%" y="1461" width="0.0144%" height="15" fill="rgb(218,58,49)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1471.50"></text></g><g><title>`0x7FF7E0309C82 (3 samples, 0.01%)</title><rect x="5.8908%" y="1445" width="0.0144%" height="15" fill="rgb(219,179,14)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1455.50"></text></g><g><title>`0x7FF7E0320144 (3 samples, 0.01%)</title><rect x="5.8908%" y="1429" width="0.0144%" height="15" fill="rgb(223,72,1)" fg:x="1231" fg:w="3"/><text x="6.1408%" y="1439.50"></text></g><g><title>`0x7FF7E02397CF (12 samples, 0.06%)</title><rect x="5.8621%" y="1829" width="0.0574%" height="15" fill="rgb(238,126,10)" fg:x="1225" fg:w="12"/><text x="6.1121%" y="1839.50"></text></g><g><title>`0x7FF7E02CAC46 (12 samples, 0.06%)</title><rect x="5.8621%" y="1813" width="0.0574%" height="15" fill="rgb(224,206,38)" fg:x="1225" fg:w="12"/><text x="6.1121%" y="1823.50"></text></g><g><title>`0x7FF7E01D80A7 (11 samples, 0.05%)</title><rect x="5.8669%" y="1797" width="0.0526%" height="15" fill="rgb(212,201,54)" fg:x="1226" fg:w="11"/><text x="6.1169%" y="1807.50"></text></g><g><title>`0x7FF7E022ED99 (11 samples, 0.05%)</title><rect x="5.8669%" y="1781" width="0.0526%" height="15" fill="rgb(218,154,48)" fg:x="1226" fg:w="11"/><text x="6.1169%" y="1791.50"></text></g><g><title>`0x7FF7E0239C25 (11 samples, 0.05%)</title><rect x="5.8669%" y="1765" width="0.0526%" height="15" fill="rgb(232,93,24)" fg:x="1226" fg:w="11"/><text x="6.1169%" y="1775.50"></text></g><g><title>`0x7FF7E02CB53E (11 samples, 0.05%)</title><rect x="5.8669%" y="1749" width="0.0526%" height="15" fill="rgb(245,30,21)" fg:x="1226" fg:w="11"/><text x="6.1169%" y="1759.50"></text></g><g><title>`0x7FF7E02642E3 (7 samples, 0.03%)</title><rect x="5.8860%" y="1733" width="0.0335%" height="15" fill="rgb(242,148,29)" fg:x="1230" fg:w="7"/><text x="6.1360%" y="1743.50"></text></g><g><title>`0x7FF7E031B261 (7 samples, 0.03%)</title><rect x="5.8860%" y="1717" width="0.0335%" height="15" fill="rgb(244,153,54)" fg:x="1230" fg:w="7"/><text x="6.1360%" y="1727.50"></text></g><g><title>`0x7FF7E02669BC (7 samples, 0.03%)</title><rect x="5.8860%" y="1701" width="0.0335%" height="15" fill="rgb(252,87,22)" fg:x="1230" fg:w="7"/><text x="6.1360%" y="1711.50"></text></g><g><title>`0x7FF7E027097A (7 samples, 0.03%)</title><rect x="5.8860%" y="1685" width="0.0335%" height="15" fill="rgb(210,51,29)" fg:x="1230" fg:w="7"/><text x="6.1360%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="5.8860%" y="1669" width="0.0335%" height="15" fill="rgb(242,136,47)" fg:x="1230" fg:w="7"/><text x="6.1360%" y="1679.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="5.8908%" y="1653" width="0.0287%" height="15" fill="rgb(238,68,4)" fg:x="1231" fg:w="6"/><text x="6.1408%" y="1663.50"></text></g><g><title>`0x7FF7E0270672 (6 samples, 0.03%)</title><rect x="5.8908%" y="1637" width="0.0287%" height="15" fill="rgb(242,161,30)" fg:x="1231" fg:w="6"/><text x="6.1408%" y="1647.50"></text></g><g><title>`0x7FF7E0318A86 (6 samples, 0.03%)</title><rect x="5.8908%" y="1621" width="0.0287%" height="15" fill="rgb(218,58,44)" fg:x="1231" fg:w="6"/><text x="6.1408%" y="1631.50"></text></g><g><title>`0x7FF7E0309C82 (6 samples, 0.03%)</title><rect x="5.8908%" y="1605" width="0.0287%" height="15" fill="rgb(252,125,32)" fg:x="1231" fg:w="6"/><text x="6.1408%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9052%" y="1589" width="0.0144%" height="15" fill="rgb(219,178,0)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1599.50"></text></g><g><title>`0x7FF7E031AB5C (3 samples, 0.01%)</title><rect x="5.9052%" y="1573" width="0.0144%" height="15" fill="rgb(213,152,7)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9052%" y="1557" width="0.0144%" height="15" fill="rgb(249,109,34)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9052%" y="1541" width="0.0144%" height="15" fill="rgb(232,96,21)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1551.50"></text></g><g><title>`0x7FF7E030E7F8 (3 samples, 0.01%)</title><rect x="5.9052%" y="1525" width="0.0144%" height="15" fill="rgb(228,27,39)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1535.50"></text></g><g><title>`0x7FF7E030B03F (3 samples, 0.01%)</title><rect x="5.9052%" y="1509" width="0.0144%" height="15" fill="rgb(211,182,52)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1519.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.9052%" y="1493" width="0.0144%" height="15" fill="rgb(234,178,38)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1503.50"></text></g><g><title>`0x7FF7E0270672 (3 samples, 0.01%)</title><rect x="5.9052%" y="1477" width="0.0144%" height="15" fill="rgb(221,111,3)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1487.50"></text></g><g><title>`0x7FF7E0318A86 (3 samples, 0.01%)</title><rect x="5.9052%" y="1461" width="0.0144%" height="15" fill="rgb(228,175,21)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1471.50"></text></g><g><title>`0x7FF7E0309C82 (3 samples, 0.01%)</title><rect x="5.9052%" y="1445" width="0.0144%" height="15" fill="rgb(228,174,43)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9052%" y="1429" width="0.0144%" height="15" fill="rgb(211,191,0)" fg:x="1234" fg:w="3"/><text x="6.1552%" y="1439.50"></text></g><g><title>`0x7FF7E0239863 (6 samples, 0.03%)</title><rect x="5.9195%" y="1829" width="0.0287%" height="15" fill="rgb(253,117,3)" fg:x="1237" fg:w="6"/><text x="6.1695%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.9195%" y="1813" width="0.0287%" height="15" fill="rgb(241,127,19)" fg:x="1237" fg:w="6"/><text x="6.1695%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9339%" y="1797" width="0.0144%" height="15" fill="rgb(218,103,12)" fg:x="1240" fg:w="3"/><text x="6.1839%" y="1807.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.9339%" y="1781" width="0.0144%" height="15" fill="rgb(236,214,43)" fg:x="1240" fg:w="3"/><text x="6.1839%" y="1791.50"></text></g><g><title>`0x7FF7E0270A2E (3 samples, 0.01%)</title><rect x="5.9339%" y="1765" width="0.0144%" height="15" fill="rgb(244,144,19)" fg:x="1240" fg:w="3"/><text x="6.1839%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9339%" y="1749" width="0.0144%" height="15" fill="rgb(246,188,10)" fg:x="1240" fg:w="3"/><text x="6.1839%" y="1759.50"></text></g><g><title>`0x7FF7E01E43E2 (3 samples, 0.01%)</title><rect x="5.9339%" y="1733" width="0.0144%" height="15" fill="rgb(212,193,33)" fg:x="1240" fg:w="3"/><text x="6.1839%" y="1743.50"></text></g><g><title>`0x7FF7E02C656E (203 samples, 0.97%)</title><rect x="5.0055%" y="1941" width="0.9714%" height="15" fill="rgb(241,51,29)" fg:x="1046" fg:w="203"/><text x="5.2555%" y="1951.50"></text></g><g><title>`0x7FF7E02CC64C (201 samples, 0.96%)</title><rect x="5.0151%" y="1925" width="0.9619%" height="15" fill="rgb(211,58,19)" fg:x="1048" fg:w="201"/><text x="5.2651%" y="1935.50"></text></g><g><title>`0x7FF7E022ED99 (201 samples, 0.96%)</title><rect x="5.0151%" y="1909" width="0.9619%" height="15" fill="rgb(229,111,26)" fg:x="1048" fg:w="201"/><text x="5.2651%" y="1919.50"></text></g><g><title>`0x7FF7E0239785 (201 samples, 0.96%)</title><rect x="5.0151%" y="1893" width="0.9619%" height="15" fill="rgb(213,115,40)" fg:x="1048" fg:w="201"/><text x="5.2651%" y="1903.50"></text></g><g><title>`0x7FF7E02171A8 (201 samples, 0.96%)</title><rect x="5.0151%" y="1877" width="0.9619%" height="15" fill="rgb(209,56,44)" fg:x="1048" fg:w="201"/><text x="5.2651%" y="1887.50"></text></g><g><title>`0x7FF7E01D80A7 (24 samples, 0.11%)</title><rect x="5.8621%" y="1861" width="0.1148%" height="15" fill="rgb(230,108,32)" fg:x="1225" fg:w="24"/><text x="6.1121%" y="1871.50"></text></g><g><title>`0x7FF7E022ED99 (24 samples, 0.11%)</title><rect x="5.8621%" y="1845" width="0.1148%" height="15" fill="rgb(216,165,31)" fg:x="1225" fg:w="24"/><text x="6.1121%" y="1855.50"></text></g><g><title>`0x7FF7E0239A69 (6 samples, 0.03%)</title><rect x="5.9482%" y="1829" width="0.0287%" height="15" fill="rgb(218,122,21)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.9482%" y="1813" width="0.0287%" height="15" fill="rgb(223,224,47)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.9482%" y="1797" width="0.0287%" height="15" fill="rgb(238,102,44)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1807.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="5.9482%" y="1781" width="0.0287%" height="15" fill="rgb(236,46,40)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1791.50"></text></g><g><title>`0x7FF7E0270672 (6 samples, 0.03%)</title><rect x="5.9482%" y="1765" width="0.0287%" height="15" fill="rgb(247,202,50)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="5.9482%" y="1749" width="0.0287%" height="15" fill="rgb(209,99,20)" fg:x="1243" fg:w="6"/><text x="6.1982%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="5.9530%" y="1733" width="0.0239%" height="15" fill="rgb(252,27,34)" fg:x="1244" fg:w="5"/><text x="6.2030%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="5.9530%" y="1717" width="0.0239%" height="15" fill="rgb(215,206,23)" fg:x="1244" fg:w="5"/><text x="6.2030%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="5.9530%" y="1701" width="0.0239%" height="15" fill="rgb(212,135,36)" fg:x="1244" fg:w="5"/><text x="6.2030%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.9578%" y="1685" width="0.0191%" height="15" fill="rgb(240,189,1)" fg:x="1245" fg:w="4"/><text x="6.2078%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="5.9578%" y="1669" width="0.0191%" height="15" fill="rgb(242,56,20)" fg:x="1245" fg:w="4"/><text x="6.2078%" y="1679.50"></text></g><g><title>`0x7FF7E030E7F8 (3 samples, 0.01%)</title><rect x="5.9626%" y="1653" width="0.0144%" height="15" fill="rgb(247,132,33)" fg:x="1246" fg:w="3"/><text x="6.2126%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9626%" y="1637" width="0.0144%" height="15" fill="rgb(208,149,11)" fg:x="1246" fg:w="3"/><text x="6.2126%" y="1647.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.9626%" y="1621" width="0.0144%" height="15" fill="rgb(211,33,11)" fg:x="1246" fg:w="3"/><text x="6.2126%" y="1631.50"></text></g><g><title>`0x7FF7E0270672 (3 samples, 0.01%)</title><rect x="5.9626%" y="1605" width="0.0144%" height="15" fill="rgb(221,29,38)" fg:x="1246" fg:w="3"/><text x="6.2126%" y="1615.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="5.9817%" y="1605" width="0.0144%" height="15" fill="rgb(206,182,49)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1615.50"></text></g><g><title>`0x7FF7E0270672 (3 samples, 0.01%)</title><rect x="5.9817%" y="1589" width="0.0144%" height="15" fill="rgb(216,140,1)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9817%" y="1573" width="0.0144%" height="15" fill="rgb(232,57,40)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9817%" y="1557" width="0.0144%" height="15" fill="rgb(224,186,18)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9817%" y="1541" width="0.0144%" height="15" fill="rgb(215,121,11)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="5.9817%" y="1525" width="0.0144%" height="15" fill="rgb(245,147,10)" fg:x="1250" fg:w="3"/><text x="6.2317%" y="1535.50"></text></g><g><title>`0x7FF7E02A5F92 (4 samples, 0.02%)</title><rect x="5.9961%" y="1525" width="0.0191%" height="15" fill="rgb(238,153,13)" fg:x="1253" fg:w="4"/><text x="6.2461%" y="1535.50"></text></g><g><title>`0x7FF7E02669BC (4 samples, 0.02%)</title><rect x="5.9961%" y="1509" width="0.0191%" height="15" fill="rgb(233,108,0)" fg:x="1253" fg:w="4"/><text x="6.2461%" y="1519.50"></text></g><g><title>`0x7FF7E0270524 (4 samples, 0.02%)</title><rect x="5.9961%" y="1493" width="0.0191%" height="15" fill="rgb(212,157,17)" fg:x="1253" fg:w="4"/><text x="6.2461%" y="1503.50"></text></g><g><title>`0x7FF7E02A5F12 (3 samples, 0.01%)</title><rect x="6.0009%" y="1477" width="0.0144%" height="15" fill="rgb(225,213,38)" fg:x="1254" fg:w="3"/><text x="6.2509%" y="1487.50"></text></g><g><title>`0x7FF7E02A5EB3 (9 samples, 0.04%)</title><rect x="5.9961%" y="1541" width="0.0431%" height="15" fill="rgb(248,16,11)" fg:x="1253" fg:w="9"/><text x="6.2461%" y="1551.50"></text></g><g><title>`0x7FF7E02A5FB1 (5 samples, 0.02%)</title><rect x="6.0152%" y="1525" width="0.0239%" height="15" fill="rgb(241,33,4)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1535.50"></text></g><g><title>`0x7FF7E02A8C6A (5 samples, 0.02%)</title><rect x="6.0152%" y="1509" width="0.0239%" height="15" fill="rgb(222,26,43)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1519.50"></text></g><g><title>`0x7FF7E02A8F0E (5 samples, 0.02%)</title><rect x="6.0152%" y="1493" width="0.0239%" height="15" fill="rgb(243,29,36)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1503.50"></text></g><g><title>`0x7FF7E02B21D7 (5 samples, 0.02%)</title><rect x="6.0152%" y="1477" width="0.0239%" height="15" fill="rgb(241,9,27)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1487.50"></text></g><g><title>`0x7FF7E02A9042 (5 samples, 0.02%)</title><rect x="6.0152%" y="1461" width="0.0239%" height="15" fill="rgb(205,117,26)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1471.50"></text></g><g><title>`0x7FF7E02525E1 (5 samples, 0.02%)</title><rect x="6.0152%" y="1445" width="0.0239%" height="15" fill="rgb(209,80,39)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.0152%" y="1429" width="0.0239%" height="15" fill="rgb(239,155,6)" fg:x="1257" fg:w="5"/><text x="6.2652%" y="1439.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.0248%" y="1413" width="0.0144%" height="15" fill="rgb(212,104,12)" fg:x="1259" fg:w="3"/><text x="6.2748%" y="1423.50"></text></g><g><title>`0x7FF7E02A5F92 (17 samples, 0.08%)</title><rect x="5.9961%" y="1589" width="0.0814%" height="15" fill="rgb(234,204,3)" fg:x="1253" fg:w="17"/><text x="6.2461%" y="1599.50"></text></g><g><title>`0x7FF7E02669BC (17 samples, 0.08%)</title><rect x="5.9961%" y="1573" width="0.0814%" height="15" fill="rgb(251,218,7)" fg:x="1253" fg:w="17"/><text x="6.2461%" y="1583.50"></text></g><g><title>`0x7FF7E0270524 (17 samples, 0.08%)</title><rect x="5.9961%" y="1557" width="0.0814%" height="15" fill="rgb(221,81,32)" fg:x="1253" fg:w="17"/><text x="6.2461%" y="1567.50"></text></g><g><title>`0x7FF7E02A5F12 (8 samples, 0.04%)</title><rect x="6.0391%" y="1541" width="0.0383%" height="15" fill="rgb(214,152,26)" fg:x="1262" fg:w="8"/><text x="6.2891%" y="1551.50"></text></g><g><title>`0x7FF7E02B4583 (7 samples, 0.03%)</title><rect x="6.0439%" y="1525" width="0.0335%" height="15" fill="rgb(223,22,3)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1535.50"></text></g><g><title>`0x7FF7E023D388 (7 samples, 0.03%)</title><rect x="6.0439%" y="1509" width="0.0335%" height="15" fill="rgb(207,174,7)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1519.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.0439%" y="1493" width="0.0335%" height="15" fill="rgb(224,19,52)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1503.50"></text></g><g><title>`0x7FF7E02791D6 (7 samples, 0.03%)</title><rect x="6.0439%" y="1477" width="0.0335%" height="15" fill="rgb(228,24,14)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1487.50"></text></g><g><title>`0x7FF7E027961B (7 samples, 0.03%)</title><rect x="6.0439%" y="1461" width="0.0335%" height="15" fill="rgb(230,153,43)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1471.50"></text></g><g><title>`0x7FF7E029244F (7 samples, 0.03%)</title><rect x="6.0439%" y="1445" width="0.0335%" height="15" fill="rgb(231,106,12)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.0439%" y="1429" width="0.0335%" height="15" fill="rgb(215,92,2)" fg:x="1263" fg:w="7"/><text x="6.2939%" y="1439.50"></text></g><g><title>`0x7FF7E02D773A (4 samples, 0.02%)</title><rect x="6.0918%" y="1333" width="0.0191%" height="15" fill="rgb(249,143,25)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1343.50"></text></g><g><title>`0x7FF7E0265E92 (4 samples, 0.02%)</title><rect x="6.0918%" y="1317" width="0.0191%" height="15" fill="rgb(252,7,35)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1327.50"></text></g><g><title>`0x7FF7E026F274 (4 samples, 0.02%)</title><rect x="6.0918%" y="1301" width="0.0191%" height="15" fill="rgb(216,69,40)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1311.50"></text></g><g><title>`0x7FF7E0274E66 (4 samples, 0.02%)</title><rect x="6.0918%" y="1285" width="0.0191%" height="15" fill="rgb(240,36,33)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1295.50"></text></g><g><title>`0x7FF7E02758B4 (4 samples, 0.02%)</title><rect x="6.0918%" y="1269" width="0.0191%" height="15" fill="rgb(231,128,14)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1279.50"></text></g><g><title>`0x7FF7E0289103 (4 samples, 0.02%)</title><rect x="6.0918%" y="1253" width="0.0191%" height="15" fill="rgb(245,143,14)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1263.50"></text></g><g><title>`0x7FF7E021B5BF (4 samples, 0.02%)</title><rect x="6.0918%" y="1237" width="0.0191%" height="15" fill="rgb(222,130,28)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1247.50"></text></g><g><title>`0x7FF7E021B6E1 (4 samples, 0.02%)</title><rect x="6.0918%" y="1221" width="0.0191%" height="15" fill="rgb(212,10,48)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1231.50"></text></g><g><title>`0x7FF7E027C442 (4 samples, 0.02%)</title><rect x="6.0918%" y="1205" width="0.0191%" height="15" fill="rgb(254,118,45)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1215.50"></text></g><g><title>`0x7FF7E0265E92 (4 samples, 0.02%)</title><rect x="6.0918%" y="1189" width="0.0191%" height="15" fill="rgb(228,6,45)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1199.50"></text></g><g><title>`0x7FF7E026F42E (4 samples, 0.02%)</title><rect x="6.0918%" y="1173" width="0.0191%" height="15" fill="rgb(241,18,35)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1183.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.0918%" y="1157" width="0.0191%" height="15" fill="rgb(227,214,53)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1167.50"></text></g><g><title>`0x7FF7E00870D1 (4 samples, 0.02%)</title><rect x="6.0918%" y="1141" width="0.0191%" height="15" fill="rgb(224,107,51)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1151.50"></text></g><g><title>`0x7FF7E0265E92 (4 samples, 0.02%)</title><rect x="6.0918%" y="1125" width="0.0191%" height="15" fill="rgb(248,60,28)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1135.50"></text></g><g><title>`0x7FF7E026F274 (4 samples, 0.02%)</title><rect x="6.0918%" y="1109" width="0.0191%" height="15" fill="rgb(249,101,23)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1119.50"></text></g><g><title>`0x7FF7E0274E66 (4 samples, 0.02%)</title><rect x="6.0918%" y="1093" width="0.0191%" height="15" fill="rgb(228,51,19)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1103.50"></text></g><g><title>`0x7FF7E02758B4 (4 samples, 0.02%)</title><rect x="6.0918%" y="1077" width="0.0191%" height="15" fill="rgb(213,20,6)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1087.50"></text></g><g><title>`0x7FF7E0289103 (4 samples, 0.02%)</title><rect x="6.0918%" y="1061" width="0.0191%" height="15" fill="rgb(212,124,10)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1071.50"></text></g><g><title>`0x7FF7E021B5BF (4 samples, 0.02%)</title><rect x="6.0918%" y="1045" width="0.0191%" height="15" fill="rgb(248,3,40)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1055.50"></text></g><g><title>`0x7FF7E021B6E1 (4 samples, 0.02%)</title><rect x="6.0918%" y="1029" width="0.0191%" height="15" fill="rgb(223,178,23)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1039.50"></text></g><g><title>`0x7FF7E027C442 (4 samples, 0.02%)</title><rect x="6.0918%" y="1013" width="0.0191%" height="15" fill="rgb(240,132,45)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1023.50"></text></g><g><title>`0x7FF7E0265E92 (4 samples, 0.02%)</title><rect x="6.0918%" y="997" width="0.0191%" height="15" fill="rgb(245,164,36)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="1007.50"></text></g><g><title>`0x7FF7E026F42E (4 samples, 0.02%)</title><rect x="6.0918%" y="981" width="0.0191%" height="15" fill="rgb(231,188,53)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="991.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.0918%" y="965" width="0.0191%" height="15" fill="rgb(237,198,39)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="975.50"></text></g><g><title>`0x7FF7E00870D1 (4 samples, 0.02%)</title><rect x="6.0918%" y="949" width="0.0191%" height="15" fill="rgb(223,120,35)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="959.50"></text></g><g><title>`0x7FF7E0265E92 (4 samples, 0.02%)</title><rect x="6.0918%" y="933" width="0.0191%" height="15" fill="rgb(253,107,49)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="943.50"></text></g><g><title>`0x7FF7E026F274 (4 samples, 0.02%)</title><rect x="6.0918%" y="917" width="0.0191%" height="15" fill="rgb(216,44,31)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="927.50"></text></g><g><title>`0x7FF7E0274E66 (4 samples, 0.02%)</title><rect x="6.0918%" y="901" width="0.0191%" height="15" fill="rgb(253,87,21)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="911.50"></text></g><g><title>`0x7FF7E02758B4 (4 samples, 0.02%)</title><rect x="6.0918%" y="885" width="0.0191%" height="15" fill="rgb(226,18,2)" fg:x="1273" fg:w="4"/><text x="6.3418%" y="895.50"></text></g><g><title>`0x7FF7E02E80DA (7 samples, 0.03%)</title><rect x="6.0918%" y="1381" width="0.0335%" height="15" fill="rgb(216,8,46)" fg:x="1273" fg:w="7"/><text x="6.3418%" y="1391.50"></text></g><g><title>`0x7FF7E0265E92 (7 samples, 0.03%)</title><rect x="6.0918%" y="1365" width="0.0335%" height="15" fill="rgb(226,140,39)" fg:x="1273" fg:w="7"/><text x="6.3418%" y="1375.50"></text></g><g><title>`0x7FF7E026F6A7 (7 samples, 0.03%)</title><rect x="6.0918%" y="1349" width="0.0335%" height="15" fill="rgb(221,194,54)" fg:x="1273" fg:w="7"/><text x="6.3418%" y="1359.50"></text></g><g><title>`0x7FF7E02D784F (3 samples, 0.01%)</title><rect x="6.1109%" y="1333" width="0.0144%" height="15" fill="rgb(213,92,11)" fg:x="1277" fg:w="3"/><text x="6.3609%" y="1343.50"></text></g><g><title>`0x7FF7E02DAF1F (3 samples, 0.01%)</title><rect x="6.1109%" y="1317" width="0.0144%" height="15" fill="rgb(229,162,46)" fg:x="1277" fg:w="3"/><text x="6.3609%" y="1327.50"></text></g><g><title>`0x7FF7E02E2F55 (3 samples, 0.01%)</title><rect x="6.1109%" y="1301" width="0.0144%" height="15" fill="rgb(214,111,36)" fg:x="1277" fg:w="3"/><text x="6.3609%" y="1311.50"></text></g><g><title>`0x7FF7E0251C88 (3 samples, 0.01%)</title><rect x="6.1109%" y="1285" width="0.0144%" height="15" fill="rgb(207,6,21)" fg:x="1277" fg:w="3"/><text x="6.3609%" y="1295.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.1109%" y="1269" width="0.0144%" height="15" fill="rgb(213,127,38)" fg:x="1277" fg:w="3"/><text x="6.3609%" y="1279.50"></text></g><g><title>`0x7FF7E00B40DC (10 samples, 0.05%)</title><rect x="6.0870%" y="1573" width="0.0479%" height="15" fill="rgb(238,118,32)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1583.50"></text></g><g><title>`0x7FF7E02791D6 (10 samples, 0.05%)</title><rect x="6.0870%" y="1557" width="0.0479%" height="15" fill="rgb(240,139,39)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1567.50"></text></g><g><title>`0x7FF7E027961B (10 samples, 0.05%)</title><rect x="6.0870%" y="1541" width="0.0479%" height="15" fill="rgb(235,10,37)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1551.50"></text></g><g><title>`0x7FF7E029244F (10 samples, 0.05%)</title><rect x="6.0870%" y="1525" width="0.0479%" height="15" fill="rgb(249,171,38)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1535.50"></text></g><g><title>`0x7FF7E02DDA05 (10 samples, 0.05%)</title><rect x="6.0870%" y="1509" width="0.0479%" height="15" fill="rgb(242,144,32)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1519.50"></text></g><g><title>`0x7FF7E00870D1 (10 samples, 0.05%)</title><rect x="6.0870%" y="1493" width="0.0479%" height="15" fill="rgb(217,117,21)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1503.50"></text></g><g><title>`0x7FF7E02DDF98 (10 samples, 0.05%)</title><rect x="6.0870%" y="1477" width="0.0479%" height="15" fill="rgb(249,87,1)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1487.50"></text></g><g><title>`0x7FF7E02A5380 (10 samples, 0.05%)</title><rect x="6.0870%" y="1461" width="0.0479%" height="15" fill="rgb(248,196,48)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1471.50"></text></g><g><title>`0x7FF7E02791D6 (10 samples, 0.05%)</title><rect x="6.0870%" y="1445" width="0.0479%" height="15" fill="rgb(251,206,33)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1455.50"></text></g><g><title>`0x7FF7E027961B (10 samples, 0.05%)</title><rect x="6.0870%" y="1429" width="0.0479%" height="15" fill="rgb(232,141,28)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1439.50"></text></g><g><title>`0x7FF7E029244F (10 samples, 0.05%)</title><rect x="6.0870%" y="1413" width="0.0479%" height="15" fill="rgb(209,167,14)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1423.50"></text></g><g><title>`0x7FF7E02DDE80 (10 samples, 0.05%)</title><rect x="6.0870%" y="1397" width="0.0479%" height="15" fill="rgb(225,11,50)" fg:x="1272" fg:w="10"/><text x="6.3370%" y="1407.50"></text></g><g><title>`0x7FF7E0263EC0 (34 samples, 0.16%)</title><rect x="5.9769%" y="1733" width="0.1627%" height="15" fill="rgb(209,50,20)" fg:x="1249" fg:w="34"/><text x="6.2269%" y="1743.50"></text></g><g><title>`0x7FF7E023D454 (34 samples, 0.16%)</title><rect x="5.9769%" y="1717" width="0.1627%" height="15" fill="rgb(212,17,46)" fg:x="1249" fg:w="34"/><text x="6.2269%" y="1727.50"></text></g><g><title>`0x7FF7E0268015 (34 samples, 0.16%)</title><rect x="5.9769%" y="1701" width="0.1627%" height="15" fill="rgb(216,101,39)" fg:x="1249" fg:w="34"/><text x="6.2269%" y="1711.50"></text></g><g><title>`0x7FF7E0272BFE (34 samples, 0.16%)</title><rect x="5.9769%" y="1685" width="0.1627%" height="15" fill="rgb(212,228,48)" fg:x="1249" fg:w="34"/><text x="6.2269%" y="1695.50"></text></g><g><title>`0x7FF7E02685B4 (34 samples, 0.16%)</title><rect x="5.9769%" y="1669" width="0.1627%" height="15" fill="rgb(250,6,50)" fg:x="1249" fg:w="34"/><text x="6.2269%" y="1679.50"></text></g><g><title>`0x7FF7E02741EC (33 samples, 0.16%)</title><rect x="5.9817%" y="1653" width="0.1579%" height="15" fill="rgb(250,160,48)" fg:x="1250" fg:w="33"/><text x="6.2317%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (33 samples, 0.16%)</title><rect x="5.9817%" y="1637" width="0.1579%" height="15" fill="rgb(244,216,33)" fg:x="1250" fg:w="33"/><text x="6.2317%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (33 samples, 0.16%)</title><rect x="5.9817%" y="1621" width="0.1579%" height="15" fill="rgb(207,157,5)" fg:x="1250" fg:w="33"/><text x="6.2317%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (30 samples, 0.14%)</title><rect x="5.9961%" y="1605" width="0.1436%" height="15" fill="rgb(228,199,8)" fg:x="1253" fg:w="30"/><text x="6.2461%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="6.0822%" y="1589" width="0.0574%" height="15" fill="rgb(227,80,20)" fg:x="1271" fg:w="12"/><text x="6.3322%" y="1599.50"></text></g><g><title>`0x7FF7E00BE9B2 (3 samples, 0.01%)</title><rect x="6.1444%" y="1509" width="0.0144%" height="15" fill="rgb(222,9,33)" fg:x="1284" fg:w="3"/><text x="6.3944%" y="1519.50"></text></g><g><title>`0x7FF7E023D32C (3 samples, 0.01%)</title><rect x="6.1444%" y="1493" width="0.0144%" height="15" fill="rgb(239,44,28)" fg:x="1284" fg:w="3"/><text x="6.3944%" y="1503.50"></text></g><g><title>`0x7FF7E02529B5 (3 samples, 0.01%)</title><rect x="6.1588%" y="1381" width="0.0144%" height="15" fill="rgb(249,187,43)" fg:x="1287" fg:w="3"/><text x="6.4088%" y="1391.50"></text></g><g><title>`0x7FF7E02D20C2 (4 samples, 0.02%)</title><rect x="6.1588%" y="1509" width="0.0191%" height="15" fill="rgb(216,141,28)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1519.50"></text></g><g><title>`0x7FF7E02D240F (4 samples, 0.02%)</title><rect x="6.1588%" y="1493" width="0.0191%" height="15" fill="rgb(230,154,53)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1503.50"></text></g><g><title>`0x7FF7E02DAF1F (4 samples, 0.02%)</title><rect x="6.1588%" y="1477" width="0.0191%" height="15" fill="rgb(227,82,4)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1487.50"></text></g><g><title>`0x7FF7E02E2F89 (4 samples, 0.02%)</title><rect x="6.1588%" y="1461" width="0.0191%" height="15" fill="rgb(220,107,16)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1471.50"></text></g><g><title>`0x7FF7E02DB084 (4 samples, 0.02%)</title><rect x="6.1588%" y="1445" width="0.0191%" height="15" fill="rgb(207,187,2)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1455.50"></text></g><g><title>`0x7FF7E028D511 (4 samples, 0.02%)</title><rect x="6.1588%" y="1429" width="0.0191%" height="15" fill="rgb(210,162,52)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1439.50"></text></g><g><title>`0x7FF7E028D5B1 (4 samples, 0.02%)</title><rect x="6.1588%" y="1413" width="0.0191%" height="15" fill="rgb(217,216,49)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1423.50"></text></g><g><title>`0x7FF7E0252451 (4 samples, 0.02%)</title><rect x="6.1588%" y="1397" width="0.0191%" height="15" fill="rgb(218,146,49)" fg:x="1287" fg:w="4"/><text x="6.4088%" y="1407.50"></text></g><g><title>`0x7FF7E02669BC (15 samples, 0.07%)</title><rect x="6.1396%" y="1701" width="0.0718%" height="15" fill="rgb(216,55,40)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1711.50"></text></g><g><title>`0x7FF7E027097A (15 samples, 0.07%)</title><rect x="6.1396%" y="1685" width="0.0718%" height="15" fill="rgb(208,196,21)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.1396%" y="1669" width="0.0718%" height="15" fill="rgb(242,117,42)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1679.50"></text></g><g><title>`0x7FF7E02669BC (15 samples, 0.07%)</title><rect x="6.1396%" y="1653" width="0.0718%" height="15" fill="rgb(210,11,23)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1663.50"></text></g><g><title>`0x7FF7E0270672 (15 samples, 0.07%)</title><rect x="6.1396%" y="1637" width="0.0718%" height="15" fill="rgb(217,110,2)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.1396%" y="1621" width="0.0718%" height="15" fill="rgb(229,77,54)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.1396%" y="1605" width="0.0718%" height="15" fill="rgb(218,53,16)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.1396%" y="1589" width="0.0718%" height="15" fill="rgb(215,38,13)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.1396%" y="1573" width="0.0718%" height="15" fill="rgb(235,42,18)" fg:x="1283" fg:w="15"/><text x="6.3896%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (14 samples, 0.07%)</title><rect x="6.1444%" y="1557" width="0.0670%" height="15" fill="rgb(219,66,54)" fg:x="1284" fg:w="14"/><text x="6.3944%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (14 samples, 0.07%)</title><rect x="6.1444%" y="1541" width="0.0670%" height="15" fill="rgb(222,205,4)" fg:x="1284" fg:w="14"/><text x="6.3944%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (14 samples, 0.07%)</title><rect x="6.1444%" y="1525" width="0.0670%" height="15" fill="rgb(227,213,46)" fg:x="1284" fg:w="14"/><text x="6.3944%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.1779%" y="1509" width="0.0335%" height="15" fill="rgb(250,145,42)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1519.50"></text></g><g><title>`0x7FF7E02669BC (7 samples, 0.03%)</title><rect x="6.1779%" y="1493" width="0.0335%" height="15" fill="rgb(219,15,2)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1503.50"></text></g><g><title>`0x7FF7E0270672 (7 samples, 0.03%)</title><rect x="6.1779%" y="1477" width="0.0335%" height="15" fill="rgb(231,181,52)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1487.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.1779%" y="1461" width="0.0335%" height="15" fill="rgb(235,1,42)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.1779%" y="1445" width="0.0335%" height="15" fill="rgb(249,88,27)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.1779%" y="1429" width="0.0335%" height="15" fill="rgb(235,145,16)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1439.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.1779%" y="1413" width="0.0335%" height="15" fill="rgb(237,114,19)" fg:x="1291" fg:w="7"/><text x="6.4279%" y="1423.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.1827%" y="1397" width="0.0287%" height="15" fill="rgb(238,51,50)" fg:x="1292" fg:w="6"/><text x="6.4327%" y="1407.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.1827%" y="1381" width="0.0287%" height="15" fill="rgb(205,194,25)" fg:x="1292" fg:w="6"/><text x="6.4327%" y="1391.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.1827%" y="1365" width="0.0287%" height="15" fill="rgb(215,203,17)" fg:x="1292" fg:w="6"/><text x="6.4327%" y="1375.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.1923%" y="1349" width="0.0191%" height="15" fill="rgb(233,112,49)" fg:x="1294" fg:w="4"/><text x="6.4423%" y="1359.50"></text></g><g><title>`0x7FF7E02CAC46 (50 samples, 0.24%)</title><rect x="5.9769%" y="1813" width="0.2393%" height="15" fill="rgb(241,130,26)" fg:x="1249" fg:w="50"/><text x="6.2269%" y="1823.50"></text></g><g><title>`0x7FF7E01D80A7 (50 samples, 0.24%)</title><rect x="5.9769%" y="1797" width="0.2393%" height="15" fill="rgb(252,223,19)" fg:x="1249" fg:w="50"/><text x="6.2269%" y="1807.50"></text></g><g><title>`0x7FF7E022ED99 (50 samples, 0.24%)</title><rect x="5.9769%" y="1781" width="0.2393%" height="15" fill="rgb(211,95,25)" fg:x="1249" fg:w="50"/><text x="6.2269%" y="1791.50"></text></g><g><title>`0x7FF7E0239C25 (50 samples, 0.24%)</title><rect x="5.9769%" y="1765" width="0.2393%" height="15" fill="rgb(251,182,27)" fg:x="1249" fg:w="50"/><text x="6.2269%" y="1775.50"></text></g><g><title>`0x7FF7E02CB53E (50 samples, 0.24%)</title><rect x="5.9769%" y="1749" width="0.2393%" height="15" fill="rgb(238,24,4)" fg:x="1249" fg:w="50"/><text x="6.2269%" y="1759.50"></text></g><g><title>`0x7FF7E02642E3 (16 samples, 0.08%)</title><rect x="6.1396%" y="1733" width="0.0766%" height="15" fill="rgb(224,220,25)" fg:x="1283" fg:w="16"/><text x="6.3896%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (16 samples, 0.08%)</title><rect x="6.1396%" y="1717" width="0.0766%" height="15" fill="rgb(239,133,26)" fg:x="1283" fg:w="16"/><text x="6.3896%" y="1727.50"></text></g><g><title>`0x7FF7E0263EC0 (3 samples, 0.01%)</title><rect x="6.2162%" y="1733" width="0.0144%" height="15" fill="rgb(211,94,48)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1743.50"></text></g><g><title>`0x7FF7E023D454 (3 samples, 0.01%)</title><rect x="6.2162%" y="1717" width="0.0144%" height="15" fill="rgb(239,87,6)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1727.50"></text></g><g><title>`0x7FF7E0268015 (3 samples, 0.01%)</title><rect x="6.2162%" y="1701" width="0.0144%" height="15" fill="rgb(227,62,0)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1711.50"></text></g><g><title>`0x7FF7E0272BFE (3 samples, 0.01%)</title><rect x="6.2162%" y="1685" width="0.0144%" height="15" fill="rgb(211,226,4)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1695.50"></text></g><g><title>`0x7FF7E02685B4 (3 samples, 0.01%)</title><rect x="6.2162%" y="1669" width="0.0144%" height="15" fill="rgb(253,38,52)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1679.50"></text></g><g><title>`0x7FF7E02741EC (3 samples, 0.01%)</title><rect x="6.2162%" y="1653" width="0.0144%" height="15" fill="rgb(229,126,40)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.2162%" y="1637" width="0.0144%" height="15" fill="rgb(229,165,44)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.2162%" y="1621" width="0.0144%" height="15" fill="rgb(247,95,47)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1631.50"></text></g><g><title>`0x7FF7E02A5F92 (3 samples, 0.01%)</title><rect x="6.2162%" y="1605" width="0.0144%" height="15" fill="rgb(216,140,30)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1615.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="6.2162%" y="1589" width="0.0144%" height="15" fill="rgb(246,214,8)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1599.50"></text></g><g><title>`0x7FF7E0270524 (3 samples, 0.01%)</title><rect x="6.2162%" y="1573" width="0.0144%" height="15" fill="rgb(227,224,15)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1583.50"></text></g><g><title>`0x7FF7E02A5EB3 (3 samples, 0.01%)</title><rect x="6.2162%" y="1557" width="0.0144%" height="15" fill="rgb(233,175,4)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1567.50"></text></g><g><title>`0x7FF7E02A5F92 (3 samples, 0.01%)</title><rect x="6.2162%" y="1541" width="0.0144%" height="15" fill="rgb(221,66,45)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1551.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="6.2162%" y="1525" width="0.0144%" height="15" fill="rgb(221,178,18)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1535.50"></text></g><g><title>`0x7FF7E0270672 (3 samples, 0.01%)</title><rect x="6.2162%" y="1509" width="0.0144%" height="15" fill="rgb(213,81,29)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1519.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.2162%" y="1493" width="0.0144%" height="15" fill="rgb(220,89,49)" fg:x="1299" fg:w="3"/><text x="6.4662%" y="1503.50"></text></g><g><title>`0x7FF7E02642E3 (3 samples, 0.01%)</title><rect x="6.2306%" y="1733" width="0.0144%" height="15" fill="rgb(227,60,33)" fg:x="1302" fg:w="3"/><text x="6.4806%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.2306%" y="1717" width="0.0144%" height="15" fill="rgb(205,113,12)" fg:x="1302" fg:w="3"/><text x="6.4806%" y="1727.50"></text></g><g><title>`0x7FF7E02397CF (57 samples, 0.27%)</title><rect x="5.9769%" y="1829" width="0.2728%" height="15" fill="rgb(211,32,1)" fg:x="1249" fg:w="57"/><text x="6.2269%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.2162%" y="1813" width="0.0335%" height="15" fill="rgb(246,2,12)" fg:x="1299" fg:w="7"/><text x="6.4662%" y="1823.50"></text></g><g><title>`0x7FF7E01D80A7 (7 samples, 0.03%)</title><rect x="6.2162%" y="1797" width="0.0335%" height="15" fill="rgb(243,37,27)" fg:x="1299" fg:w="7"/><text x="6.4662%" y="1807.50"></text></g><g><title>`0x7FF7E022ED99 (7 samples, 0.03%)</title><rect x="6.2162%" y="1781" width="0.0335%" height="15" fill="rgb(248,211,31)" fg:x="1299" fg:w="7"/><text x="6.4662%" y="1791.50"></text></g><g><title>`0x7FF7E0239C25 (7 samples, 0.03%)</title><rect x="6.2162%" y="1765" width="0.0335%" height="15" fill="rgb(242,146,47)" fg:x="1299" fg:w="7"/><text x="6.4662%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.2162%" y="1749" width="0.0335%" height="15" fill="rgb(206,70,20)" fg:x="1299" fg:w="7"/><text x="6.4662%" y="1759.50"></text></g><g><title>`0x7FF7E022ED99 (6 samples, 0.03%)</title><rect x="6.2497%" y="1797" width="0.0287%" height="15" fill="rgb(215,10,51)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1807.50"></text></g><g><title>`0x7FF7E0239785 (6 samples, 0.03%)</title><rect x="6.2497%" y="1781" width="0.0287%" height="15" fill="rgb(243,178,53)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1791.50"></text></g><g><title>`0x7FF7E021724D (6 samples, 0.03%)</title><rect x="6.2497%" y="1765" width="0.0287%" height="15" fill="rgb(233,221,20)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1775.50"></text></g><g><title>`0x7FF7E01D80A7 (6 samples, 0.03%)</title><rect x="6.2497%" y="1749" width="0.0287%" height="15" fill="rgb(218,95,35)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1759.50"></text></g><g><title>`0x7FF7E022ED99 (6 samples, 0.03%)</title><rect x="6.2497%" y="1733" width="0.0287%" height="15" fill="rgb(229,13,5)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1743.50"></text></g><g><title>`0x7FF7E0239B91 (6 samples, 0.03%)</title><rect x="6.2497%" y="1717" width="0.0287%" height="15" fill="rgb(252,164,30)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.2497%" y="1701" width="0.0287%" height="15" fill="rgb(232,68,36)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1711.50"></text></g><g><title>`0x7FF7E02669BC (6 samples, 0.03%)</title><rect x="6.2497%" y="1685" width="0.0287%" height="15" fill="rgb(219,59,54)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1695.50"></text></g><g><title>`0x7FF7E02704E6 (6 samples, 0.03%)</title><rect x="6.2497%" y="1669" width="0.0287%" height="15" fill="rgb(250,92,33)" fg:x="1306" fg:w="6"/><text x="6.4997%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.2593%" y="1653" width="0.0191%" height="15" fill="rgb(229,162,54)" fg:x="1308" fg:w="4"/><text x="6.5093%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.2641%" y="1637" width="0.0144%" height="15" fill="rgb(244,114,52)" fg:x="1309" fg:w="3"/><text x="6.5141%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::Process (3 samples, 0.01%)</title><rect x="6.2976%" y="1381" width="0.0144%" height="15" fill="rgb(212,211,43)" fg:x="1316" fg:w="3"/><text x="6.5476%" y="1391.50"></text></g><g><title>`0x7FF7E02AFA34 (5 samples, 0.02%)</title><rect x="6.2928%" y="1621" width="0.0239%" height="15" fill="rgb(226,147,8)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1631.50"></text></g><g><title>deno.exe`Builtins_FastNewClosure (5 samples, 0.02%)</title><rect x="6.2928%" y="1605" width="0.0239%" height="15" fill="rgb(226,23,13)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1615.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (5 samples, 0.02%)</title><rect x="6.2928%" y="1589" width="0.0239%" height="15" fill="rgb(240,63,4)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1599.50"></text></g><g><title>deno.exe`v8::internal::Runtime_AllocateInYoungGeneration (5 samples, 0.02%)</title><rect x="6.2928%" y="1573" width="0.0239%" height="15" fill="rgb(221,1,32)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1583.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewFillerObject (5 samples, 0.02%)</title><rect x="6.2928%" y="1557" width="0.0239%" height="15" fill="rgb(242,117,10)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1567.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (5 samples, 0.02%)</title><rect x="6.2928%" y="1541" width="0.0239%" height="15" fill="rgb(249,172,44)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1551.50"></text></g><g><title>deno.exe`v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (5 samples, 0.02%)</title><rect x="6.2928%" y="1525" width="0.0239%" height="15" fill="rgb(244,46,45)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1535.50"></text></g><g><title>deno.exe`v8::internal::Heap::CollectGarbage (5 samples, 0.02%)</title><rect x="6.2928%" y="1509" width="0.0239%" height="15" fill="rgb(206,43,17)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1519.50"></text></g><g><title>deno.exe`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.02%)</title><rect x="6.2928%" y="1493" width="0.0239%" height="15" fill="rgb(239,218,39)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1503.50"></text></g><g><title>deno.exe`v8::internal::Heap::Scavenge (5 samples, 0.02%)</title><rect x="6.2928%" y="1477" width="0.0239%" height="15" fill="rgb(208,169,54)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1487.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::CollectGarbage (5 samples, 0.02%)</title><rect x="6.2928%" y="1461" width="0.0239%" height="15" fill="rgb(247,25,42)" fg:x="1315" fg:w="5"/><text x="6.5428%" y="1471.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobHandle::Join (4 samples, 0.02%)</title><rect x="6.2976%" y="1445" width="0.0191%" height="15" fill="rgb(226,23,31)" fg:x="1316" fg:w="4"/><text x="6.5476%" y="1455.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobState::Join (4 samples, 0.02%)</title><rect x="6.2976%" y="1429" width="0.0191%" height="15" fill="rgb(247,16,28)" fg:x="1316" fg:w="4"/><text x="6.5476%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (4 samples, 0.02%)</title><rect x="6.2976%" y="1413" width="0.0191%" height="15" fill="rgb(231,147,38)" fg:x="1316" fg:w="4"/><text x="6.5476%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (4 samples, 0.02%)</title><rect x="6.2976%" y="1397" width="0.0191%" height="15" fill="rgb(253,81,48)" fg:x="1316" fg:w="4"/><text x="6.5476%" y="1407.50"></text></g><g><title>`0x7FF7E02AE1E0 (6 samples, 0.03%)</title><rect x="6.2928%" y="1637" width="0.0287%" height="15" fill="rgb(249,222,43)" fg:x="1315" fg:w="6"/><text x="6.5428%" y="1647.50"></text></g><g><title>`0x7FF7E01E56D1 (10 samples, 0.05%)</title><rect x="6.2784%" y="1717" width="0.0479%" height="15" fill="rgb(221,3,27)" fg:x="1312" fg:w="10"/><text x="6.5284%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="6.2784%" y="1701" width="0.0479%" height="15" fill="rgb(228,180,5)" fg:x="1312" fg:w="10"/><text x="6.5284%" y="1711.50"></text></g><g><title>`0x7FF7E02CA2CD (10 samples, 0.05%)</title><rect x="6.2784%" y="1685" width="0.0479%" height="15" fill="rgb(227,131,42)" fg:x="1312" fg:w="10"/><text x="6.5284%" y="1695.50"></text></g><g><title>`0x7FF7E02669BC (10 samples, 0.05%)</title><rect x="6.2784%" y="1669" width="0.0479%" height="15" fill="rgb(212,3,39)" fg:x="1312" fg:w="10"/><text x="6.5284%" y="1679.50"></text></g><g><title>`0x7FF7E0270043 (10 samples, 0.05%)</title><rect x="6.2784%" y="1653" width="0.0479%" height="15" fill="rgb(226,45,5)" fg:x="1312" fg:w="10"/><text x="6.5284%" y="1663.50"></text></g><g><title>`0x7FF7E0239863 (17 samples, 0.08%)</title><rect x="6.2497%" y="1829" width="0.0814%" height="15" fill="rgb(215,167,45)" fg:x="1306" fg:w="17"/><text x="6.4997%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (17 samples, 0.08%)</title><rect x="6.2497%" y="1813" width="0.0814%" height="15" fill="rgb(250,218,53)" fg:x="1306" fg:w="17"/><text x="6.4997%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.2784%" y="1797" width="0.0526%" height="15" fill="rgb(207,140,0)" fg:x="1312" fg:w="11"/><text x="6.5284%" y="1807.50"></text></g><g><title>`0x7FF7E02669BC (11 samples, 0.05%)</title><rect x="6.2784%" y="1781" width="0.0526%" height="15" fill="rgb(238,133,51)" fg:x="1312" fg:w="11"/><text x="6.5284%" y="1791.50"></text></g><g><title>`0x7FF7E0270A2E (11 samples, 0.05%)</title><rect x="6.2784%" y="1765" width="0.0526%" height="15" fill="rgb(218,203,53)" fg:x="1312" fg:w="11"/><text x="6.5284%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.2784%" y="1749" width="0.0526%" height="15" fill="rgb(226,184,25)" fg:x="1312" fg:w="11"/><text x="6.5284%" y="1759.50"></text></g><g><title>`0x7FF7E01E43E2 (11 samples, 0.05%)</title><rect x="6.2784%" y="1733" width="0.0526%" height="15" fill="rgb(231,121,21)" fg:x="1312" fg:w="11"/><text x="6.5284%" y="1743.50"></text></g><g><title>`0x7FF7E022ED99 (75 samples, 0.36%)</title><rect x="5.9769%" y="1909" width="0.3589%" height="15" fill="rgb(251,14,34)" fg:x="1249" fg:w="75"/><text x="6.2269%" y="1919.50"></text></g><g><title>`0x7FF7E0239785 (75 samples, 0.36%)</title><rect x="5.9769%" y="1893" width="0.3589%" height="15" fill="rgb(249,193,11)" fg:x="1249" fg:w="75"/><text x="6.2269%" y="1903.50"></text></g><g><title>`0x7FF7E02171A8 (75 samples, 0.36%)</title><rect x="5.9769%" y="1877" width="0.3589%" height="15" fill="rgb(220,172,37)" fg:x="1249" fg:w="75"/><text x="6.2269%" y="1887.50"></text></g><g><title>`0x7FF7E01D80A7 (75 samples, 0.36%)</title><rect x="5.9769%" y="1861" width="0.3589%" height="15" fill="rgb(231,229,43)" fg:x="1249" fg:w="75"/><text x="6.2269%" y="1871.50"></text></g><g><title>`0x7FF7E022ED99 (75 samples, 0.36%)</title><rect x="5.9769%" y="1845" width="0.3589%" height="15" fill="rgb(250,161,5)" fg:x="1249" fg:w="75"/><text x="6.2269%" y="1855.50"></text></g><g><title>`0x7FF7E0238C90 (286 samples, 1.37%)</title><rect x="5.0007%" y="1957" width="1.3686%" height="15" fill="rgb(218,225,18)" fg:x="1045" fg:w="286"/><text x="5.2507%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (82 samples, 0.39%)</title><rect x="5.9769%" y="1941" width="0.3924%" height="15" fill="rgb(245,45,42)" fg:x="1249" fg:w="82"/><text x="6.2269%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (82 samples, 0.39%)</title><rect x="5.9769%" y="1925" width="0.3924%" height="15" fill="rgb(211,115,1)" fg:x="1249" fg:w="82"/><text x="6.2269%" y="1935.50"></text></g><g><title>`0x7FF7E022ED99 (5 samples, 0.02%)</title><rect x="6.3741%" y="1813" width="0.0239%" height="15" fill="rgb(248,133,52)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1823.50"></text></g><g><title>`0x7FF7E0239785 (5 samples, 0.02%)</title><rect x="6.3741%" y="1797" width="0.0239%" height="15" fill="rgb(238,100,21)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1807.50"></text></g><g><title>`0x7FF7E021724D (5 samples, 0.02%)</title><rect x="6.3741%" y="1781" width="0.0239%" height="15" fill="rgb(247,144,11)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1791.50"></text></g><g><title>`0x7FF7E01D80A7 (5 samples, 0.02%)</title><rect x="6.3741%" y="1765" width="0.0239%" height="15" fill="rgb(206,164,16)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1775.50"></text></g><g><title>`0x7FF7E022ED99 (5 samples, 0.02%)</title><rect x="6.3741%" y="1749" width="0.0239%" height="15" fill="rgb(222,34,3)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1759.50"></text></g><g><title>`0x7FF7E0239819 (5 samples, 0.02%)</title><rect x="6.3741%" y="1733" width="0.0239%" height="15" fill="rgb(248,82,4)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.3741%" y="1717" width="0.0239%" height="15" fill="rgb(228,81,46)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1727.50"></text></g><g><title>`0x7FF7E02669BC (5 samples, 0.02%)</title><rect x="6.3741%" y="1701" width="0.0239%" height="15" fill="rgb(227,67,47)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1711.50"></text></g><g><title>`0x7FF7E0270672 (5 samples, 0.02%)</title><rect x="6.3741%" y="1685" width="0.0239%" height="15" fill="rgb(215,93,53)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.3741%" y="1669" width="0.0239%" height="15" fill="rgb(248,194,39)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.3741%" y="1653" width="0.0239%" height="15" fill="rgb(215,5,19)" fg:x="1332" fg:w="5"/><text x="6.6241%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.3837%" y="1637" width="0.0144%" height="15" fill="rgb(226,215,51)" fg:x="1334" fg:w="3"/><text x="6.6337%" y="1647.50"></text></g><g><title>`0x7FF7E02A5EB3 (5 samples, 0.02%)</title><rect x="6.4076%" y="1653" width="0.0239%" height="15" fill="rgb(225,56,26)" fg:x="1339" fg:w="5"/><text x="6.6576%" y="1663.50"></text></g><g><title>`0x7FF7E02A5F92 (5 samples, 0.02%)</title><rect x="6.4076%" y="1637" width="0.0239%" height="15" fill="rgb(222,75,29)" fg:x="1339" fg:w="5"/><text x="6.6576%" y="1647.50"></text></g><g><title>`0x7FF7E02669BC (5 samples, 0.02%)</title><rect x="6.4076%" y="1621" width="0.0239%" height="15" fill="rgb(236,139,6)" fg:x="1339" fg:w="5"/><text x="6.6576%" y="1631.50"></text></g><g><title>`0x7FF7E02700B9 (5 samples, 0.02%)</title><rect x="6.4076%" y="1605" width="0.0239%" height="15" fill="rgb(223,137,36)" fg:x="1339" fg:w="5"/><text x="6.6576%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.4076%" y="1589" width="0.0239%" height="15" fill="rgb(226,99,2)" fg:x="1339" fg:w="5"/><text x="6.6576%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.4124%" y="1573" width="0.0191%" height="15" fill="rgb(206,133,23)" fg:x="1340" fg:w="4"/><text x="6.6624%" y="1583.50"></text></g><g><title>`0x7FF7E01E56D1 (9 samples, 0.04%)</title><rect x="6.4076%" y="1733" width="0.0431%" height="15" fill="rgb(243,173,15)" fg:x="1339" fg:w="9"/><text x="6.6576%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.4076%" y="1717" width="0.0431%" height="15" fill="rgb(228,69,28)" fg:x="1339" fg:w="9"/><text x="6.6576%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.4076%" y="1701" width="0.0431%" height="15" fill="rgb(212,51,22)" fg:x="1339" fg:w="9"/><text x="6.6576%" y="1711.50"></text></g><g><title>`0x7FF7E02669BC (9 samples, 0.04%)</title><rect x="6.4076%" y="1685" width="0.0431%" height="15" fill="rgb(227,113,0)" fg:x="1339" fg:w="9"/><text x="6.6576%" y="1695.50"></text></g><g><title>`0x7FF7E0270524 (9 samples, 0.04%)</title><rect x="6.4076%" y="1669" width="0.0431%" height="15" fill="rgb(252,84,27)" fg:x="1339" fg:w="9"/><text x="6.6576%" y="1679.50"></text></g><g><title>`0x7FF7E02A5F12 (4 samples, 0.02%)</title><rect x="6.4315%" y="1653" width="0.0191%" height="15" fill="rgb(223,145,39)" fg:x="1344" fg:w="4"/><text x="6.6815%" y="1663.50"></text></g><g><title>`0x7FF7E02669BC (17 samples, 0.08%)</title><rect x="6.4028%" y="1797" width="0.0814%" height="15" fill="rgb(239,219,30)" fg:x="1338" fg:w="17"/><text x="6.6528%" y="1807.50"></text></g><g><title>`0x7FF7E0270A2E (17 samples, 0.08%)</title><rect x="6.4028%" y="1781" width="0.0814%" height="15" fill="rgb(224,196,39)" fg:x="1338" fg:w="17"/><text x="6.6528%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (17 samples, 0.08%)</title><rect x="6.4028%" y="1765" width="0.0814%" height="15" fill="rgb(205,35,43)" fg:x="1338" fg:w="17"/><text x="6.6528%" y="1775.50"></text></g><g><title>`0x7FF7E01E43E2 (17 samples, 0.08%)</title><rect x="6.4028%" y="1749" width="0.0814%" height="15" fill="rgb(228,201,21)" fg:x="1338" fg:w="17"/><text x="6.6528%" y="1759.50"></text></g><g><title>`0x7FF7E01EB5B3 (4 samples, 0.02%)</title><rect x="6.4650%" y="1733" width="0.0191%" height="15" fill="rgb(237,118,16)" fg:x="1351" fg:w="4"/><text x="6.7150%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.4650%" y="1717" width="0.0191%" height="15" fill="rgb(241,17,19)" fg:x="1351" fg:w="4"/><text x="6.7150%" y="1727.50"></text></g><g><title>`0x7FF7E0239863 (24 samples, 0.11%)</title><rect x="6.3741%" y="1845" width="0.1148%" height="15" fill="rgb(214,10,25)" fg:x="1332" fg:w="24"/><text x="6.6241%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (24 samples, 0.11%)</title><rect x="6.3741%" y="1829" width="0.1148%" height="15" fill="rgb(238,37,29)" fg:x="1332" fg:w="24"/><text x="6.6241%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (18 samples, 0.09%)</title><rect x="6.4028%" y="1813" width="0.0861%" height="15" fill="rgb(253,83,25)" fg:x="1338" fg:w="18"/><text x="6.6528%" y="1823.50"></text></g><g><title>`0x7FF7E022ED99 (26 samples, 0.12%)</title><rect x="6.3693%" y="1925" width="0.1244%" height="15" fill="rgb(234,192,12)" fg:x="1331" fg:w="26"/><text x="6.6193%" y="1935.50"></text></g><g><title>`0x7FF7E0239785 (26 samples, 0.12%)</title><rect x="6.3693%" y="1909" width="0.1244%" height="15" fill="rgb(241,216,45)" fg:x="1331" fg:w="26"/><text x="6.6193%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (26 samples, 0.12%)</title><rect x="6.3693%" y="1893" width="0.1244%" height="15" fill="rgb(242,22,33)" fg:x="1331" fg:w="26"/><text x="6.6193%" y="1903.50"></text></g><g><title>`0x7FF7E01D80A7 (26 samples, 0.12%)</title><rect x="6.3693%" y="1877" width="0.1244%" height="15" fill="rgb(231,105,49)" fg:x="1331" fg:w="26"/><text x="6.6193%" y="1887.50"></text></g><g><title>`0x7FF7E022ED99 (26 samples, 0.12%)</title><rect x="6.3693%" y="1861" width="0.1244%" height="15" fill="rgb(218,204,15)" fg:x="1331" fg:w="26"/><text x="6.6193%" y="1871.50"></text></g><g><title>`0x7FF7E022ED99 (315 samples, 1.51%)</title><rect x="4.9959%" y="1973" width="1.5074%" height="15" fill="rgb(235,138,41)" fg:x="1044" fg:w="315"/><text x="5.2459%" y="1983.50"></text></g><g><title>`0x7FF7E0238D24 (28 samples, 0.13%)</title><rect x="6.3693%" y="1957" width="0.1340%" height="15" fill="rgb(246,0,9)" fg:x="1331" fg:w="28"/><text x="6.6193%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.3693%" y="1941" width="0.1340%" height="15" fill="rgb(210,74,4)" fg:x="1331" fg:w="28"/><text x="6.6193%" y="1951.50"></text></g><g><title>`0x7FF7E01D80A7 (6 samples, 0.03%)</title><rect x="6.5129%" y="1797" width="0.0287%" height="15" fill="rgb(250,60,41)" fg:x="1361" fg:w="6"/><text x="6.7629%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.5129%" y="1781" width="0.0287%" height="15" fill="rgb(220,115,12)" fg:x="1361" fg:w="6"/><text x="6.7629%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.5129%" y="1765" width="0.0287%" height="15" fill="rgb(237,100,13)" fg:x="1361" fg:w="6"/><text x="6.7629%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.5129%" y="1749" width="0.0287%" height="15" fill="rgb(213,55,26)" fg:x="1361" fg:w="6"/><text x="6.7629%" y="1759.50"></text></g><g><title>`0x7FF7E01D80A7 (6 samples, 0.03%)</title><rect x="6.5129%" y="1733" width="0.0287%" height="15" fill="rgb(216,17,4)" fg:x="1361" fg:w="6"/><text x="6.7629%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1717" width="0.0239%" height="15" fill="rgb(220,153,47)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1701" width="0.0239%" height="15" fill="rgb(215,131,9)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1685" width="0.0239%" height="15" fill="rgb(233,46,42)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1669" width="0.0239%" height="15" fill="rgb(226,86,7)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1653" width="0.0239%" height="15" fill="rgb(239,226,21)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1637" width="0.0239%" height="15" fill="rgb(244,137,22)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1621" width="0.0239%" height="15" fill="rgb(211,139,35)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1605" width="0.0239%" height="15" fill="rgb(214,62,50)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1615.50"></text></g><g><title>`0x7FF7E01D80A7 (5 samples, 0.02%)</title><rect x="6.5177%" y="1589" width="0.0239%" height="15" fill="rgb(212,113,44)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1573" width="0.0239%" height="15" fill="rgb(226,150,43)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1557" width="0.0239%" height="15" fill="rgb(250,71,37)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1541" width="0.0239%" height="15" fill="rgb(219,76,19)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1525" width="0.0239%" height="15" fill="rgb(250,39,11)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1509" width="0.0239%" height="15" fill="rgb(230,64,31)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1519.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1493" width="0.0239%" height="15" fill="rgb(208,222,23)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1503.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5177%" y="1477" width="0.0239%" height="15" fill="rgb(227,125,18)" fg:x="1362" fg:w="5"/><text x="6.7677%" y="1487.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.5225%" y="1461" width="0.0191%" height="15" fill="rgb(234,210,9)" fg:x="1363" fg:w="4"/><text x="6.7725%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.5225%" y="1445" width="0.0191%" height="15" fill="rgb(217,127,24)" fg:x="1363" fg:w="4"/><text x="6.7725%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.5464%" y="1413" width="0.0144%" height="15" fill="rgb(239,141,48)" fg:x="1368" fg:w="3"/><text x="6.7964%" y="1423.50"></text></g><g><title>`0x7FF7E02524B5 (5 samples, 0.02%)</title><rect x="6.5416%" y="1669" width="0.0239%" height="15" fill="rgb(227,109,8)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5416%" y="1653" width="0.0239%" height="15" fill="rgb(235,184,23)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1663.50"></text></g><g><title>`0x7FF7E0252DBD (5 samples, 0.02%)</title><rect x="6.5416%" y="1637" width="0.0239%" height="15" fill="rgb(227,226,48)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1647.50"></text></g><g><title>`0x7FF7E0253D3C (5 samples, 0.02%)</title><rect x="6.5416%" y="1621" width="0.0239%" height="15" fill="rgb(206,150,11)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5416%" y="1605" width="0.0239%" height="15" fill="rgb(254,2,33)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1615.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5416%" y="1589" width="0.0239%" height="15" fill="rgb(243,160,20)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.5416%" y="1573" width="0.0239%" height="15" fill="rgb(218,208,30)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1583.50"></text></g><g><title>`0x7FF7E0265E92 (5 samples, 0.02%)</title><rect x="6.5416%" y="1557" width="0.0239%" height="15" fill="rgb(224,120,49)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1567.50"></text></g><g><title>`0x7FF7E026F3F3 (5 samples, 0.02%)</title><rect x="6.5416%" y="1541" width="0.0239%" height="15" fill="rgb(246,12,2)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1551.50"></text></g><g><title>`0x7FF7E026600D (5 samples, 0.02%)</title><rect x="6.5416%" y="1525" width="0.0239%" height="15" fill="rgb(236,117,3)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1535.50"></text></g><g><title>`0x7FF7E00870D1 (5 samples, 0.02%)</title><rect x="6.5416%" y="1509" width="0.0239%" height="15" fill="rgb(216,128,52)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1519.50"></text></g><g><title>`0x7FF7E0265E92 (5 samples, 0.02%)</title><rect x="6.5416%" y="1493" width="0.0239%" height="15" fill="rgb(246,145,19)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1503.50"></text></g><g><title>`0x7FF7E026F274 (5 samples, 0.02%)</title><rect x="6.5416%" y="1477" width="0.0239%" height="15" fill="rgb(222,11,46)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1487.50"></text></g><g><title>`0x7FF7E0274E66 (5 samples, 0.02%)</title><rect x="6.5416%" y="1461" width="0.0239%" height="15" fill="rgb(245,82,36)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1471.50"></text></g><g><title>`0x7FF7E0275841 (5 samples, 0.02%)</title><rect x="6.5416%" y="1445" width="0.0239%" height="15" fill="rgb(250,73,51)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1455.50"></text></g><g><title>`0x7FF7E027E0B3 (5 samples, 0.02%)</title><rect x="6.5416%" y="1429" width="0.0239%" height="15" fill="rgb(221,189,23)" fg:x="1367" fg:w="5"/><text x="6.7916%" y="1439.50"></text></g><g><title>`0x7FF7E025AC55 (3 samples, 0.01%)</title><rect x="6.5990%" y="1285" width="0.0144%" height="15" fill="rgb(210,33,7)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1295.50"></text></g><g><title>`0x7FF7E0253106 (3 samples, 0.01%)</title><rect x="6.5990%" y="1269" width="0.0144%" height="15" fill="rgb(210,107,22)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1279.50"></text></g><g><title>`0x7FF7E0253315 (3 samples, 0.01%)</title><rect x="6.5990%" y="1253" width="0.0144%" height="15" fill="rgb(222,116,37)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1263.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.5990%" y="1237" width="0.0144%" height="15" fill="rgb(254,17,48)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1247.50"></text></g><g><title>`0x7FF7E02669BC (3 samples, 0.01%)</title><rect x="6.5990%" y="1221" width="0.0144%" height="15" fill="rgb(224,36,32)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1231.50"></text></g><g><title>`0x7FF7E0270524 (3 samples, 0.01%)</title><rect x="6.5990%" y="1205" width="0.0144%" height="15" fill="rgb(232,90,46)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1215.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.5990%" y="1189" width="0.0144%" height="15" fill="rgb(241,66,40)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1199.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.5990%" y="1173" width="0.0144%" height="15" fill="rgb(249,184,29)" fg:x="1379" fg:w="3"/><text x="6.8490%" y="1183.50"></text></g><g><title>`0x7FF7E0252BC4 (4 samples, 0.02%)</title><rect x="6.5990%" y="1317" width="0.0191%" height="15" fill="rgb(231,181,1)" fg:x="1379" fg:w="4"/><text x="6.8490%" y="1327.50"></text></g><g><title>`0x7FF7E0252E84 (4 samples, 0.02%)</title><rect x="6.5990%" y="1301" width="0.0191%" height="15" fill="rgb(224,94,2)" fg:x="1379" fg:w="4"/><text x="6.8490%" y="1311.50"></text></g><g><title>`0x7FF7E028761A (5 samples, 0.02%)</title><rect x="6.5990%" y="1381" width="0.0239%" height="15" fill="rgb(229,170,15)" fg:x="1379" fg:w="5"/><text x="6.8490%" y="1391.50"></text></g><g><title>`0x7FF7E027A6B4 (5 samples, 0.02%)</title><rect x="6.5990%" y="1365" width="0.0239%" height="15" fill="rgb(240,127,35)" fg:x="1379" fg:w="5"/><text x="6.8490%" y="1375.50"></text></g><g><title>`0x7FF7E0252451 (5 samples, 0.02%)</title><rect x="6.5990%" y="1349" width="0.0239%" height="15" fill="rgb(248,196,34)" fg:x="1379" fg:w="5"/><text x="6.8490%" y="1359.50"></text></g><g><title>`0x7FF7E02528E0 (5 samples, 0.02%)</title><rect x="6.5990%" y="1333" width="0.0239%" height="15" fill="rgb(236,137,7)" fg:x="1379" fg:w="5"/><text x="6.8490%" y="1343.50"></text></g><g><title>`0x7FF7E0231229 (20 samples, 0.10%)</title><rect x="6.5416%" y="1781" width="0.0957%" height="15" fill="rgb(235,127,16)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1765" width="0.0957%" height="15" fill="rgb(250,192,54)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1749" width="0.0957%" height="15" fill="rgb(218,98,20)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1733" width="0.0957%" height="15" fill="rgb(230,176,47)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1717" width="0.0957%" height="15" fill="rgb(244,2,33)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1701" width="0.0957%" height="15" fill="rgb(231,100,17)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.5416%" y="1685" width="0.0957%" height="15" fill="rgb(245,23,12)" fg:x="1367" fg:w="20"/><text x="6.7916%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.5655%" y="1669" width="0.0718%" height="15" fill="rgb(249,55,22)" fg:x="1372" fg:w="15"/><text x="6.8155%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.5655%" y="1653" width="0.0718%" height="15" fill="rgb(207,134,9)" fg:x="1372" fg:w="15"/><text x="6.8155%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (14 samples, 0.07%)</title><rect x="6.5703%" y="1637" width="0.0670%" height="15" fill="rgb(218,134,0)" fg:x="1373" fg:w="14"/><text x="6.8203%" y="1647.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="6.5751%" y="1621" width="0.0622%" height="15" fill="rgb(213,212,33)" fg:x="1374" fg:w="13"/><text x="6.8251%" y="1631.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="6.5799%" y="1605" width="0.0574%" height="15" fill="rgb(252,106,18)" fg:x="1375" fg:w="12"/><text x="6.8299%" y="1615.50"></text></g><g><title>`0x7FF7E0287FBF (11 samples, 0.05%)</title><rect x="6.5847%" y="1589" width="0.0526%" height="15" fill="rgb(208,126,42)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.5847%" y="1573" width="0.0526%" height="15" fill="rgb(246,175,29)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1583.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.5847%" y="1557" width="0.0526%" height="15" fill="rgb(215,13,50)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.5847%" y="1541" width="0.0526%" height="15" fill="rgb(216,172,15)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1551.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.5847%" y="1525" width="0.0526%" height="15" fill="rgb(212,103,13)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (11 samples, 0.05%)</title><rect x="6.5847%" y="1509" width="0.0526%" height="15" fill="rgb(231,171,36)" fg:x="1376" fg:w="11"/><text x="6.8347%" y="1519.50"></text></g><g><title>`0x7FF7E0287FBF (10 samples, 0.05%)</title><rect x="6.5895%" y="1493" width="0.0479%" height="15" fill="rgb(250,123,20)" fg:x="1377" fg:w="10"/><text x="6.8395%" y="1503.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="6.5895%" y="1477" width="0.0479%" height="15" fill="rgb(212,53,50)" fg:x="1377" fg:w="10"/><text x="6.8395%" y="1487.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="6.5895%" y="1461" width="0.0479%" height="15" fill="rgb(243,54,12)" fg:x="1377" fg:w="10"/><text x="6.8395%" y="1471.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="6.5895%" y="1445" width="0.0479%" height="15" fill="rgb(234,101,34)" fg:x="1377" fg:w="10"/><text x="6.8395%" y="1455.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.5942%" y="1429" width="0.0431%" height="15" fill="rgb(254,67,22)" fg:x="1378" fg:w="9"/><text x="6.8442%" y="1439.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="6.5990%" y="1413" width="0.0383%" height="15" fill="rgb(250,35,47)" fg:x="1379" fg:w="8"/><text x="6.8490%" y="1423.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="6.5990%" y="1397" width="0.0383%" height="15" fill="rgb(226,126,38)" fg:x="1379" fg:w="8"/><text x="6.8490%" y="1407.50"></text></g><g><title>`0x7FF7E01D80A7 (345 samples, 1.65%)</title><rect x="4.9959%" y="1989" width="1.6510%" height="15" fill="rgb(216,138,53)" fg:x="1044" fg:w="345"/><text x="5.2459%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (30 samples, 0.14%)</title><rect x="6.5033%" y="1973" width="0.1436%" height="15" fill="rgb(246,199,43)" fg:x="1359" fg:w="30"/><text x="6.7533%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (30 samples, 0.14%)</title><rect x="6.5033%" y="1957" width="0.1436%" height="15" fill="rgb(232,125,11)" fg:x="1359" fg:w="30"/><text x="6.7533%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (30 samples, 0.14%)</title><rect x="6.5033%" y="1941" width="0.1436%" height="15" fill="rgb(218,219,45)" fg:x="1359" fg:w="30"/><text x="6.7533%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (30 samples, 0.14%)</title><rect x="6.5033%" y="1925" width="0.1436%" height="15" fill="rgb(216,102,54)" fg:x="1359" fg:w="30"/><text x="6.7533%" y="1935.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1909" width="0.1340%" height="15" fill="rgb(250,228,7)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1893" width="0.1340%" height="15" fill="rgb(226,125,25)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1903.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1877" width="0.1340%" height="15" fill="rgb(224,165,27)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1887.50"></text></g><g><title>`0x7FF7E01D80A7 (28 samples, 0.13%)</title><rect x="6.5129%" y="1861" width="0.1340%" height="15" fill="rgb(233,86,3)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1871.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1845" width="0.1340%" height="15" fill="rgb(228,116,20)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1829" width="0.1340%" height="15" fill="rgb(209,192,17)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="6.5129%" y="1813" width="0.1340%" height="15" fill="rgb(224,88,34)" fg:x="1361" fg:w="28"/><text x="6.7629%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="6.5416%" y="1797" width="0.1053%" height="15" fill="rgb(233,38,6)" fg:x="1367" fg:w="22"/><text x="6.7916%" y="1807.50"></text></g><g><title>`0x7FF7E01D80A7 (355 samples, 1.70%)</title><rect x="4.9768%" y="2053" width="1.6988%" height="15" fill="rgb(212,59,30)" fg:x="1040" fg:w="355"/><text x="5.2268%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (351 samples, 1.68%)</title><rect x="4.9959%" y="2037" width="1.6797%" height="15" fill="rgb(213,80,3)" fg:x="1044" fg:w="351"/><text x="5.2459%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (351 samples, 1.68%)</title><rect x="4.9959%" y="2021" width="1.6797%" height="15" fill="rgb(251,178,7)" fg:x="1044" fg:w="351"/><text x="5.2459%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (351 samples, 1.68%)</title><rect x="4.9959%" y="2005" width="1.6797%" height="15" fill="rgb(213,154,26)" fg:x="1044" fg:w="351"/><text x="5.2459%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.6469%" y="1989" width="0.0287%" height="15" fill="rgb(238,165,49)" fg:x="1389" fg:w="6"/><text x="6.8969%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.6517%" y="1973" width="0.0239%" height="15" fill="rgb(248,91,46)" fg:x="1390" fg:w="5"/><text x="6.9017%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.6612%" y="1957" width="0.0144%" height="15" fill="rgb(244,21,52)" fg:x="1392" fg:w="3"/><text x="6.9112%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.6612%" y="1941" width="0.0144%" height="15" fill="rgb(247,122,20)" fg:x="1392" fg:w="3"/><text x="6.9112%" y="1951.50"></text></g><g><title>`0x7FF7E01B7D67 (3 samples, 0.01%)</title><rect x="6.6852%" y="1845" width="0.0144%" height="15" fill="rgb(218,27,9)" fg:x="1397" fg:w="3"/><text x="6.9352%" y="1855.50"></text></g><g><title>`0x7FF7E01B7EA5 (3 samples, 0.01%)</title><rect x="6.6852%" y="1829" width="0.0144%" height="15" fill="rgb(246,7,6)" fg:x="1397" fg:w="3"/><text x="6.9352%" y="1839.50"></text></g><g><title>`0x7FF7E0087E92 (3 samples, 0.01%)</title><rect x="6.6852%" y="1813" width="0.0144%" height="15" fill="rgb(227,135,54)" fg:x="1397" fg:w="3"/><text x="6.9352%" y="1823.50"></text></g><g><title>`0x7FF7E01B7F79 (3 samples, 0.01%)</title><rect x="6.6852%" y="1797" width="0.0144%" height="15" fill="rgb(247,14,11)" fg:x="1397" fg:w="3"/><text x="6.9352%" y="1807.50"></text></g><g><title>`0x7FF7E01B6055 (3 samples, 0.01%)</title><rect x="6.7043%" y="1781" width="0.0144%" height="15" fill="rgb(206,149,34)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1791.50"></text></g><g><title>`0x7FF7E01C79F2 (3 samples, 0.01%)</title><rect x="6.7043%" y="1765" width="0.0144%" height="15" fill="rgb(227,228,4)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1775.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="6.7043%" y="1749" width="0.0144%" height="15" fill="rgb(238,218,28)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1759.50"></text></g><g><title>`0x7FF7E01BA7F9 (3 samples, 0.01%)</title><rect x="6.7043%" y="1733" width="0.0144%" height="15" fill="rgb(252,86,40)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1743.50"></text></g><g><title>`0x7FF7E01CDBE2 (3 samples, 0.01%)</title><rect x="6.7043%" y="1717" width="0.0144%" height="15" fill="rgb(251,225,11)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1727.50"></text></g><g><title>`0x7FF7E01D2C09 (3 samples, 0.01%)</title><rect x="6.7043%" y="1701" width="0.0144%" height="15" fill="rgb(206,46,49)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1711.50"></text></g><g><title>`0x7FF7E01CCA70 (3 samples, 0.01%)</title><rect x="6.7043%" y="1685" width="0.0144%" height="15" fill="rgb(245,128,24)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1695.50"></text></g><g><title>`0x7FF7E01B6023 (3 samples, 0.01%)</title><rect x="6.7043%" y="1669" width="0.0144%" height="15" fill="rgb(219,177,34)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1679.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="6.7043%" y="1653" width="0.0144%" height="15" fill="rgb(218,60,48)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1663.50"></text></g><g><title>`0x7FF7E01BA7F9 (3 samples, 0.01%)</title><rect x="6.7043%" y="1637" width="0.0144%" height="15" fill="rgb(221,11,5)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1647.50"></text></g><g><title>`0x7FF7E01CDBE2 (3 samples, 0.01%)</title><rect x="6.7043%" y="1621" width="0.0144%" height="15" fill="rgb(220,148,13)" fg:x="1401" fg:w="3"/><text x="6.9543%" y="1631.50"></text></g><g><title>`0x7FF7E01BA7F9 (4 samples, 0.02%)</title><rect x="6.7330%" y="1733" width="0.0191%" height="15" fill="rgb(210,16,3)" fg:x="1407" fg:w="4"/><text x="6.9830%" y="1743.50"></text></g><g><title>`0x7FF7E01CDBE2 (4 samples, 0.02%)</title><rect x="6.7330%" y="1717" width="0.0191%" height="15" fill="rgb(236,80,2)" fg:x="1407" fg:w="4"/><text x="6.9830%" y="1727.50"></text></g><g><title>`0x7FF7E01D4206 (3 samples, 0.01%)</title><rect x="6.7378%" y="1701" width="0.0144%" height="15" fill="rgb(239,129,19)" fg:x="1408" fg:w="3"/><text x="6.9878%" y="1711.50"></text></g><g><title>`0x7FF7E00D3D5D (3 samples, 0.01%)</title><rect x="6.7378%" y="1685" width="0.0144%" height="15" fill="rgb(220,106,35)" fg:x="1408" fg:w="3"/><text x="6.9878%" y="1695.50"></text></g><g><title>`0x7FF7E01B7EA5 (3 samples, 0.01%)</title><rect x="6.7378%" y="1669" width="0.0144%" height="15" fill="rgb(252,139,45)" fg:x="1408" fg:w="3"/><text x="6.9878%" y="1679.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="6.7378%" y="1653" width="0.0144%" height="15" fill="rgb(229,8,36)" fg:x="1408" fg:w="3"/><text x="6.9878%" y="1663.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="6.7378%" y="1637" width="0.0144%" height="15" fill="rgb(230,126,33)" fg:x="1408" fg:w="3"/><text x="6.9878%" y="1647.50"></text></g><g><title>`0x7FF7E0087E92 (18 samples, 0.09%)</title><rect x="6.6995%" y="1813" width="0.0861%" height="15" fill="rgb(239,140,21)" fg:x="1400" fg:w="18"/><text x="6.9495%" y="1823.50"></text></g><g><title>`0x7FF7E01BD3F9 (18 samples, 0.09%)</title><rect x="6.6995%" y="1797" width="0.0861%" height="15" fill="rgb(254,104,9)" fg:x="1400" fg:w="18"/><text x="6.9495%" y="1807.50"></text></g><g><title>`0x7FF7E01D866F (13 samples, 0.06%)</title><rect x="6.7235%" y="1781" width="0.0622%" height="15" fill="rgb(239,52,14)" fg:x="1405" fg:w="13"/><text x="6.9735%" y="1791.50"></text></g><g><title>`0x7FF7E01C79F2 (11 samples, 0.05%)</title><rect x="6.7330%" y="1765" width="0.0526%" height="15" fill="rgb(208,227,44)" fg:x="1407" fg:w="11"/><text x="6.9830%" y="1775.50"></text></g><g><title>`0x7FF7E01C88B3 (11 samples, 0.05%)</title><rect x="6.7330%" y="1749" width="0.0526%" height="15" fill="rgb(246,18,19)" fg:x="1407" fg:w="11"/><text x="6.9830%" y="1759.50"></text></g><g><title>`0x7FF7E01D8E80 (7 samples, 0.03%)</title><rect x="6.7522%" y="1733" width="0.0335%" height="15" fill="rgb(235,228,25)" fg:x="1411" fg:w="7"/><text x="7.0022%" y="1743.50"></text></g><g><title>`0x7FF7E01D4206 (6 samples, 0.03%)</title><rect x="6.7570%" y="1717" width="0.0287%" height="15" fill="rgb(240,156,20)" fg:x="1412" fg:w="6"/><text x="7.0070%" y="1727.50"></text></g><g><title>`0x7FF7E01DA184 (4 samples, 0.02%)</title><rect x="6.7665%" y="1701" width="0.0191%" height="15" fill="rgb(224,8,20)" fg:x="1414" fg:w="4"/><text x="7.0165%" y="1711.50"></text></g><g><title>`0x7FF7E01DF39A (3 samples, 0.01%)</title><rect x="6.7713%" y="1685" width="0.0144%" height="15" fill="rgb(214,12,52)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1695.50"></text></g><g><title>`0x7FF7E01D80A7 (3 samples, 0.01%)</title><rect x="6.7713%" y="1669" width="0.0144%" height="15" fill="rgb(211,220,47)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1679.50"></text></g><g><title>`0x7FF7E01D866F (3 samples, 0.01%)</title><rect x="6.7713%" y="1653" width="0.0144%" height="15" fill="rgb(250,173,5)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1663.50"></text></g><g><title>`0x7FF7E01C717A (3 samples, 0.01%)</title><rect x="6.7713%" y="1637" width="0.0144%" height="15" fill="rgb(250,125,52)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1647.50"></text></g><g><title>`0x7FF7E01C88B3 (3 samples, 0.01%)</title><rect x="6.7713%" y="1621" width="0.0144%" height="15" fill="rgb(209,133,18)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1631.50"></text></g><g><title>`0x7FF7E01D8E80 (3 samples, 0.01%)</title><rect x="6.7713%" y="1605" width="0.0144%" height="15" fill="rgb(216,173,22)" fg:x="1415" fg:w="3"/><text x="7.0213%" y="1615.50"></text></g><g><title>`0x7FF7E01C79F2 (22 samples, 0.11%)</title><rect x="6.6852%" y="1989" width="0.1053%" height="15" fill="rgb(205,3,22)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1999.50"></text></g><g><title>`0x7FF7E01C88B3 (22 samples, 0.11%)</title><rect x="6.6852%" y="1973" width="0.1053%" height="15" fill="rgb(248,22,20)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1983.50"></text></g><g><title>`0x7FF7E01BA7F9 (22 samples, 0.11%)</title><rect x="6.6852%" y="1957" width="0.1053%" height="15" fill="rgb(233,6,29)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1967.50"></text></g><g><title>`0x7FF7E01CDBE2 (22 samples, 0.11%)</title><rect x="6.6852%" y="1941" width="0.1053%" height="15" fill="rgb(240,22,54)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="6.6852%" y="1925" width="0.1053%" height="15" fill="rgb(231,133,32)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1935.50"></text></g><g><title>`0x7FF7E01CCA70 (22 samples, 0.11%)</title><rect x="6.6852%" y="1909" width="0.1053%" height="15" fill="rgb(248,193,4)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1919.50"></text></g><g><title>`0x7FF7E01B6055 (22 samples, 0.11%)</title><rect x="6.6852%" y="1893" width="0.1053%" height="15" fill="rgb(211,178,46)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1903.50"></text></g><g><title>`0x7FF7E01C717A (22 samples, 0.11%)</title><rect x="6.6852%" y="1877" width="0.1053%" height="15" fill="rgb(224,5,42)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1887.50"></text></g><g><title>`0x7FF7E01C87E9 (22 samples, 0.11%)</title><rect x="6.6852%" y="1861" width="0.1053%" height="15" fill="rgb(239,176,25)" fg:x="1397" fg:w="22"/><text x="6.9352%" y="1871.50"></text></g><g><title>`0x7FF7E01B7DB7 (19 samples, 0.09%)</title><rect x="6.6995%" y="1845" width="0.0909%" height="15" fill="rgb(245,187,50)" fg:x="1400" fg:w="19"/><text x="6.9495%" y="1855.50"></text></g><g><title>`0x7FF7E01B7EA5 (19 samples, 0.09%)</title><rect x="6.6995%" y="1829" width="0.0909%" height="15" fill="rgb(248,24,15)" fg:x="1400" fg:w="19"/><text x="6.9495%" y="1839.50"></text></g><g><title>`0x7FF7E00D373E (5 samples, 0.02%)</title><rect x="6.8096%" y="1909" width="0.0239%" height="15" fill="rgb(205,166,13)" fg:x="1423" fg:w="5"/><text x="7.0596%" y="1919.50"></text></g><g><title>`0x7FF7E00D37F7 (3 samples, 0.01%)</title><rect x="6.8335%" y="1909" width="0.0144%" height="15" fill="rgb(208,114,23)" fg:x="1428" fg:w="3"/><text x="7.0835%" y="1919.50"></text></g><g><title>`0x7FF7E00BB6F9 (12 samples, 0.06%)</title><rect x="6.8000%" y="1925" width="0.0574%" height="15" fill="rgb(239,127,18)" fg:x="1421" fg:w="12"/><text x="7.0500%" y="1935.50"></text></g><g><title>`0x7FF7E0087E92 (38 samples, 0.18%)</title><rect x="6.6804%" y="2037" width="0.1818%" height="15" fill="rgb(219,154,28)" fg:x="1396" fg:w="38"/><text x="6.9304%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (37 samples, 0.18%)</title><rect x="6.6852%" y="2021" width="0.1771%" height="15" fill="rgb(225,157,23)" fg:x="1397" fg:w="37"/><text x="6.9352%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (37 samples, 0.18%)</title><rect x="6.6852%" y="2005" width="0.1771%" height="15" fill="rgb(219,8,6)" fg:x="1397" fg:w="37"/><text x="6.9352%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.7904%" y="1989" width="0.0718%" height="15" fill="rgb(212,47,6)" fg:x="1419" fg:w="15"/><text x="7.0404%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.7904%" y="1973" width="0.0718%" height="15" fill="rgb(224,190,4)" fg:x="1419" fg:w="15"/><text x="7.0404%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (15 samples, 0.07%)</title><rect x="6.7904%" y="1957" width="0.0718%" height="15" fill="rgb(239,183,29)" fg:x="1419" fg:w="15"/><text x="7.0404%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="6.8000%" y="1941" width="0.0622%" height="15" fill="rgb(213,57,7)" fg:x="1421" fg:w="13"/><text x="7.0500%" y="1951.50"></text></g><g><title>`0x7FF7E00A455B (3 samples, 0.01%)</title><rect x="6.8814%" y="1589" width="0.0144%" height="15" fill="rgb(216,148,1)" fg:x="1438" fg:w="3"/><text x="7.1314%" y="1599.50"></text></g><g><title>`0x7FF7E0094AC3 (3 samples, 0.01%)</title><rect x="6.8814%" y="1573" width="0.0144%" height="15" fill="rgb(236,182,29)" fg:x="1438" fg:w="3"/><text x="7.1314%" y="1583.50"></text></g><g><title>`0x7FF7E0095C3E (3 samples, 0.01%)</title><rect x="6.8814%" y="1557" width="0.0144%" height="15" fill="rgb(244,120,48)" fg:x="1438" fg:w="3"/><text x="7.1314%" y="1567.50"></text></g><g><title>`0x7FF7E00B5593 (7 samples, 0.03%)</title><rect x="6.8766%" y="1813" width="0.0335%" height="15" fill="rgb(206,71,34)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1823.50"></text></g><g><title>`0x7FF7E00968E5 (7 samples, 0.03%)</title><rect x="6.8766%" y="1797" width="0.0335%" height="15" fill="rgb(242,32,6)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1807.50"></text></g><g><title>`0x7FF7E00942E2 (7 samples, 0.03%)</title><rect x="6.8766%" y="1781" width="0.0335%" height="15" fill="rgb(241,35,3)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1791.50"></text></g><g><title>`0x7FF7E00B54A5 (7 samples, 0.03%)</title><rect x="6.8766%" y="1765" width="0.0335%" height="15" fill="rgb(222,62,19)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1775.50"></text></g><g><title>`0x7FF7E00A7BB6 (7 samples, 0.03%)</title><rect x="6.8766%" y="1749" width="0.0335%" height="15" fill="rgb(223,110,41)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1759.50"></text></g><g><title>`0x7FF7E00B53ED (7 samples, 0.03%)</title><rect x="6.8766%" y="1733" width="0.0335%" height="15" fill="rgb(208,224,4)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1743.50"></text></g><g><title>`0x7FF7E00A80F3 (7 samples, 0.03%)</title><rect x="6.8766%" y="1717" width="0.0335%" height="15" fill="rgb(241,137,19)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1727.50"></text></g><g><title>`0x7FF7E00A86FF (7 samples, 0.03%)</title><rect x="6.8766%" y="1701" width="0.0335%" height="15" fill="rgb(244,24,17)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.8766%" y="1685" width="0.0335%" height="15" fill="rgb(245,178,49)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.8766%" y="1669" width="0.0335%" height="15" fill="rgb(219,160,38)" fg:x="1437" fg:w="7"/><text x="7.1266%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.8814%" y="1653" width="0.0287%" height="15" fill="rgb(228,137,14)" fg:x="1438" fg:w="6"/><text x="7.1314%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.8814%" y="1637" width="0.0287%" height="15" fill="rgb(237,134,11)" fg:x="1438" fg:w="6"/><text x="7.1314%" y="1647.50"></text></g><g><title>`0x7FF7E0092CAB (6 samples, 0.03%)</title><rect x="6.8814%" y="1621" width="0.0287%" height="15" fill="rgb(211,126,44)" fg:x="1438" fg:w="6"/><text x="7.1314%" y="1631.50"></text></g><g><title>`0x7FF7E00942E2 (6 samples, 0.03%)</title><rect x="6.8814%" y="1605" width="0.0287%" height="15" fill="rgb(226,171,33)" fg:x="1438" fg:w="6"/><text x="7.1314%" y="1615.50"></text></g><g><title>`0x7FF7E00A4598 (3 samples, 0.01%)</title><rect x="6.8957%" y="1589" width="0.0144%" height="15" fill="rgb(253,99,13)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1599.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.8957%" y="1573" width="0.0144%" height="15" fill="rgb(244,48,7)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1583.50"></text></g><g><title>`0x7FF7E00A7A8C (3 samples, 0.01%)</title><rect x="6.8957%" y="1557" width="0.0144%" height="15" fill="rgb(244,217,54)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1567.50"></text></g><g><title>`0x7FF7E00A7BB6 (3 samples, 0.01%)</title><rect x="6.8957%" y="1541" width="0.0144%" height="15" fill="rgb(224,15,18)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1551.50"></text></g><g><title>`0x7FF7E00A7CEB (3 samples, 0.01%)</title><rect x="6.8957%" y="1525" width="0.0144%" height="15" fill="rgb(244,99,12)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1535.50"></text></g><g><title>`0x7FF7E00A81AD (3 samples, 0.01%)</title><rect x="6.8957%" y="1509" width="0.0144%" height="15" fill="rgb(233,226,8)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1519.50"></text></g><g><title>`0x7FF7E00A8BEC (3 samples, 0.01%)</title><rect x="6.8957%" y="1493" width="0.0144%" height="15" fill="rgb(229,211,3)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1503.50"></text></g><g><title>`0x7FF7E00A8D26 (3 samples, 0.01%)</title><rect x="6.8957%" y="1477" width="0.0144%" height="15" fill="rgb(216,140,21)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1487.50"></text></g><g><title>`0x7FF7E00A9685 (3 samples, 0.01%)</title><rect x="6.8957%" y="1461" width="0.0144%" height="15" fill="rgb(234,122,30)" fg:x="1441" fg:w="3"/><text x="7.1457%" y="1471.50"></text></g><g><title>`0x7FF7E00A7A8C (11 samples, 0.05%)</title><rect x="6.8718%" y="1957" width="0.0526%" height="15" fill="rgb(236,25,46)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1967.50"></text></g><g><title>`0x7FF7E00A7BB6 (11 samples, 0.05%)</title><rect x="6.8718%" y="1941" width="0.0526%" height="15" fill="rgb(217,52,54)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1951.50"></text></g><g><title>`0x7FF7E00A7CEB (11 samples, 0.05%)</title><rect x="6.8718%" y="1925" width="0.0526%" height="15" fill="rgb(222,29,26)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1935.50"></text></g><g><title>`0x7FF7E00A81AD (11 samples, 0.05%)</title><rect x="6.8718%" y="1909" width="0.0526%" height="15" fill="rgb(216,177,29)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1919.50"></text></g><g><title>`0x7FF7E00A8BEC (11 samples, 0.05%)</title><rect x="6.8718%" y="1893" width="0.0526%" height="15" fill="rgb(247,136,51)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1903.50"></text></g><g><title>`0x7FF7E00A8D26 (11 samples, 0.05%)</title><rect x="6.8718%" y="1877" width="0.0526%" height="15" fill="rgb(231,47,47)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1887.50"></text></g><g><title>`0x7FF7E00A9685 (11 samples, 0.05%)</title><rect x="6.8718%" y="1861" width="0.0526%" height="15" fill="rgb(211,192,36)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1871.50"></text></g><g><title>`0x7FF7E00A9D17 (11 samples, 0.05%)</title><rect x="6.8718%" y="1845" width="0.0526%" height="15" fill="rgb(229,156,32)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1855.50"></text></g><g><title>`0x7FF7E00ADBDA (11 samples, 0.05%)</title><rect x="6.8718%" y="1829" width="0.0526%" height="15" fill="rgb(248,213,20)" fg:x="1436" fg:w="11"/><text x="7.1218%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1813" width="0.0144%" height="15" fill="rgb(217,64,7)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1823.50"></text></g><g><title>`0x7FF7E00968E5 (3 samples, 0.01%)</title><rect x="6.9101%" y="1797" width="0.0144%" height="15" fill="rgb(232,142,8)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1807.50"></text></g><g><title>`0x7FF7E00942E2 (3 samples, 0.01%)</title><rect x="6.9101%" y="1781" width="0.0144%" height="15" fill="rgb(224,92,44)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1765" width="0.0144%" height="15" fill="rgb(214,169,17)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1775.50"></text></g><g><title>`0x7FF7E00A7BB6 (3 samples, 0.01%)</title><rect x="6.9101%" y="1749" width="0.0144%" height="15" fill="rgb(210,59,37)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1733" width="0.0144%" height="15" fill="rgb(214,116,48)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1743.50"></text></g><g><title>`0x7FF7E00A80F3 (3 samples, 0.01%)</title><rect x="6.9101%" y="1717" width="0.0144%" height="15" fill="rgb(244,191,6)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1727.50"></text></g><g><title>`0x7FF7E00A86FF (3 samples, 0.01%)</title><rect x="6.9101%" y="1701" width="0.0144%" height="15" fill="rgb(241,50,52)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1685" width="0.0144%" height="15" fill="rgb(236,75,39)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1669" width="0.0144%" height="15" fill="rgb(236,99,0)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1653" width="0.0144%" height="15" fill="rgb(207,202,15)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="6.9101%" y="1637" width="0.0144%" height="15" fill="rgb(233,207,14)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1647.50"></text></g><g><title>`0x7FF7E0092CAB (3 samples, 0.01%)</title><rect x="6.9101%" y="1621" width="0.0144%" height="15" fill="rgb(226,27,51)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1631.50"></text></g><g><title>`0x7FF7E00942E2 (3 samples, 0.01%)</title><rect x="6.9101%" y="1605" width="0.0144%" height="15" fill="rgb(206,104,42)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1615.50"></text></g><g><title>`0x7FF7E00A455B (3 samples, 0.01%)</title><rect x="6.9101%" y="1589" width="0.0144%" height="15" fill="rgb(212,225,4)" fg:x="1444" fg:w="3"/><text x="7.1601%" y="1599.50"></text></g><g><title>`0x7FF7E00968E5 (7 samples, 0.03%)</title><rect x="6.9292%" y="1797" width="0.0335%" height="15" fill="rgb(233,96,42)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1807.50"></text></g><g><title>`0x7FF7E00942E2 (7 samples, 0.03%)</title><rect x="6.9292%" y="1781" width="0.0335%" height="15" fill="rgb(229,21,32)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1765" width="0.0335%" height="15" fill="rgb(226,216,24)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1749" width="0.0335%" height="15" fill="rgb(221,163,17)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1733" width="0.0335%" height="15" fill="rgb(216,216,42)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1743.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1717" width="0.0335%" height="15" fill="rgb(240,118,7)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1727.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1701" width="0.0335%" height="15" fill="rgb(221,67,37)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1711.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (7 samples, 0.03%)</title><rect x="6.9292%" y="1685" width="0.0335%" height="15" fill="rgb(241,32,44)" fg:x="1448" fg:w="7"/><text x="7.1792%" y="1695.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.9340%" y="1669" width="0.0287%" height="15" fill="rgb(235,204,43)" fg:x="1449" fg:w="6"/><text x="7.1840%" y="1679.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.9388%" y="1653" width="0.0239%" height="15" fill="rgb(213,116,10)" fg:x="1450" fg:w="5"/><text x="7.1888%" y="1663.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.9436%" y="1637" width="0.0191%" height="15" fill="rgb(239,15,48)" fg:x="1451" fg:w="4"/><text x="7.1936%" y="1647.50"></text></g><g><title>`0x7FF7E0092CAB (4 samples, 0.02%)</title><rect x="6.9436%" y="1621" width="0.0191%" height="15" fill="rgb(207,123,36)" fg:x="1451" fg:w="4"/><text x="7.1936%" y="1631.50"></text></g><g><title>`0x7FF7E00942E2 (4 samples, 0.02%)</title><rect x="6.9436%" y="1605" width="0.0191%" height="15" fill="rgb(209,103,30)" fg:x="1451" fg:w="4"/><text x="7.1936%" y="1615.50"></text></g><g><title>`0x7FF7E0092CAB (20 samples, 0.10%)</title><rect x="6.8718%" y="2021" width="0.0957%" height="15" fill="rgb(238,100,19)" fg:x="1436" fg:w="20"/><text x="7.1218%" y="2031.50"></text></g><g><title>`0x7FF7E00942E2 (20 samples, 0.10%)</title><rect x="6.8718%" y="2005" width="0.0957%" height="15" fill="rgb(244,30,14)" fg:x="1436" fg:w="20"/><text x="7.1218%" y="2015.50"></text></g><g><title>`0x7FF7E00A4598 (20 samples, 0.10%)</title><rect x="6.8718%" y="1989" width="0.0957%" height="15" fill="rgb(249,174,6)" fg:x="1436" fg:w="20"/><text x="7.1218%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="6.8718%" y="1973" width="0.0957%" height="15" fill="rgb(235,213,41)" fg:x="1436" fg:w="20"/><text x="7.1218%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1957" width="0.0431%" height="15" fill="rgb(213,118,6)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1941" width="0.0431%" height="15" fill="rgb(235,44,51)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1925" width="0.0431%" height="15" fill="rgb(217,9,53)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1935.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1909" width="0.0431%" height="15" fill="rgb(237,172,34)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1893" width="0.0431%" height="15" fill="rgb(206,206,11)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1903.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1877" width="0.0431%" height="15" fill="rgb(214,149,29)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1887.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1861" width="0.0431%" height="15" fill="rgb(208,123,3)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1871.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1845" width="0.0431%" height="15" fill="rgb(229,126,4)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1829" width="0.0431%" height="15" fill="rgb(222,92,36)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (9 samples, 0.04%)</title><rect x="6.9244%" y="1813" width="0.0431%" height="15" fill="rgb(216,39,41)" fg:x="1447" fg:w="9"/><text x="7.1744%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="6.9914%" y="1957" width="0.0239%" height="15" fill="rgb(253,127,28)" fg:x="1461" fg:w="5"/><text x="7.2414%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="6.9962%" y="1941" width="0.0191%" height="15" fill="rgb(249,152,51)" fg:x="1462" fg:w="4"/><text x="7.2462%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0010%" y="1925" width="0.0144%" height="15" fill="rgb(209,123,42)" fg:x="1463" fg:w="3"/><text x="7.2510%" y="1935.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0010%" y="1909" width="0.0144%" height="15" fill="rgb(241,118,22)" fg:x="1463" fg:w="3"/><text x="7.2510%" y="1919.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0010%" y="1893" width="0.0144%" height="15" fill="rgb(208,25,7)" fg:x="1463" fg:w="3"/><text x="7.2510%" y="1903.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0010%" y="1877" width="0.0144%" height="15" fill="rgb(243,144,39)" fg:x="1463" fg:w="3"/><text x="7.2510%" y="1887.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0010%" y="1861" width="0.0144%" height="15" fill="rgb(250,50,5)" fg:x="1463" fg:w="3"/><text x="7.2510%" y="1871.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (427 samples, 2.04%)</title><rect x="4.9768%" y="2069" width="2.0434%" height="15" fill="rgb(207,67,11)" fg:x="1040" fg:w="427"/><text x="5.2268%" y="2079.50">d..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (71 samples, 0.34%)</title><rect x="6.6804%" y="2053" width="0.3398%" height="15" fill="rgb(245,204,40)" fg:x="1396" fg:w="71"/><text x="6.9304%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (31 samples, 0.15%)</title><rect x="6.8718%" y="2037" width="0.1483%" height="15" fill="rgb(238,228,24)" fg:x="1436" fg:w="31"/><text x="7.1218%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="6.9723%" y="2021" width="0.0479%" height="15" fill="rgb(217,116,22)" fg:x="1457" fg:w="10"/><text x="7.2223%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="6.9819%" y="2005" width="0.0383%" height="15" fill="rgb(234,98,12)" fg:x="1459" fg:w="8"/><text x="7.2319%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="6.9819%" y="1989" width="0.0383%" height="15" fill="rgb(242,170,50)" fg:x="1459" fg:w="8"/><text x="7.2319%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (6 samples, 0.03%)</title><rect x="6.9914%" y="1973" width="0.0287%" height="15" fill="rgb(235,7,5)" fg:x="1461" fg:w="6"/><text x="7.2414%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (669 samples, 3.20%)</title><rect x="3.8235%" y="2101" width="3.2014%" height="15" fill="rgb(241,114,28)" fg:x="799" fg:w="669"/><text x="4.0735%" y="2111.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (643 samples, 3.08%)</title><rect x="3.9479%" y="2085" width="3.0770%" height="15" fill="rgb(246,112,42)" fg:x="825" fg:w="643"/><text x="4.1979%" y="2095.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (680 samples, 3.25%)</title><rect x="3.7757%" y="2149" width="3.2541%" height="15" fill="rgb(248,228,14)" fg:x="789" fg:w="680"/><text x="4.0257%" y="2159.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (673 samples, 3.22%)</title><rect x="3.8092%" y="2133" width="3.2206%" height="15" fill="rgb(208,133,18)" fg:x="796" fg:w="673"/><text x="4.0592%" y="2143.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (673 samples, 3.22%)</title><rect x="3.8092%" y="2117" width="3.2206%" height="15" fill="rgb(207,35,49)" fg:x="796" fg:w="673"/><text x="4.0592%" y="2127.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (797 samples, 3.81%)</title><rect x="3.2206%" y="2181" width="3.8139%" height="15" fill="rgb(205,68,36)" fg:x="673" fg:w="797"/><text x="3.4706%" y="2191.50">deno..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (686 samples, 3.28%)</title><rect x="3.7517%" y="2165" width="3.2828%" height="15" fill="rgb(245,62,40)" fg:x="784" fg:w="686"/><text x="4.0017%" y="2175.50">den..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (818 samples, 3.91%)</title><rect x="3.1249%" y="2213" width="3.9144%" height="15" fill="rgb(228,27,24)" fg:x="653" fg:w="818"/><text x="3.3749%" y="2223.50">deno..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (812 samples, 3.89%)</title><rect x="3.1536%" y="2197" width="3.8857%" height="15" fill="rgb(253,19,12)" fg:x="659" fg:w="812"/><text x="3.4036%" y="2207.50">deno..</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (942 samples, 4.51%)</title><rect x="2.5362%" y="2229" width="4.5078%" height="15" fill="rgb(232,28,20)" fg:x="530" fg:w="942"/><text x="2.7862%" y="2239.50">deno...</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (952 samples, 4.56%)</title><rect x="2.4932%" y="2245" width="4.5557%" height="15" fill="rgb(218,35,51)" fg:x="521" fg:w="952"/><text x="2.7432%" y="2255.50">deno...</text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::execute_script(ref$&lt;str$&gt;, enum2$ (972 samples, 4.65%)</title><rect x="2.4023%" y="2501" width="4.6514%" height="15" fill="rgb(212,90,40)" fg:x="502" fg:w="972"/><text x="2.6523%" y="2511.50">deno...</text></g><g><title>deno.exe`deno_core::runtime::jsrealm::JsRealm::execute_script(v8::isolate::Isolate*, ref$&lt;str$&gt;, enum2$ (972 samples, 4.65%)</title><rect x="2.4023%" y="2485" width="4.6514%" height="15" fill="rgb(220,172,12)" fg:x="502" fg:w="972"/><text x="2.6523%" y="2495.50">deno...</text></g><g><title>deno.exe`v8::data::Script::run(v8::scope::HandleScope (970 samples, 4.64%)</title><rect x="2.4118%" y="2469" width="4.6418%" height="15" fill="rgb(226,159,20)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2479.50">deno...</text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (970 samples, 4.64%)</title><rect x="2.4118%" y="2453" width="4.6418%" height="15" fill="rgb(234,205,16)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2463.50">deno...</text></g><g><title>deno.exe`v8::script::impl$0::run::closure$0 (970 samples, 4.64%)</title><rect x="2.4118%" y="2437" width="4.6418%" height="15" fill="rgb(207,9,39)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2447.50">deno...</text></g><g><title>deno.exe`v8__Script__Run(v8::Script const&amp;, v8::Context const&amp;) (970 samples, 4.64%)</title><rect x="2.4118%" y="2421" width="4.6418%" height="15" fill="rgb(249,143,15)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2431.50">deno...</text></g><g><title>deno.exe`v8::Script::Run(v8::Local (970 samples, 4.64%)</title><rect x="2.4118%" y="2405" width="4.6418%" height="15" fill="rgb(253,133,29)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2415.50">deno...</text></g><g><title>deno.exe`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (970 samples, 4.64%)</title><rect x="2.4118%" y="2389" width="4.6418%" height="15" fill="rgb(221,187,0)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2399.50">deno...</text></g><g><title>deno.exe`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (970 samples, 4.64%)</title><rect x="2.4118%" y="2373" width="4.6418%" height="15" fill="rgb(205,204,26)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2383.50">deno...</text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (970 samples, 4.64%)</title><rect x="2.4118%" y="2357" width="4.6418%" height="15" fill="rgb(224,68,54)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2367.50">deno...</text></g><g><title>deno.exe`Builtins_JSEntry (970 samples, 4.64%)</title><rect x="2.4118%" y="2341" width="4.6418%" height="15" fill="rgb(209,67,4)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2351.50">deno...</text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (970 samples, 4.64%)</title><rect x="2.4118%" y="2325" width="4.6418%" height="15" fill="rgb(228,229,18)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2335.50">deno...</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (970 samples, 4.64%)</title><rect x="2.4118%" y="2309" width="4.6418%" height="15" fill="rgb(231,89,13)" fg:x="504" fg:w="970"/><text x="2.6618%" y="2319.50">deno...</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (968 samples, 4.63%)</title><rect x="2.4214%" y="2293" width="4.6322%" height="15" fill="rgb(210,182,18)" fg:x="506" fg:w="968"/><text x="2.6714%" y="2303.50">deno...</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (957 samples, 4.58%)</title><rect x="2.4740%" y="2277" width="4.5796%" height="15" fill="rgb(240,105,2)" fg:x="517" fg:w="957"/><text x="2.7240%" y="2287.50">deno...</text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (954 samples, 4.57%)</title><rect x="2.4884%" y="2261" width="4.5652%" height="15" fill="rgb(207,170,50)" fg:x="520" fg:w="954"/><text x="2.7384%" y="2271.50">deno...</text></g><g><title>deno.exe`v8::V8::initialize (3 samples, 0.01%)</title><rect x="7.0632%" y="2373" width="0.0144%" height="15" fill="rgb(232,133,24)" fg:x="1476" fg:w="3"/><text x="7.3132%" y="2383.50"></text></g><g><title>deno.exe`v8::V8::Initialize (3 samples, 0.01%)</title><rect x="7.0632%" y="2357" width="0.0144%" height="15" fill="rgb(235,166,27)" fg:x="1476" fg:w="3"/><text x="7.3132%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::V8::Initialize (3 samples, 0.01%)</title><rect x="7.0632%" y="2341" width="0.0144%" height="15" fill="rgb(209,19,13)" fg:x="1476" fg:w="3"/><text x="7.3132%" y="2351.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::init_v8(enum2$&lt;core::option::Option&lt;v8::support::SharedRef (6 samples, 0.03%)</title><rect x="7.0536%" y="2485" width="0.0287%" height="15" fill="rgb(226,79,39)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2495.50"></text></g><g><title>deno.exe`std::sync::once::Once::call_once&lt;deno_core::runtime::jsruntime::impl$13::init_v8::closure_env$0&gt; (6 samples, 0.03%)</title><rect x="7.0536%" y="2469" width="0.0287%" height="15" fill="rgb(222,163,10)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2479.50"></text></g><g><title>deno.exe`std::sys_common::once::queue::Once::call (6 samples, 0.03%)</title><rect x="7.0536%" y="2453" width="0.0287%" height="15" fill="rgb(214,44,19)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2463.50"></text></g><g><title>deno.exe`core::cell::Cell::get (6 samples, 0.03%)</title><rect x="7.0536%" y="2437" width="0.0287%" height="15" fill="rgb(210,217,13)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2447.50"></text></g><g><title>deno.exe`std::sync::once::impl$2::call_once::closure$0&lt;deno_core::runtime::jsruntime::impl$13::init_v8::closure_env$0&gt;(std::sync::once::impl$2::call_once::closure_env$0 (6 samples, 0.03%)</title><rect x="7.0536%" y="2421" width="0.0287%" height="15" fill="rgb(237,61,54)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2431.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$13::init_v8::closure$0 (6 samples, 0.03%)</title><rect x="7.0536%" y="2405" width="0.0287%" height="15" fill="rgb(226,184,24)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2415.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::v8_init(enum2$&lt;core::option::Option&lt;v8::support::SharedRef (6 samples, 0.03%)</title><rect x="7.0536%" y="2389" width="0.0287%" height="15" fill="rgb(223,226,4)" fg:x="1474" fg:w="6"/><text x="7.3036%" y="2399.50"></text></g><g><title>deno.exe`v8::data::Function::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local (3 samples, 0.01%)</title><rect x="7.0967%" y="2453" width="0.0144%" height="15" fill="rgb(210,26,41)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2463.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="7.0967%" y="2437" width="0.0144%" height="15" fill="rgb(220,221,6)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2447.50"></text></g><g><title>deno.exe`v8::function::impl$17::call::closure$0 (3 samples, 0.01%)</title><rect x="7.0967%" y="2421" width="0.0144%" height="15" fill="rgb(225,89,49)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2431.50"></text></g><g><title>deno.exe`v8__Function__Call(v8::Function const&amp;, v8::Context const&amp;, v8::Value const&amp;, int, v8::Value const* const*) (3 samples, 0.01%)</title><rect x="7.0967%" y="2405" width="0.0144%" height="15" fill="rgb(218,70,45)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2415.50"></text></g><g><title>deno.exe`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (3 samples, 0.01%)</title><rect x="7.0967%" y="2389" width="0.0144%" height="15" fill="rgb(238,166,21)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2399.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (3 samples, 0.01%)</title><rect x="7.0967%" y="2373" width="0.0144%" height="15" fill="rgb(224,141,44)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (3 samples, 0.01%)</title><rect x="7.0967%" y="2357" width="0.0144%" height="15" fill="rgb(230,12,49)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2367.50"></text></g><g><title>deno.exe`Builtins_JSEntry (3 samples, 0.01%)</title><rect x="7.0967%" y="2341" width="0.0144%" height="15" fill="rgb(212,174,12)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2351.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (3 samples, 0.01%)</title><rect x="7.0967%" y="2325" width="0.0144%" height="15" fill="rgb(246,67,9)" fg:x="1483" fg:w="3"/><text x="7.3467%" y="2335.50"></text></g><g><title>deno.exe`deno_core::runtime::bindings::initialize_context(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Context&gt;, ref$&lt;slice2$ (8 samples, 0.04%)</title><rect x="7.0919%" y="2469" width="0.0383%" height="15" fill="rgb(239,35,23)" fg:x="1482" fg:w="8"/><text x="7.3419%" y="2479.50"></text></g><g><title>deno.exe`std::Cr::vector&lt;v8::internal::Handle&lt;v8::internal::HeapObject&gt;,std::Cr::allocator&lt;v8::internal::Handle&lt;v8::internal::HeapObject&gt; &gt; &gt;::push_back(v8::internal::Handle (3 samples, 0.01%)</title><rect x="7.2116%" y="2213" width="0.0144%" height="15" fill="rgb(211,167,0)" fg:x="1507" fg:w="3"/><text x="7.4616%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="7.4125%" y="1653" width="0.0144%" height="15" fill="rgb(225,119,45)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1663.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="7.4125%" y="1637" width="0.0144%" height="15" fill="rgb(210,162,6)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="7.4125%" y="1621" width="0.0144%" height="15" fill="rgb(208,118,35)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1631.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="7.4125%" y="1605" width="0.0144%" height="15" fill="rgb(239,4,53)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1615.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="7.4125%" y="1589" width="0.0144%" height="15" fill="rgb(213,130,21)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1599.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="7.4125%" y="1573" width="0.0144%" height="15" fill="rgb(235,148,0)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1583.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="7.4125%" y="1557" width="0.0144%" height="15" fill="rgb(244,224,18)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1567.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="7.4125%" y="1541" width="0.0144%" height="15" fill="rgb(211,214,4)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1551.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="7.4125%" y="1525" width="0.0144%" height="15" fill="rgb(206,119,25)" fg:x="1549" fg:w="3"/><text x="7.6625%" y="1535.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="7.4078%" y="1765" width="0.0239%" height="15" fill="rgb(243,93,47)" fg:x="1548" fg:w="5"/><text x="7.6578%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="7.4078%" y="1749" width="0.0239%" height="15" fill="rgb(224,194,6)" fg:x="1548" fg:w="5"/><text x="7.6578%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="7.4125%" y="1733" width="0.0191%" height="15" fill="rgb(243,229,6)" fg:x="1549" fg:w="4"/><text x="7.6625%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="7.4125%" y="1717" width="0.0191%" height="15" fill="rgb(207,23,50)" fg:x="1549" fg:w="4"/><text x="7.6625%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="7.4125%" y="1701" width="0.0191%" height="15" fill="rgb(253,192,32)" fg:x="1549" fg:w="4"/><text x="7.6625%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="7.4125%" y="1685" width="0.0191%" height="15" fill="rgb(213,21,6)" fg:x="1549" fg:w="4"/><text x="7.6625%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="7.4125%" y="1669" width="0.0191%" height="15" fill="rgb(243,151,13)" fg:x="1549" fg:w="4"/><text x="7.6625%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (12 samples, 0.06%)</title><rect x="7.3790%" y="1909" width="0.0574%" height="15" fill="rgb(233,165,41)" fg:x="1542" fg:w="12"/><text x="7.6290%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="7.3838%" y="1893" width="0.0526%" height="15" fill="rgb(246,176,45)" fg:x="1543" fg:w="11"/><text x="7.6338%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="7.3886%" y="1877" width="0.0479%" height="15" fill="rgb(217,170,52)" fg:x="1544" fg:w="10"/><text x="7.6386%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (9 samples, 0.04%)</title><rect x="7.3934%" y="1861" width="0.0431%" height="15" fill="rgb(214,203,54)" fg:x="1545" fg:w="9"/><text x="7.6434%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (8 samples, 0.04%)</title><rect x="7.3982%" y="1845" width="0.0383%" height="15" fill="rgb(248,215,49)" fg:x="1546" fg:w="8"/><text x="7.6482%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (8 samples, 0.04%)</title><rect x="7.3982%" y="1829" width="0.0383%" height="15" fill="rgb(208,46,10)" fg:x="1546" fg:w="8"/><text x="7.6482%" y="1839.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (8 samples, 0.04%)</title><rect x="7.3982%" y="1813" width="0.0383%" height="15" fill="rgb(254,5,31)" fg:x="1546" fg:w="8"/><text x="7.6482%" y="1823.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="7.4030%" y="1797" width="0.0335%" height="15" fill="rgb(222,104,33)" fg:x="1547" fg:w="7"/><text x="7.6530%" y="1807.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (6 samples, 0.03%)</title><rect x="7.4078%" y="1781" width="0.0287%" height="15" fill="rgb(248,49,16)" fg:x="1548" fg:w="6"/><text x="7.6578%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (15 samples, 0.07%)</title><rect x="7.3695%" y="2005" width="0.0718%" height="15" fill="rgb(232,198,41)" fg:x="1540" fg:w="15"/><text x="7.6195%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (15 samples, 0.07%)</title><rect x="7.3695%" y="1989" width="0.0718%" height="15" fill="rgb(214,125,3)" fg:x="1540" fg:w="15"/><text x="7.6195%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (15 samples, 0.07%)</title><rect x="7.3695%" y="1973" width="0.0718%" height="15" fill="rgb(229,220,28)" fg:x="1540" fg:w="15"/><text x="7.6195%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (15 samples, 0.07%)</title><rect x="7.3695%" y="1957" width="0.0718%" height="15" fill="rgb(222,64,37)" fg:x="1540" fg:w="15"/><text x="7.6195%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (15 samples, 0.07%)</title><rect x="7.3695%" y="1941" width="0.0718%" height="15" fill="rgb(249,184,13)" fg:x="1540" fg:w="15"/><text x="7.6195%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (14 samples, 0.07%)</title><rect x="7.3743%" y="1925" width="0.0670%" height="15" fill="rgb(252,176,6)" fg:x="1541" fg:w="14"/><text x="7.6243%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (22 samples, 0.11%)</title><rect x="7.3408%" y="2069" width="0.1053%" height="15" fill="rgb(228,153,7)" fg:x="1534" fg:w="22"/><text x="7.5908%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (21 samples, 0.10%)</title><rect x="7.3456%" y="2053" width="0.1005%" height="15" fill="rgb(242,193,5)" fg:x="1535" fg:w="21"/><text x="7.5956%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (20 samples, 0.10%)</title><rect x="7.3503%" y="2037" width="0.0957%" height="15" fill="rgb(232,140,9)" fg:x="1536" fg:w="20"/><text x="7.6003%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (17 samples, 0.08%)</title><rect x="7.3647%" y="2021" width="0.0814%" height="15" fill="rgb(213,222,16)" fg:x="1539" fg:w="17"/><text x="7.6147%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (30 samples, 0.14%)</title><rect x="7.3121%" y="2133" width="0.1436%" height="15" fill="rgb(222,75,50)" fg:x="1528" fg:w="30"/><text x="7.5621%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (29 samples, 0.14%)</title><rect x="7.3168%" y="2117" width="0.1388%" height="15" fill="rgb(205,180,2)" fg:x="1529" fg:w="29"/><text x="7.5668%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (26 samples, 0.12%)</title><rect x="7.3312%" y="2101" width="0.1244%" height="15" fill="rgb(216,34,7)" fg:x="1532" fg:w="26"/><text x="7.5812%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (24 samples, 0.11%)</title><rect x="7.3408%" y="2085" width="0.1148%" height="15" fill="rgb(253,16,32)" fg:x="1534" fg:w="24"/><text x="7.5908%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (32 samples, 0.15%)</title><rect x="7.3073%" y="2149" width="0.1531%" height="15" fill="rgb(208,97,28)" fg:x="1527" fg:w="32"/><text x="7.5573%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (45 samples, 0.22%)</title><rect x="7.2498%" y="2197" width="0.2153%" height="15" fill="rgb(225,92,11)" fg:x="1515" fg:w="45"/><text x="7.4998%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (42 samples, 0.20%)</title><rect x="7.2642%" y="2181" width="0.2010%" height="15" fill="rgb(243,38,12)" fg:x="1518" fg:w="42"/><text x="7.5142%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (36 samples, 0.17%)</title><rect x="7.2929%" y="2165" width="0.1723%" height="15" fill="rgb(208,139,16)" fg:x="1524" fg:w="36"/><text x="7.5429%" y="2175.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (51 samples, 0.24%)</title><rect x="7.2307%" y="2213" width="0.2441%" height="15" fill="rgb(227,24,9)" fg:x="1511" fg:w="51"/><text x="7.4807%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (56 samples, 0.27%)</title><rect x="7.2116%" y="2229" width="0.2680%" height="15" fill="rgb(206,62,11)" fg:x="1507" fg:w="56"/><text x="7.4616%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::DeserializeDeferredObjects (70 samples, 0.33%)</title><rect x="7.1589%" y="2277" width="0.3350%" height="15" fill="rgb(228,134,27)" fg:x="1496" fg:w="70"/><text x="7.4089%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (70 samples, 0.33%)</title><rect x="7.1589%" y="2261" width="0.3350%" height="15" fill="rgb(205,55,33)" fg:x="1496" fg:w="70"/><text x="7.4089%" y="2271.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (65 samples, 0.31%)</title><rect x="7.1828%" y="2245" width="0.3110%" height="15" fill="rgb(243,75,43)" fg:x="1501" fg:w="65"/><text x="7.4328%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadResolvePendingForwardRef&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="7.4795%" y="2229" width="0.0144%" height="15" fill="rgb(223,27,42)" fg:x="1563" fg:w="3"/><text x="7.7295%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (33 samples, 0.16%)</title><rect x="7.5800%" y="1573" width="0.1579%" height="15" fill="rgb(232,189,33)" fg:x="1584" fg:w="33"/><text x="7.8300%" y="1583.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (32 samples, 0.15%)</title><rect x="7.5848%" y="1557" width="0.1531%" height="15" fill="rgb(210,9,39)" fg:x="1585" fg:w="32"/><text x="7.8348%" y="1567.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (32 samples, 0.15%)</title><rect x="7.5848%" y="1541" width="0.1531%" height="15" fill="rgb(242,85,26)" fg:x="1585" fg:w="32"/><text x="7.8348%" y="1551.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (31 samples, 0.15%)</title><rect x="7.5896%" y="1525" width="0.1483%" height="15" fill="rgb(248,44,4)" fg:x="1586" fg:w="31"/><text x="7.8396%" y="1535.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (30 samples, 0.14%)</title><rect x="7.5944%" y="1509" width="0.1436%" height="15" fill="rgb(250,96,46)" fg:x="1587" fg:w="30"/><text x="7.8444%" y="1519.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (30 samples, 0.14%)</title><rect x="7.5944%" y="1493" width="0.1436%" height="15" fill="rgb(229,116,26)" fg:x="1587" fg:w="30"/><text x="7.8444%" y="1503.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (30 samples, 0.14%)</title><rect x="7.5944%" y="1477" width="0.1436%" height="15" fill="rgb(246,94,34)" fg:x="1587" fg:w="30"/><text x="7.8444%" y="1487.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (29 samples, 0.14%)</title><rect x="7.5992%" y="1461" width="0.1388%" height="15" fill="rgb(251,73,21)" fg:x="1588" fg:w="29"/><text x="7.8492%" y="1471.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (29 samples, 0.14%)</title><rect x="7.5992%" y="1445" width="0.1388%" height="15" fill="rgb(254,121,25)" fg:x="1588" fg:w="29"/><text x="7.8492%" y="1455.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (28 samples, 0.13%)</title><rect x="7.6040%" y="1429" width="0.1340%" height="15" fill="rgb(215,161,49)" fg:x="1589" fg:w="28"/><text x="7.8540%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (27 samples, 0.13%)</title><rect x="7.6087%" y="1413" width="0.1292%" height="15" fill="rgb(221,43,13)" fg:x="1590" fg:w="27"/><text x="7.8587%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (26 samples, 0.12%)</title><rect x="7.6135%" y="1397" width="0.1244%" height="15" fill="rgb(249,5,37)" fg:x="1591" fg:w="26"/><text x="7.8635%" y="1407.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (25 samples, 0.12%)</title><rect x="7.6183%" y="1381" width="0.1196%" height="15" fill="rgb(226,25,44)" fg:x="1592" fg:w="25"/><text x="7.8683%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (23 samples, 0.11%)</title><rect x="7.6279%" y="1365" width="0.1101%" height="15" fill="rgb(238,189,16)" fg:x="1594" fg:w="23"/><text x="7.8779%" y="1375.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (23 samples, 0.11%)</title><rect x="7.6279%" y="1349" width="0.1101%" height="15" fill="rgb(251,186,8)" fg:x="1594" fg:w="23"/><text x="7.8779%" y="1359.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (21 samples, 0.10%)</title><rect x="7.6375%" y="1333" width="0.1005%" height="15" fill="rgb(254,34,31)" fg:x="1596" fg:w="21"/><text x="7.8875%" y="1343.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (18 samples, 0.09%)</title><rect x="7.6518%" y="1317" width="0.0861%" height="15" fill="rgb(225,215,27)" fg:x="1599" fg:w="18"/><text x="7.9018%" y="1327.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (16 samples, 0.08%)</title><rect x="7.6614%" y="1301" width="0.0766%" height="15" fill="rgb(221,192,48)" fg:x="1601" fg:w="16"/><text x="7.9114%" y="1311.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (13 samples, 0.06%)</title><rect x="7.6757%" y="1285" width="0.0622%" height="15" fill="rgb(219,137,20)" fg:x="1604" fg:w="13"/><text x="7.9257%" y="1295.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="7.6901%" y="1269" width="0.0479%" height="15" fill="rgb(219,84,11)" fg:x="1607" fg:w="10"/><text x="7.9401%" y="1279.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="7.7140%" y="1253" width="0.0239%" height="15" fill="rgb(224,10,23)" fg:x="1612" fg:w="5"/><text x="7.9640%" y="1263.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="7.7188%" y="1237" width="0.0191%" height="15" fill="rgb(248,22,39)" fg:x="1613" fg:w="4"/><text x="7.9688%" y="1247.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (35 samples, 0.17%)</title><rect x="7.5753%" y="1637" width="0.1675%" height="15" fill="rgb(212,154,20)" fg:x="1583" fg:w="35"/><text x="7.8253%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (35 samples, 0.17%)</title><rect x="7.5753%" y="1621" width="0.1675%" height="15" fill="rgb(236,199,50)" fg:x="1583" fg:w="35"/><text x="7.8253%" y="1631.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (35 samples, 0.17%)</title><rect x="7.5753%" y="1605" width="0.1675%" height="15" fill="rgb(211,9,17)" fg:x="1583" fg:w="35"/><text x="7.8253%" y="1615.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (35 samples, 0.17%)</title><rect x="7.5753%" y="1589" width="0.1675%" height="15" fill="rgb(243,216,36)" fg:x="1583" fg:w="35"/><text x="7.8253%" y="1599.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (38 samples, 0.18%)</title><rect x="7.5705%" y="1669" width="0.1818%" height="15" fill="rgb(250,2,10)" fg:x="1582" fg:w="38"/><text x="7.8205%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (38 samples, 0.18%)</title><rect x="7.5705%" y="1653" width="0.1818%" height="15" fill="rgb(226,50,48)" fg:x="1582" fg:w="38"/><text x="7.8205%" y="1663.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (45 samples, 0.22%)</title><rect x="7.5465%" y="1701" width="0.2153%" height="15" fill="rgb(243,81,16)" fg:x="1577" fg:w="45"/><text x="7.7965%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (41 samples, 0.20%)</title><rect x="7.5657%" y="1685" width="0.1962%" height="15" fill="rgb(250,14,2)" fg:x="1581" fg:w="41"/><text x="7.8157%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (51 samples, 0.24%)</title><rect x="7.5226%" y="1733" width="0.2441%" height="15" fill="rgb(233,135,29)" fg:x="1572" fg:w="51"/><text x="7.7726%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (47 samples, 0.22%)</title><rect x="7.5418%" y="1717" width="0.2249%" height="15" fill="rgb(224,64,43)" fg:x="1576" fg:w="47"/><text x="7.7918%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (58 samples, 0.28%)</title><rect x="7.4939%" y="2197" width="0.2776%" height="15" fill="rgb(238,84,13)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2181" width="0.2776%" height="15" fill="rgb(253,48,26)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="2165" width="0.2776%" height="15" fill="rgb(205,223,31)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2175.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2149" width="0.2776%" height="15" fill="rgb(221,41,32)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (58 samples, 0.28%)</title><rect x="7.4939%" y="2133" width="0.2776%" height="15" fill="rgb(213,158,31)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2117" width="0.2776%" height="15" fill="rgb(245,126,43)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="2101" width="0.2776%" height="15" fill="rgb(227,7,22)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2085" width="0.2776%" height="15" fill="rgb(252,90,44)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (58 samples, 0.28%)</title><rect x="7.4939%" y="2069" width="0.2776%" height="15" fill="rgb(253,91,0)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2053" width="0.2776%" height="15" fill="rgb(252,175,49)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="2037" width="0.2776%" height="15" fill="rgb(246,150,1)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="2021" width="0.2776%" height="15" fill="rgb(241,192,25)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="2005" width="0.2776%" height="15" fill="rgb(239,187,11)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1989" width="0.2776%" height="15" fill="rgb(218,202,51)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1973" width="0.2776%" height="15" fill="rgb(225,176,8)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1957" width="0.2776%" height="15" fill="rgb(219,122,41)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1941" width="0.2776%" height="15" fill="rgb(248,140,20)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1925" width="0.2776%" height="15" fill="rgb(245,41,37)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1909" width="0.2776%" height="15" fill="rgb(235,82,39)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1893" width="0.2776%" height="15" fill="rgb(230,108,42)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1877" width="0.2776%" height="15" fill="rgb(215,150,50)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1861" width="0.2776%" height="15" fill="rgb(233,212,5)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1845" width="0.2776%" height="15" fill="rgb(245,80,22)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1829" width="0.2776%" height="15" fill="rgb(238,129,16)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1839.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1813" width="0.2776%" height="15" fill="rgb(240,19,0)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1823.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (58 samples, 0.28%)</title><rect x="7.4939%" y="1797" width="0.2776%" height="15" fill="rgb(232,42,35)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1807.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (58 samples, 0.28%)</title><rect x="7.4939%" y="1781" width="0.2776%" height="15" fill="rgb(223,130,24)" fg:x="1566" fg:w="58"/><text x="7.7439%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (57 samples, 0.27%)</title><rect x="7.4987%" y="1765" width="0.2728%" height="15" fill="rgb(237,16,22)" fg:x="1567" fg:w="57"/><text x="7.7487%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (52 samples, 0.25%)</title><rect x="7.5226%" y="1749" width="0.2488%" height="15" fill="rgb(248,192,20)" fg:x="1572" fg:w="52"/><text x="7.7726%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (59 samples, 0.28%)</title><rect x="7.4939%" y="2277" width="0.2823%" height="15" fill="rgb(233,167,2)" fg:x="1566" fg:w="59"/><text x="7.7439%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (59 samples, 0.28%)</title><rect x="7.4939%" y="2261" width="0.2823%" height="15" fill="rgb(252,71,44)" fg:x="1566" fg:w="59"/><text x="7.7439%" y="2271.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (59 samples, 0.28%)</title><rect x="7.4939%" y="2245" width="0.2823%" height="15" fill="rgb(238,37,47)" fg:x="1566" fg:w="59"/><text x="7.7439%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (59 samples, 0.28%)</title><rect x="7.4939%" y="2229" width="0.2823%" height="15" fill="rgb(214,202,54)" fg:x="1566" fg:w="59"/><text x="7.7439%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (59 samples, 0.28%)</title><rect x="7.4939%" y="2213" width="0.2823%" height="15" fill="rgb(254,165,40)" fg:x="1566" fg:w="59"/><text x="7.7439%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::HashTable&lt;v8::internal::NameDictionary,v8::internal::NameDictionaryShape&gt;::Rehash (9 samples, 0.04%)</title><rect x="7.7954%" y="2245" width="0.0431%" height="15" fill="rgb(246,173,38)" fg:x="1629" fg:w="9"/><text x="8.0454%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Genesis::Genesis(v8::internal::Isolate*, v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (151 samples, 0.72%)</title><rect x="7.1446%" y="2341" width="0.7226%" height="15" fill="rgb(215,3,27)" fg:x="1493" fg:w="151"/><text x="7.3946%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::Snapshot::NewContextFromSnapshot(v8::internal::Isolate*, v8::internal::Handle (148 samples, 0.71%)</title><rect x="7.1589%" y="2325" width="0.7082%" height="15" fill="rgb(239,169,51)" fg:x="1496" fg:w="148"/><text x="7.4089%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::ContextDeserializer::DeserializeContext(v8::internal::Isolate*, v8::internal::SnapshotData const*, bool, v8::internal::Handle (148 samples, 0.71%)</title><rect x="7.1589%" y="2309" width="0.7082%" height="15" fill="rgb(212,5,25)" fg:x="1496" fg:w="148"/><text x="7.4089%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::ContextDeserializer::Deserialize(v8::internal::Isolate*, v8::internal::Handle (148 samples, 0.71%)</title><rect x="7.1589%" y="2293" width="0.7082%" height="15" fill="rgb(243,45,17)" fg:x="1496" fg:w="148"/><text x="7.4089%" y="2303.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::Rehash (19 samples, 0.09%)</title><rect x="7.7762%" y="2277" width="0.0909%" height="15" fill="rgb(242,97,9)" fg:x="1625" fg:w="19"/><text x="8.0262%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::HeapObject::RehashBasedOnMap&lt;v8::internal::Isolate&gt; (19 samples, 0.09%)</title><rect x="7.7762%" y="2261" width="0.0909%" height="15" fill="rgb(228,71,31)" fg:x="1625" fg:w="19"/><text x="8.0262%" y="2271.50"></text></g><g><title>deno.exe`v8::internal::JSMap::Rehash (6 samples, 0.03%)</title><rect x="7.8384%" y="2245" width="0.0287%" height="15" fill="rgb(252,184,16)" fg:x="1638" fg:w="6"/><text x="8.0884%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::OrderedHashMap::Rehash(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="7.8432%" y="2229" width="0.0239%" height="15" fill="rgb(236,169,46)" fg:x="1639" fg:w="5"/><text x="8.0932%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap,2&gt;::Rehash(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="7.8432%" y="2213" width="0.0239%" height="15" fill="rgb(207,17,47)" fg:x="1639" fg:w="5"/><text x="8.0932%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::OrderedHashTable&lt;v8::internal::OrderedHashMap,2&gt;::Allocate (3 samples, 0.01%)</title><rect x="7.8528%" y="2197" width="0.0144%" height="15" fill="rgb(206,201,28)" fg:x="1641" fg:w="3"/><text x="8.1028%" y="2207.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::create_context(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::ObjectTemplate&gt; (*)(ref_mut$&lt;v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt; &gt;,v8::handle::Local&lt;v8::data::ObjectTemplate&gt;)&gt; &gt;, ref$&lt;slice2$&lt;void (*)(ref_mut$&lt;v8::scope::HandleScope&lt;v8::data::Context&gt; &gt;,v8::handle::Local (152 samples, 0.73%)</title><rect x="7.1446%" y="2469" width="0.7274%" height="15" fill="rgb(224,184,23)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2479.50"></text></g><g><title>deno.exe`v8::data::Context::new_from_template(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, v8::handle::Local (152 samples, 0.73%)</title><rect x="7.1446%" y="2453" width="0.7274%" height="15" fill="rgb(208,139,48)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2463.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (152 samples, 0.73%)</title><rect x="7.1446%" y="2437" width="0.7274%" height="15" fill="rgb(208,130,10)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2447.50"></text></g><g><title>deno.exe`v8::context::impl$0::new_from_template::closure$0 (152 samples, 0.73%)</title><rect x="7.1446%" y="2421" width="0.7274%" height="15" fill="rgb(211,213,45)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2431.50"></text></g><g><title>deno.exe`v8__Context__New(v8::Isolate*, v8::ObjectTemplate const*, v8::Value const*) (152 samples, 0.73%)</title><rect x="7.1446%" y="2405" width="0.7274%" height="15" fill="rgb(235,100,30)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2415.50"></text></g><g><title>deno.exe`v8::Context::New(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (152 samples, 0.73%)</title><rect x="7.1446%" y="2389" width="0.7274%" height="15" fill="rgb(206,144,31)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2399.50"></text></g><g><title>deno.exe`v8::NewContext(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (152 samples, 0.73%)</title><rect x="7.1446%" y="2373" width="0.7274%" height="15" fill="rgb(224,200,26)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::Bootstrapper::CreateEnvironment(v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (152 samples, 0.73%)</title><rect x="7.1446%" y="2357" width="0.7274%" height="15" fill="rgb(247,104,53)" fg:x="1493" fg:w="152"/><text x="7.3946%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::Heap::SetUp (3 samples, 0.01%)</title><rect x="7.8719%" y="2373" width="0.0144%" height="15" fill="rgb(220,14,17)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::CodeRange::EnsureProcessWideCodeRange (3 samples, 0.01%)</title><rect x="7.8719%" y="2357" width="0.0144%" height="15" fill="rgb(230,140,40)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2367.50"></text></g><g><title>deno.exe`v8::base::CallOnceImpl(std::Cr::atomic&lt;unsigned char&gt;*, std::Cr::function&lt;void  (3 samples, 0.01%)</title><rect x="7.8719%" y="2341" width="0.0144%" height="15" fill="rgb(229,2,41)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::InitProcessWideCodeRange (3 samples, 0.01%)</title><rect x="7.8719%" y="2325" width="0.0144%" height="15" fill="rgb(232,89,16)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::CodeRange::InitReservation (3 samples, 0.01%)</title><rect x="7.8719%" y="2309" width="0.0144%" height="15" fill="rgb(247,59,52)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::CodeRangeAddressHint::GetAddressHint (3 samples, 0.01%)</title><rect x="7.8719%" y="2293" width="0.0144%" height="15" fill="rgb(226,110,21)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2303.50"></text></g><g><title>deno.exe`v8::base::OS::GetFreeMemoryRangesWithin (3 samples, 0.01%)</title><rect x="7.8719%" y="2277" width="0.0144%" height="15" fill="rgb(224,176,43)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2287.50"></text></g><g><title>`0x7FFA9F81DE59 (3 samples, 0.01%)</title><rect x="7.8719%" y="2261" width="0.0144%" height="15" fill="rgb(221,73,6)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2271.50"></text></g><g><title>`0x7FFAA222F1B4 (3 samples, 0.01%)</title><rect x="7.8719%" y="2245" width="0.0144%" height="15" fill="rgb(232,78,19)" fg:x="1645" fg:w="3"/><text x="8.1219%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::Rehash (9 samples, 0.04%)</title><rect x="7.8959%" y="2341" width="0.0431%" height="15" fill="rgb(233,112,48)" fg:x="1650" fg:w="9"/><text x="8.1459%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::HeapObject::RehashBasedOnMap&lt;v8::internal::Isolate&gt; (9 samples, 0.04%)</title><rect x="7.8959%" y="2325" width="0.0431%" height="15" fill="rgb(243,131,47)" fg:x="1650" fg:w="9"/><text x="8.1459%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::String::ComputeAndSetRawHash (9 samples, 0.04%)</title><rect x="7.8959%" y="2309" width="0.0431%" height="15" fill="rgb(226,51,1)" fg:x="1650" fg:w="9"/><text x="8.1459%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::String::ComputeAndSetRawHash (8 samples, 0.04%)</title><rect x="7.9007%" y="2293" width="0.0383%" height="15" fill="rgb(247,58,7)" fg:x="1651" fg:w="8"/><text x="8.1507%" y="2303.50"></text></g><g><title>deno.exe`v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (8 samples, 0.04%)</title><rect x="7.9007%" y="2277" width="0.0383%" height="15" fill="rgb(209,7,32)" fg:x="1651" fg:w="8"/><text x="8.1507%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyDeserializer::PostProcessNewObjects (5 samples, 0.02%)</title><rect x="7.9389%" y="2341" width="0.0239%" height="15" fill="rgb(209,39,41)" fg:x="1659" fg:w="5"/><text x="8.1889%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeapObjectIterator::Next (3 samples, 0.01%)</title><rect x="7.9485%" y="2325" width="0.0144%" height="15" fill="rgb(226,182,46)" fg:x="1661" fg:w="3"/><text x="8.1985%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeapImageDeserializer::DeserializeReadOnlySegment (8 samples, 0.04%)</title><rect x="7.9629%" y="2325" width="0.0383%" height="15" fill="rgb(230,219,10)" fg:x="1664" fg:w="8"/><text x="8.2129%" y="2335.50"></text></g><g><title>deno.exe`memcpy_repmovs() (3 samples, 0.01%)</title><rect x="7.9868%" y="2309" width="0.0144%" height="15" fill="rgb(227,175,30)" fg:x="1669" fg:w="3"/><text x="8.2368%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyDeserializer::DeserializeIntoIsolate (23 samples, 0.11%)</title><rect x="7.8959%" y="2357" width="0.1101%" height="15" fill="rgb(217,2,50)" fg:x="1650" fg:w="23"/><text x="8.1459%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeapImageDeserializer::DeserializeImpl (9 samples, 0.04%)</title><rect x="7.9629%" y="2341" width="0.0431%" height="15" fill="rgb(229,160,0)" fg:x="1664" fg:w="9"/><text x="8.2129%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeap::SetUp (24 samples, 0.11%)</title><rect x="7.8959%" y="2373" width="0.1148%" height="15" fill="rgb(207,78,37)" fg:x="1650" fg:w="24"/><text x="8.1459%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (6 samples, 0.03%)</title><rect x="8.0107%" y="2341" width="0.0287%" height="15" fill="rgb(225,57,0)" fg:x="1674" fg:w="6"/><text x="8.2607%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (6 samples, 0.03%)</title><rect x="8.0107%" y="2325" width="0.0287%" height="15" fill="rgb(232,154,2)" fg:x="1674" fg:w="6"/><text x="8.2607%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate,v8::internal::StringTableInsertionKey&gt; (3 samples, 0.01%)</title><rect x="8.0538%" y="2325" width="0.0144%" height="15" fill="rgb(241,212,25)" fg:x="1683" fg:w="3"/><text x="8.3038%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupKey&lt;v8::internal::StringTableInsertionKey,v8::internal::Isolate&gt; (12 samples, 0.06%)</title><rect x="8.0394%" y="2341" width="0.0574%" height="15" fill="rgb(226,69,20)" fg:x="1680" fg:w="12"/><text x="8.2894%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::StringTable::EnsureCapacity (6 samples, 0.03%)</title><rect x="8.0681%" y="2325" width="0.0287%" height="15" fill="rgb(247,184,54)" fg:x="1686" fg:w="6"/><text x="8.3181%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::StringTable::Data::Resize(v8::internal::PtrComprCageBase, std::Cr::unique_ptr&lt;v8::internal::StringTable::Data,std::Cr::default_delete (6 samples, 0.03%)</title><rect x="8.0681%" y="2309" width="0.0287%" height="15" fill="rgb(210,145,0)" fg:x="1686" fg:w="6"/><text x="8.3181%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::SharedHeapDeserializer::DeserializeIntoIsolate (19 samples, 0.09%)</title><rect x="8.0107%" y="2373" width="0.0909%" height="15" fill="rgb(253,82,12)" fg:x="1674" fg:w="19"/><text x="8.2607%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::SharedHeapDeserializer::DeserializeStringTable (19 samples, 0.09%)</title><rect x="8.0107%" y="2357" width="0.0909%" height="15" fill="rgb(245,42,11)" fg:x="1674" fg:w="19"/><text x="8.2607%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::Rehash (16 samples, 0.08%)</title><rect x="8.1016%" y="2357" width="0.0766%" height="15" fill="rgb(219,147,32)" fg:x="1693" fg:w="16"/><text x="8.3516%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::HeapObject::RehashBasedOnMap&lt;v8::internal::Isolate&gt; (16 samples, 0.08%)</title><rect x="8.1016%" y="2341" width="0.0766%" height="15" fill="rgb(246,12,7)" fg:x="1693" fg:w="16"/><text x="8.3516%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::HashTable&lt;v8::internal::NameToIndexHashTable,v8::internal::NameToIndexShape&gt;::Rehash (16 samples, 0.08%)</title><rect x="8.1016%" y="2325" width="0.0766%" height="15" fill="rgb(243,50,9)" fg:x="1693" fg:w="16"/><text x="8.3516%" y="2335.50"></text></g><g><title>deno.exe`memset_repstos() (16 samples, 0.08%)</title><rect x="8.1830%" y="2229" width="0.0766%" height="15" fill="rgb(219,149,6)" fg:x="1710" fg:w="16"/><text x="8.4330%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="8.3266%" y="2053" width="0.0239%" height="15" fill="rgb(241,51,42)" fg:x="1740" fg:w="5"/><text x="8.5766%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="8.3361%" y="2037" width="0.0144%" height="15" fill="rgb(226,128,27)" fg:x="1742" fg:w="3"/><text x="8.5861%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (14 samples, 0.07%)</title><rect x="8.2883%" y="2149" width="0.0670%" height="15" fill="rgb(244,144,4)" fg:x="1732" fg:w="14"/><text x="8.5383%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (14 samples, 0.07%)</title><rect x="8.2883%" y="2133" width="0.0670%" height="15" fill="rgb(221,4,13)" fg:x="1732" fg:w="14"/><text x="8.5383%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (12 samples, 0.06%)</title><rect x="8.2978%" y="2117" width="0.0574%" height="15" fill="rgb(208,170,28)" fg:x="1734" fg:w="12"/><text x="8.5478%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (9 samples, 0.04%)</title><rect x="8.3122%" y="2101" width="0.0431%" height="15" fill="rgb(226,131,13)" fg:x="1737" fg:w="9"/><text x="8.5622%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (9 samples, 0.04%)</title><rect x="8.3122%" y="2085" width="0.0431%" height="15" fill="rgb(215,72,41)" fg:x="1737" fg:w="9"/><text x="8.5622%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="8.3218%" y="2069" width="0.0335%" height="15" fill="rgb(243,108,20)" fg:x="1739" fg:w="7"/><text x="8.5718%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (19 samples, 0.09%)</title><rect x="8.2691%" y="2181" width="0.0909%" height="15" fill="rgb(230,189,17)" fg:x="1728" fg:w="19"/><text x="8.5191%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (16 samples, 0.08%)</title><rect x="8.2835%" y="2165" width="0.0766%" height="15" fill="rgb(220,50,17)" fg:x="1731" fg:w="16"/><text x="8.5335%" y="2175.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (23 samples, 0.11%)</title><rect x="8.2596%" y="2213" width="0.1101%" height="15" fill="rgb(248,152,48)" fg:x="1726" fg:w="23"/><text x="8.5096%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (21 samples, 0.10%)</title><rect x="8.2691%" y="2197" width="0.1005%" height="15" fill="rgb(244,91,11)" fg:x="1728" fg:w="21"/><text x="8.5191%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (50 samples, 0.24%)</title><rect x="8.1782%" y="2341" width="0.2393%" height="15" fill="rgb(220,157,5)" fg:x="1709" fg:w="50"/><text x="8.4282%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (50 samples, 0.24%)</title><rect x="8.1782%" y="2325" width="0.2393%" height="15" fill="rgb(253,137,8)" fg:x="1709" fg:w="50"/><text x="8.4282%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (50 samples, 0.24%)</title><rect x="8.1782%" y="2309" width="0.2393%" height="15" fill="rgb(217,137,51)" fg:x="1709" fg:w="50"/><text x="8.4282%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (50 samples, 0.24%)</title><rect x="8.1782%" y="2293" width="0.2393%" height="15" fill="rgb(218,209,53)" fg:x="1709" fg:w="50"/><text x="8.4282%" y="2303.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (49 samples, 0.23%)</title><rect x="8.1830%" y="2277" width="0.2345%" height="15" fill="rgb(249,137,25)" fg:x="1710" fg:w="49"/><text x="8.4330%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (49 samples, 0.23%)</title><rect x="8.1830%" y="2261" width="0.2345%" height="15" fill="rgb(239,155,26)" fg:x="1710" fg:w="49"/><text x="8.4330%" y="2271.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (49 samples, 0.23%)</title><rect x="8.1830%" y="2245" width="0.2345%" height="15" fill="rgb(227,85,46)" fg:x="1710" fg:w="49"/><text x="8.4330%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (33 samples, 0.16%)</title><rect x="8.2596%" y="2229" width="0.1579%" height="15" fill="rgb(251,107,43)" fg:x="1726" fg:w="33"/><text x="8.5096%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadVariableRawData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="8.3696%" y="2213" width="0.0479%" height="15" fill="rgb(234,170,33)" fg:x="1749" fg:w="10"/><text x="8.6196%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (51 samples, 0.24%)</title><rect x="8.1782%" y="2357" width="0.2441%" height="15" fill="rgb(206,29,35)" fg:x="1709" fg:w="51"/><text x="8.4282%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="8.4510%" y="2261" width="0.0335%" height="15" fill="rgb(227,138,25)" fg:x="1766" fg:w="7"/><text x="8.7010%" y="2271.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (6 samples, 0.03%)</title><rect x="8.4558%" y="2245" width="0.0287%" height="15" fill="rgb(249,131,35)" fg:x="1767" fg:w="6"/><text x="8.7058%" y="2255.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadVariableRawData&lt;v8::internal::SlotAccessorForHeapObject&gt; (6 samples, 0.03%)</title><rect x="8.4558%" y="2229" width="0.0287%" height="15" fill="rgb(239,6,40)" fg:x="1767" fg:w="6"/><text x="8.7058%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::StartupDeserializer::DeserializeIntoIsolate (81 samples, 0.39%)</title><rect x="8.1016%" y="2373" width="0.3876%" height="15" fill="rgb(246,136,47)" fg:x="1693" fg:w="81"/><text x="8.3516%" y="2383.50"></text></g><g><title>deno.exe`v8::internal::SerializerDeserializer::IterateStartupObjectCache (14 samples, 0.07%)</title><rect x="8.4223%" y="2357" width="0.0670%" height="15" fill="rgb(253,58,26)" fg:x="1760" fg:w="14"/><text x="8.6723%" y="2367.50"></text></g><g><title>deno.exe`v8::internal::RootVisitor::VisitRootPointer (13 samples, 0.06%)</title><rect x="8.4270%" y="2341" width="0.0622%" height="15" fill="rgb(237,141,10)" fg:x="1761" fg:w="13"/><text x="8.6770%" y="2351.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (13 samples, 0.06%)</title><rect x="8.4270%" y="2325" width="0.0622%" height="15" fill="rgb(234,156,12)" fg:x="1761" fg:w="13"/><text x="8.6770%" y="2335.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (12 samples, 0.06%)</title><rect x="8.4318%" y="2309" width="0.0574%" height="15" fill="rgb(243,224,36)" fg:x="1762" fg:w="12"/><text x="8.6818%" y="2319.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (12 samples, 0.06%)</title><rect x="8.4318%" y="2293" width="0.0574%" height="15" fill="rgb(205,229,51)" fg:x="1762" fg:w="12"/><text x="8.6818%" y="2303.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="8.4414%" y="2277" width="0.0479%" height="15" fill="rgb(223,189,4)" fg:x="1764" fg:w="10"/><text x="8.6914%" y="2287.50"></text></g><g><title>deno.exe`v8::Isolate::Initialize (131 samples, 0.63%)</title><rect x="7.8719%" y="2437" width="0.6269%" height="15" fill="rgb(249,167,54)" fg:x="1645" fg:w="131"/><text x="8.1219%" y="2447.50"></text></g><g><title>deno.exe`v8::internal::Snapshot::Initialize (131 samples, 0.63%)</title><rect x="7.8719%" y="2421" width="0.6269%" height="15" fill="rgb(218,34,28)" fg:x="1645" fg:w="131"/><text x="8.1219%" y="2431.50"></text></g><g><title>deno.exe`v8::internal::Isolate::InitWithSnapshot (131 samples, 0.63%)</title><rect x="7.8719%" y="2405" width="0.6269%" height="15" fill="rgb(232,109,42)" fg:x="1645" fg:w="131"/><text x="8.1219%" y="2415.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Init (131 samples, 0.63%)</title><rect x="7.8719%" y="2389" width="0.6269%" height="15" fill="rgb(248,214,46)" fg:x="1645" fg:w="131"/><text x="8.1219%" y="2399.50"></text></g><g><title>deno.exe`deno::tools::check::impl$0::check::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1,395 samples, 6.68%)</title><rect x="1.8280%" y="2533" width="6.6756%" height="15" fill="rgb(244,216,40)" fg:x="382" fg:w="1395"/><text x="2.0780%" y="2543.50">deno.exe`..</text></g><g><title>deno.exe`deno::tsc::exec (1,382 samples, 6.61%)</title><rect x="1.8902%" y="2517" width="6.6134%" height="15" fill="rgb(231,226,31)" fg:x="395" fg:w="1382"/><text x="2.1402%" y="2527.50">deno.exe`..</text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::new (303 samples, 1.45%)</title><rect x="7.0536%" y="2501" width="1.4500%" height="15" fill="rgb(238,38,43)" fg:x="1474" fg:w="303"/><text x="7.3036%" y="2511.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::new_inner (297 samples, 1.42%)</title><rect x="7.0824%" y="2485" width="1.4213%" height="15" fill="rgb(208,88,43)" fg:x="1480" fg:w="297"/><text x="7.3324%" y="2495.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::new (132 samples, 0.63%)</title><rect x="7.8719%" y="2469" width="0.6317%" height="15" fill="rgb(205,136,37)" fg:x="1645" fg:w="132"/><text x="8.1219%" y="2479.50"></text></g><g><title>deno.exe`v8::Isolate::New (132 samples, 0.63%)</title><rect x="7.8719%" y="2453" width="0.6317%" height="15" fill="rgb(237,34,14)" fg:x="1645" fg:w="132"/><text x="8.1219%" y="2463.50"></text></g><g><title>deno.exe`deno::tools::test::check_specifiers::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1,649 samples, 7.89%)</title><rect x="0.6173%" y="2565" width="7.8911%" height="15" fill="rgb(236,193,44)" fg:x="129" fg:w="1649"/><text x="0.8673%" y="2575.50">deno.exe`de..</text></g><g><title>deno.exe`deno::module_loader::impl$0::prepare_module_load::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1,648 samples, 7.89%)</title><rect x="0.6221%" y="2549" width="7.8863%" height="15" fill="rgb(231,48,10)" fg:x="130" fg:w="1648"/><text x="0.8721%" y="2559.50">deno.exe`de..</text></g><g><title>deno.exe`deno::file_fetcher::fetch_local (3 samples, 0.01%)</title><rect x="8.5084%" y="2517" width="0.0144%" height="15" fill="rgb(213,141,34)" fg:x="1778" fg:w="3"/><text x="8.7584%" y="2527.50"></text></g><g><title>deno.exe`deno::tools::test::fetch_specifiers_with_test_mode::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 0.02%)</title><rect x="8.5084%" y="2565" width="0.0191%" height="15" fill="rgb(249,130,34)" fg:x="1778" fg:w="4"/><text x="8.7584%" y="2575.50"></text></g><g><title>deno.exe`deno::file_fetcher::impl$1::fetch::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 0.02%)</title><rect x="8.5084%" y="2549" width="0.0191%" height="15" fill="rgb(219,42,41)" fg:x="1778" fg:w="4"/><text x="8.7584%" y="2559.50"></text></g><g><title>deno.exe`deno::file_fetcher::impl$1::fetch_with_accept::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (4 samples, 0.02%)</title><rect x="8.5084%" y="2533" width="0.0191%" height="15" fill="rgb(224,100,54)" fg:x="1778" fg:w="4"/><text x="8.7584%" y="2543.50"></text></g><g><title>deno.exe`deno::tools::test::test_specifiers::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (3 samples, 0.01%)</title><rect x="8.5275%" y="2565" width="0.0144%" height="15" fill="rgb(229,200,27)" fg:x="1782" fg:w="3"/><text x="8.7775%" y="2575.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(core::ptr::non_null::NonNull (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2869" width="8.0921%" height="15" fill="rgb(217,118,10)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2879.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2853" width="8.0921%" height="15" fill="rgb(206,22,3)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2863.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll_inner&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2837" width="8.0921%" height="15" fill="rgb(232,163,46)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2847.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2821" width="8.0921%" height="15" fill="rgb(206,95,13)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2831.50">deno.exe`to..</text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2805" width="8.0921%" height="15" fill="rgb(253,154,18)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2815.50">deno.exe`st..</text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2789" width="8.0921%" height="15" fill="rgb(219,32,23)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2799.50">deno.exe`st..</text></g><g><title>deno.exe`Unknown (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2773" width="8.0921%" height="15" fill="rgb(230,191,45)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2783.50">deno.exe`Un..</text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2757" width="8.0921%" height="15" fill="rgb(229,64,36)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2767.50">deno.exe`st..</text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2741" width="8.0921%" height="15" fill="rgb(205,129,25)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2751.50">deno.exe`co..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2725" width="8.0921%" height="15" fill="rgb(254,112,7)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2735.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2709" width="8.0921%" height="15" fill="rgb(226,53,48)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2719.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2693" width="8.0921%" height="15" fill="rgb(214,153,38)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2703.50">deno.exe`to..</text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2677" width="8.0921%" height="15" fill="rgb(243,101,7)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2687.50">deno.exe`to..</text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2661" width="8.0921%" height="15" fill="rgb(240,140,22)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2671.50">deno.exe`co..</text></g><g><title>deno.exe`deno_core::task::impl$6::poll&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;deno_core::task::MaskFutureAsSend&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2645" width="8.0921%" height="15" fill="rgb(235,114,2)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2655.50">deno.exe`de..</text></g><g><title>deno.exe`futures_util::future::future::impl$15::poll&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::future::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2629" width="8.0921%" height="15" fill="rgb(242,59,12)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2639.50">deno.exe`fu..</text></g><g><title>deno.exe`futures_util::future::future::map::impl$2::poll&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;futures_util::future::future::map::Map&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,deno::spawn_subcommand::closure_env$0&lt;enum2$&lt;deno::run_subcommand::async_fn$0::async_block_env$18&gt;,enum2$&lt;core::result::Result&lt;tuple$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2613" width="8.0921%" height="15" fill="rgb(252,134,9)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2623.50">deno.exe`fu..</text></g><g><title>deno.exe`deno::run_subcommand::async_fn$0::async_block$18(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2597" width="8.0921%" height="15" fill="rgb(236,4,44)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2607.50">deno.exe`de..</text></g><g><title>deno.exe`deno::tools::test::run_tests::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (1,691 samples, 8.09%)</title><rect x="0.4546%" y="2581" width="8.0921%" height="15" fill="rgb(254,172,41)" fg:x="95" fg:w="1691"/><text x="0.7046%" y="2591.50">deno.exe`de..</text></g><g><title>deno.exe`deno_runtime::tokio_util::create_and_run_current_thread_inner(enum2$ (1,751 samples, 8.38%)</title><rect x="0.2106%" y="3125" width="8.3792%" height="15" fill="rgb(244,63,20)" fg:x="44" fg:w="1751"/><text x="0.4606%" y="3135.50">deno.exe`den..</text></g><g><title>deno.exe`tokio::runtime::runtime::Runtime::block_on&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;(tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,743 samples, 8.34%)</title><rect x="0.2488%" y="3109" width="8.3409%" height="15" fill="rgb(250,73,31)" fg:x="52" fg:w="1743"/><text x="0.4988%" y="3119.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CurrentThread::block_on&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,743 samples, 8.34%)</title><rect x="0.2488%" y="3093" width="8.3409%" height="15" fill="rgb(241,38,36)" fg:x="52" fg:w="1743"/><text x="0.4988%" y="3103.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CoreGuard::block_on&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::CoreGuard, core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,743 samples, 8.34%)</title><rect x="0.2488%" y="3077" width="8.3409%" height="15" fill="rgb(245,211,2)" fg:x="52" fg:w="1743"/><text x="0.4988%" y="3087.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::CoreGuard, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,743 samples, 8.34%)</title><rect x="0.2488%" y="3061" width="8.3409%" height="15" fill="rgb(206,120,28)" fg:x="52" fg:w="1743"/><text x="0.4988%" y="3071.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::macros::scoped_tls::ScopedKey&lt;tokio::runtime::scheduler::current_thread::Context&gt;::set&lt;tokio::runtime::scheduler::current_thread::Context,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;,tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Context*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,743 samples, 8.34%)</title><rect x="0.2488%" y="3045" width="8.3409%" height="15" fill="rgb(211,59,34)" fg:x="52" fg:w="1743"/><text x="0.4988%" y="3055.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::enter::closure$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,742 samples, 8.34%)</title><rect x="0.2536%" y="3029" width="8.3361%" height="15" fill="rgb(233,168,5)" fg:x="53" fg:w="1742"/><text x="0.5036%" y="3039.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,742 samples, 8.34%)</title><rect x="0.2536%" y="3013" width="8.3361%" height="15" fill="rgb(234,33,13)" fg:x="53" fg:w="1742"/><text x="0.5036%" y="3023.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::run_task&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,739 samples, 8.32%)</title><rect x="0.2680%" y="2997" width="8.3218%" height="15" fill="rgb(231,150,26)" fg:x="56" fg:w="1739"/><text x="0.5180%" y="3007.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::enter&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,739 samples, 8.32%)</title><rect x="0.2680%" y="2981" width="8.3218%" height="15" fill="rgb(217,191,4)" fg:x="56" fg:w="1739"/><text x="0.5180%" y="2991.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$3::run_task::closure$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,738 samples, 8.32%)</title><rect x="0.2728%" y="2965" width="8.3170%" height="15" fill="rgb(246,198,38)" fg:x="57" fg:w="1738"/><text x="0.5228%" y="2975.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,737 samples, 8.31%)</title><rect x="0.2776%" y="2949" width="8.3122%" height="15" fill="rgb(245,64,37)" fg:x="58" fg:w="1737"/><text x="0.5276%" y="2959.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,736 samples, 8.31%)</title><rect x="0.2823%" y="2933" width="8.3074%" height="15" fill="rgb(250,30,36)" fg:x="59" fg:w="1736"/><text x="0.5323%" y="2943.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;i32,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result (1,736 samples, 8.31%)</title><rect x="0.2823%" y="2917" width="8.3074%" height="15" fill="rgb(217,86,53)" fg:x="59" fg:w="1736"/><text x="0.5323%" y="2927.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::task::LocalNotified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::run&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::LocalNotified&lt;alloc::sync::Arc (1,736 samples, 8.31%)</title><rect x="0.2823%" y="2901" width="8.3074%" height="15" fill="rgb(228,157,16)" fg:x="59" fg:w="1736"/><text x="0.5323%" y="2911.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::task::raw::RawTask::poll (1,736 samples, 8.31%)</title><rect x="0.2823%" y="2885" width="8.3074%" height="15" fill="rgb(217,59,31)" fg:x="59" fg:w="1736"/><text x="0.5323%" y="2895.50">deno.exe`tok..</text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(core::ptr::non_null::NonNull (8 samples, 0.04%)</title><rect x="8.5515%" y="2869" width="0.0383%" height="15" fill="rgb(237,138,41)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2879.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::Harness&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2853" width="0.0383%" height="15" fill="rgb(227,91,49)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2863.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll_inner&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (8 samples, 0.04%)</title><rect x="8.5515%" y="2837" width="0.0383%" height="15" fill="rgb(247,21,44)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2847.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::Core&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2821" width="0.0383%" height="15" fill="rgb(219,210,51)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2831.50"></text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2805" width="0.0383%" height="15" fill="rgb(209,140,6)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2815.50"></text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2789" width="0.0383%" height="15" fill="rgb(221,188,24)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2799.50"></text></g><g><title>deno.exe`Unknown (8 samples, 0.04%)</title><rect x="8.5515%" y="2773" width="0.0383%" height="15" fill="rgb(232,154,20)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2783.50"></text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (8 samples, 0.04%)</title><rect x="8.5515%" y="2757" width="0.0383%" height="15" fill="rgb(244,137,50)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2767.50"></text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2741" width="0.0383%" height="15" fill="rgb(225,185,43)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2751.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2725" width="0.0383%" height="15" fill="rgb(213,205,38)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2735.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (8 samples, 0.04%)</title><rect x="8.5515%" y="2709" width="0.0383%" height="15" fill="rgb(236,73,12)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2719.50"></text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc (8 samples, 0.04%)</title><rect x="8.5515%" y="2693" width="0.0383%" height="15" fill="rgb(235,219,13)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2703.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (8 samples, 0.04%)</title><rect x="8.5515%" y="2677" width="0.0383%" height="15" fill="rgb(218,59,36)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2687.50"></text></g><g><title>deno.exe`deno_core::task::impl$6::poll&lt;enum2$&lt;deno::tools::test::test_specifiers::async_fn$0::async_block_env$2&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (8 samples, 0.04%)</title><rect x="8.5515%" y="2661" width="0.0383%" height="15" fill="rgb(205,110,39)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2671.50"></text></g><g><title>deno.exe`deno::tools::test::test_specifiers::async_fn$0::async_block$2(core::pin::Pin&lt;ref_mut$&lt;enum2$ (8 samples, 0.04%)</title><rect x="8.5515%" y="2645" width="0.0383%" height="15" fill="rgb(218,206,42)" fg:x="1787" fg:w="8"/><text x="8.8015%" y="2655.50"></text></g><g><title>deno.exe`deno_runtime::tokio_util::create_and_run_current_thread_with_maybe_metrics(enum2$ (1,752 samples, 8.38%)</title><rect x="0.2106%" y="3141" width="8.3840%" height="15" fill="rgb(248,125,24)" fg:x="44" fg:w="1752"/><text x="0.4606%" y="3151.50">deno.exe`den..</text></g><g><title>deno.exe`__scrt_common_main_seh() (1,762 samples, 8.43%)</title><rect x="0.1866%" y="3365" width="8.4318%" height="15" fill="rgb(242,28,27)" fg:x="39" fg:w="1762"/><text x="0.4366%" y="3375.50">deno.exe`__s..</text></g><g><title>deno.exe`invoke_main() (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3349" width="8.4223%" height="15" fill="rgb(216,228,15)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3359.50">deno.exe`inv..</text></g><g><title>deno.exe`main (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3333" width="8.4223%" height="15" fill="rgb(235,116,46)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3343.50">deno.exe`main</text></g><g><title>deno.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*) (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3317" width="8.4223%" height="15" fill="rgb(224,18,32)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3327.50">deno.exe`std..</text></g><g><title>deno.exe`std::rt::lang_start_internal (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3301" width="8.4223%" height="15" fill="rgb(252,5,12)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3311.50">deno.exe`std..</text></g><g><title>deno.exe`std::panic::catch_unwind (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3285" width="8.4223%" height="15" fill="rgb(251,36,5)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3295.50">deno.exe`std..</text></g><g><title>deno.exe`std::panicking::try (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3269" width="8.4223%" height="15" fill="rgb(217,53,14)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3279.50">deno.exe`std..</text></g><g><title>deno.exe`std::panicking::try::do_call (1,760 samples, 8.42%)</title><rect x="0.1962%" y="3253" width="8.4223%" height="15" fill="rgb(215,86,45)" fg:x="41" fg:w="1760"/><text x="0.4462%" y="3263.50">deno.exe`std..</text></g><g><title>deno.exe`std::rt::lang_start_internal::closure$2 (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3237" width="8.4175%" height="15" fill="rgb(242,169,11)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3247.50">deno.exe`std..</text></g><g><title>deno.exe`std::panic::catch_unwind (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3221" width="8.4175%" height="15" fill="rgb(211,213,45)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3231.50">deno.exe`std..</text></g><g><title>deno.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3205" width="8.4175%" height="15" fill="rgb(205,88,11)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3215.50">deno.exe`std..</text></g><g><title>deno.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3189" width="8.4175%" height="15" fill="rgb(252,69,26)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3199.50">deno.exe`std..</text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3173" width="8.4175%" height="15" fill="rgb(246,123,37)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3183.50">deno.exe`cor..</text></g><g><title>deno.exe`deno::main (1,759 samples, 8.42%)</title><rect x="0.2010%" y="3157" width="8.4175%" height="15" fill="rgb(212,205,5)" fg:x="42" fg:w="1759"/><text x="0.4510%" y="3167.50">deno.exe`den..</text></g><g><title>deno.exe`std::process::exit (5 samples, 0.02%)</title><rect x="8.5945%" y="3141" width="0.0239%" height="15" fill="rgb(253,148,0)" fg:x="1796" fg:w="5"/><text x="8.8445%" y="3151.50"></text></g><g><title>deno.exe`std::sys::windows::os::exit (5 samples, 0.02%)</title><rect x="8.5945%" y="3125" width="0.0239%" height="15" fill="rgb(239,22,4)" fg:x="1796" fg:w="5"/><text x="8.8445%" y="3135.50"></text></g><g><title>`0x7FFAA0D182AB (5 samples, 0.02%)</title><rect x="8.5945%" y="3109" width="0.0239%" height="15" fill="rgb(226,26,53)" fg:x="1796" fg:w="5"/><text x="8.8445%" y="3119.50"></text></g><g><title>`0x7FFAA21E0C8D (4 samples, 0.02%)</title><rect x="8.5993%" y="3093" width="0.0191%" height="15" fill="rgb(225,229,45)" fg:x="1797" fg:w="4"/><text x="8.8493%" y="3103.50"></text></g><g><title>`0x7FFAA21E1096 (4 samples, 0.02%)</title><rect x="8.5993%" y="3077" width="0.0191%" height="15" fill="rgb(220,60,37)" fg:x="1797" fg:w="4"/><text x="8.8493%" y="3087.50"></text></g><g><title>`0x7FFAA21B868F (4 samples, 0.02%)</title><rect x="8.5993%" y="3061" width="0.0191%" height="15" fill="rgb(217,180,35)" fg:x="1797" fg:w="4"/><text x="8.8493%" y="3071.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="8.6376%" y="3093" width="0.0144%" height="15" fill="rgb(229,7,53)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3103.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="3077" width="0.0144%" height="15" fill="rgb(254,137,3)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3087.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (3 samples, 0.01%)</title><rect x="8.6376%" y="3061" width="0.0144%" height="15" fill="rgb(215,140,41)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3071.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="3045" width="0.0144%" height="15" fill="rgb(250,80,15)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3055.50"></text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="3029" width="0.0144%" height="15" fill="rgb(252,191,6)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3039.50"></text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="3013" width="0.0144%" height="15" fill="rgb(246,217,18)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3023.50"></text></g><g><title>deno.exe`Unknown (3 samples, 0.01%)</title><rect x="8.6376%" y="2997" width="0.0144%" height="15" fill="rgb(223,93,7)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="3007.50"></text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="8.6376%" y="2981" width="0.0144%" height="15" fill="rgb(225,55,52)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2991.50"></text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2965" width="0.0144%" height="15" fill="rgb(240,31,24)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2975.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2949" width="0.0144%" height="15" fill="rgb(205,56,52)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2959.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (3 samples, 0.01%)</title><rect x="8.6376%" y="2933" width="0.0144%" height="15" fill="rgb(246,146,12)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2943.50"></text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2917" width="0.0144%" height="15" fill="rgb(239,84,36)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2927.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2901" width="0.0144%" height="15" fill="rgb(207,41,40)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2911.50"></text></g><g><title>deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt;,deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2885" width="0.0144%" height="15" fill="rgb(241,179,25)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2895.50"></text></g><g><title>deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$&lt;&gt; &gt;(deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$1::drop::closure_env$0,tuple$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2869" width="0.0144%" height="15" fill="rgb(210,0,34)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2879.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$1::drop::closure$0 (3 samples, 0.01%)</title><rect x="8.6376%" y="2853" width="0.0144%" height="15" fill="rgb(225,217,29)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2863.50"></text></g><g><title>deno.exe`core::mem::drop&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt; &gt;(enum2$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2837" width="0.0144%" height="15" fill="rgb(216,191,38)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2847.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt; &gt;(enum2$ (3 samples, 0.01%)</title><rect x="8.6376%" y="2821" width="0.0144%" height="15" fill="rgb(232,140,52)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2831.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;rusqlite::Connection&gt; (3 samples, 0.01%)</title><rect x="8.6376%" y="2805" width="0.0144%" height="15" fill="rgb(223,158,51)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2815.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;rusqlite::inner_connection::InnerConnection&gt; &gt;(core::cell::RefCell (3 samples, 0.01%)</title><rect x="8.6376%" y="2789" width="0.0144%" height="15" fill="rgb(235,29,51)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2799.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rusqlite::inner_connection::InnerConnection&gt; &gt;(core::cell::UnsafeCell (3 samples, 0.01%)</title><rect x="8.6376%" y="2773" width="0.0144%" height="15" fill="rgb(215,181,18)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2783.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;rusqlite::inner_connection::InnerConnection&gt; (3 samples, 0.01%)</title><rect x="8.6376%" y="2757" width="0.0144%" height="15" fill="rgb(227,125,34)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2767.50"></text></g><g><title>deno.exe`rusqlite::inner_connection::impl$2::drop (3 samples, 0.01%)</title><rect x="8.6376%" y="2741" width="0.0144%" height="15" fill="rgb(230,197,49)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2751.50"></text></g><g><title>deno.exe`rusqlite::inner_connection::InnerConnection::close (3 samples, 0.01%)</title><rect x="8.6376%" y="2725" width="0.0144%" height="15" fill="rgb(239,141,16)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2735.50"></text></g><g><title>deno.exe`sqlite3_close(sqlite3*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2709" width="0.0144%" height="15" fill="rgb(225,105,43)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2719.50"></text></g><g><title>deno.exe`sqlite3Close(sqlite3*, int) (3 samples, 0.01%)</title><rect x="8.6376%" y="2693" width="0.0144%" height="15" fill="rgb(214,131,14)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2703.50"></text></g><g><title>deno.exe`sqlite3LeaveMutexAndCloseZombie(sqlite3*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2677" width="0.0144%" height="15" fill="rgb(229,177,11)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2687.50"></text></g><g><title>deno.exe`sqlite3BtreeClose(Btree*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2661" width="0.0144%" height="15" fill="rgb(231,180,14)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2671.50"></text></g><g><title>deno.exe`sqlite3PagerClose(Pager*, sqlite3*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2645" width="0.0144%" height="15" fill="rgb(232,88,2)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2655.50"></text></g><g><title>deno.exe`sqlite3OsClose(sqlite3_file*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2629" width="0.0144%" height="15" fill="rgb(205,220,8)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2639.50"></text></g><g><title>deno.exe`winClose(sqlite3_file*) (3 samples, 0.01%)</title><rect x="8.6376%" y="2613" width="0.0144%" height="15" fill="rgb(225,23,53)" fg:x="1805" fg:w="3"/><text x="8.8876%" y="2623.50"></text></g><g><title>`0x7FFA9F7D477C (3 samples, 0.01%)</title><rect x="8.6807%" y="2501" width="0.0144%" height="15" fill="rgb(213,62,29)" fg:x="1814" fg:w="3"/><text x="8.9307%" y="2511.50"></text></g><g><title>`0x7FFA9F7D4E10 (3 samples, 0.01%)</title><rect x="8.6807%" y="2485" width="0.0144%" height="15" fill="rgb(227,75,7)" fg:x="1814" fg:w="3"/><text x="8.9307%" y="2495.50"></text></g><g><title>`0x7FFAA222F7F4 (3 samples, 0.01%)</title><rect x="8.6807%" y="2469" width="0.0144%" height="15" fill="rgb(207,105,14)" fg:x="1814" fg:w="3"/><text x="8.9307%" y="2479.50"></text></g><g><title>deno.exe`sqlite3PagerOpen(sqlite3_vfs*, Pager**, char const*, int, int, int, void (*)(PgHdr*)) (4 samples, 0.02%)</title><rect x="8.6807%" y="2549" width="0.0191%" height="15" fill="rgb(245,62,29)" fg:x="1814" fg:w="4"/><text x="8.9307%" y="2559.50"></text></g><g><title>deno.exe`sqlite3OsOpen(sqlite3_vfs*, char const*, sqlite3_file*, int, int*) (4 samples, 0.02%)</title><rect x="8.6807%" y="2533" width="0.0191%" height="15" fill="rgb(236,202,4)" fg:x="1814" fg:w="4"/><text x="8.9307%" y="2543.50"></text></g><g><title>deno.exe`winOpen(sqlite3_vfs*, char const*, sqlite3_file*, int, int*) (4 samples, 0.02%)</title><rect x="8.6807%" y="2517" width="0.0191%" height="15" fill="rgb(250,67,1)" fg:x="1814" fg:w="4"/><text x="8.9307%" y="2527.50"></text></g><g><title>deno.exe`sqlite3BtreeOpen(sqlite3_vfs*, char const*, sqlite3*, Btree**, int, int) (5 samples, 0.02%)</title><rect x="8.6807%" y="2565" width="0.0239%" height="15" fill="rgb(253,115,44)" fg:x="1814" fg:w="5"/><text x="8.9307%" y="2575.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::actually_open_connection(enum2$&lt;core::option::Option (11 samples, 0.05%)</title><rect x="8.6615%" y="2661" width="0.0526%" height="15" fill="rgb(251,139,18)" fg:x="1810" fg:w="11"/><text x="8.9115%" y="2671.50"></text></g><g><title>deno.exe`rusqlite::Connection::open&lt;ref$&lt;std::path::PathBuf&gt; &gt; (11 samples, 0.05%)</title><rect x="8.6615%" y="2645" width="0.0526%" height="15" fill="rgb(218,22,32)" fg:x="1810" fg:w="11"/><text x="8.9115%" y="2655.50"></text></g><g><title>deno.exe`rusqlite::Connection::open_with_flags&lt;ref$&lt;std::path::PathBuf&gt; &gt; (11 samples, 0.05%)</title><rect x="8.6615%" y="2629" width="0.0526%" height="15" fill="rgb(243,53,5)" fg:x="1810" fg:w="11"/><text x="8.9115%" y="2639.50"></text></g><g><title>deno.exe`rusqlite::inner_connection::InnerConnection::open_with_flags(ref$&lt;core::ffi::c_str::CStr&gt;, rusqlite::OpenFlags, enum2$&lt;core::option::Option&lt;ref$ (11 samples, 0.05%)</title><rect x="8.6615%" y="2613" width="0.0526%" height="15" fill="rgb(227,56,16)" fg:x="1810" fg:w="11"/><text x="8.9115%" y="2623.50"></text></g><g><title>deno.exe`sqlite3_open_v2(char const*, sqlite3**, int, char const*) (7 samples, 0.03%)</title><rect x="8.6807%" y="2597" width="0.0335%" height="15" fill="rgb(245,53,0)" fg:x="1814" fg:w="7"/><text x="8.9307%" y="2607.50"></text></g><g><title>deno.exe`openDatabase(char const*, sqlite3**, unsigned int, char const*) (7 samples, 0.03%)</title><rect x="8.6807%" y="2581" width="0.0335%" height="15" fill="rgb(216,170,35)" fg:x="1814" fg:w="7"/><text x="8.9307%" y="2591.50"></text></g><g><title>deno.exe`rusqlite::Connection::prepare(ref$ (6 samples, 0.03%)</title><rect x="8.7142%" y="2629" width="0.0287%" height="15" fill="rgb(211,200,8)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2639.50"></text></g><g><title>deno.exe`rusqlite::inner_connection::InnerConnection::prepare(rusqlite::Connection*, ref$ (6 samples, 0.03%)</title><rect x="8.7142%" y="2613" width="0.0287%" height="15" fill="rgb(228,204,44)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2623.50"></text></g><g><title>deno.exe`sqlite3_prepare_v2(sqlite3*, char const*, int, sqlite3_stmt**, char const**) (6 samples, 0.03%)</title><rect x="8.7142%" y="2597" width="0.0287%" height="15" fill="rgb(214,121,17)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2607.50"></text></g><g><title>deno.exe`sqlite3LockAndPrepare(sqlite3*, char const*, int, unsigned int, Vdbe*, sqlite3_stmt**, char const**) (6 samples, 0.03%)</title><rect x="8.7142%" y="2581" width="0.0287%" height="15" fill="rgb(233,64,38)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2591.50"></text></g><g><title>deno.exe`sqlite3Prepare(sqlite3*, char const*, int, unsigned int, Vdbe*, sqlite3_stmt**, char const**) (6 samples, 0.03%)</title><rect x="8.7142%" y="2565" width="0.0287%" height="15" fill="rgb(253,54,19)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2575.50"></text></g><g><title>deno.exe`sqlite3RunParser(Parse*, char const*) (6 samples, 0.03%)</title><rect x="8.7142%" y="2549" width="0.0287%" height="15" fill="rgb(253,94,18)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2559.50"></text></g><g><title>deno.exe`sqlite3Parser(void*, int, Token) (6 samples, 0.03%)</title><rect x="8.7142%" y="2533" width="0.0287%" height="15" fill="rgb(227,57,52)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2543.50"></text></g><g><title>deno.exe`yy_reduce(yyParser*, unsigned int, int, Token, Parse*) (6 samples, 0.03%)</title><rect x="8.7142%" y="2517" width="0.0287%" height="15" fill="rgb(230,228,50)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2527.50"></text></g><g><title>deno.exe`sqlite3Pragma(Parse*, Token*, Token*, Token*, int) (6 samples, 0.03%)</title><rect x="8.7142%" y="2501" width="0.0287%" height="15" fill="rgb(217,205,27)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2511.50"></text></g><g><title>deno.exe`sqlite3ReadSchema(Parse*) (6 samples, 0.03%)</title><rect x="8.7142%" y="2485" width="0.0287%" height="15" fill="rgb(252,71,50)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2495.50"></text></g><g><title>deno.exe`sqlite3Init(sqlite3*, char**) (6 samples, 0.03%)</title><rect x="8.7142%" y="2469" width="0.0287%" height="15" fill="rgb(209,86,4)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2479.50"></text></g><g><title>deno.exe`sqlite3InitOne(sqlite3*, int, char**, unsigned int) (6 samples, 0.03%)</title><rect x="8.7142%" y="2453" width="0.0287%" height="15" fill="rgb(229,94,0)" fg:x="1821" fg:w="6"/><text x="8.9642%" y="2463.50"></text></g><g><title>deno.exe`sqlite3_exec(sqlite3*, char const*, int (*)(void*, int, char**, char**), void*, char**) (3 samples, 0.01%)</title><rect x="8.7285%" y="2437" width="0.0144%" height="15" fill="rgb(252,223,21)" fg:x="1824" fg:w="3"/><text x="8.9785%" y="2447.50"></text></g><g><title>deno.exe`sqlite3BtreeClearTable(Btree*, int, long long*) (4 samples, 0.02%)</title><rect x="8.7525%" y="2549" width="0.0191%" height="15" fill="rgb(230,210,4)" fg:x="1829" fg:w="4"/><text x="9.0025%" y="2559.50"></text></g><g><title>deno.exe`clearDatabasePage(BtShared*, unsigned int, int, long long*) (4 samples, 0.02%)</title><rect x="8.7525%" y="2533" width="0.0191%" height="15" fill="rgb(240,149,38)" fg:x="1829" fg:w="4"/><text x="9.0025%" y="2543.50"></text></g><g><title>deno.exe`sqlite3PagerWrite(PgHdr*) (4 samples, 0.02%)</title><rect x="8.7525%" y="2517" width="0.0191%" height="15" fill="rgb(254,105,20)" fg:x="1829" fg:w="4"/><text x="9.0025%" y="2527.50"></text></g><g><title>deno.exe`pager_write(PgHdr*) (4 samples, 0.02%)</title><rect x="8.7525%" y="2501" width="0.0191%" height="15" fill="rgb(253,87,46)" fg:x="1829" fg:w="4"/><text x="9.0025%" y="2511.50"></text></g><g><title>deno.exe`pager_open_journal(Pager*) (3 samples, 0.01%)</title><rect x="8.7572%" y="2485" width="0.0144%" height="15" fill="rgb(253,116,33)" fg:x="1830" fg:w="3"/><text x="9.0072%" y="2495.50"></text></g><g><title>deno.exe`sqlite3BtreeCommitPhaseOne(Btree*, char const*) (3 samples, 0.01%)</title><rect x="8.7716%" y="2517" width="0.0144%" height="15" fill="rgb(229,198,5)" fg:x="1833" fg:w="3"/><text x="9.0216%" y="2527.50"></text></g><g><title>deno.exe`sqlite3PagerCommitPhaseOne(Pager*, char const*, int) (3 samples, 0.01%)</title><rect x="8.7716%" y="2501" width="0.0144%" height="15" fill="rgb(242,38,37)" fg:x="1833" fg:w="3"/><text x="9.0216%" y="2511.50"></text></g><g><title>deno.exe`rusqlite::Connection::execute_batch(ref$ (16 samples, 0.08%)</title><rect x="8.7142%" y="2645" width="0.0766%" height="15" fill="rgb(242,69,53)" fg:x="1821" fg:w="16"/><text x="8.9642%" y="2655.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::step (10 samples, 0.05%)</title><rect x="8.7429%" y="2629" width="0.0479%" height="15" fill="rgb(249,80,16)" fg:x="1827" fg:w="10"/><text x="8.9929%" y="2639.50"></text></g><g><title>deno.exe`rusqlite::raw_statement::RawStatement::step (10 samples, 0.05%)</title><rect x="8.7429%" y="2613" width="0.0479%" height="15" fill="rgb(206,128,11)" fg:x="1827" fg:w="10"/><text x="8.9929%" y="2623.50"></text></g><g><title>deno.exe`sqlite3_step(sqlite3_stmt*) (10 samples, 0.05%)</title><rect x="8.7429%" y="2597" width="0.0479%" height="15" fill="rgb(212,35,20)" fg:x="1827" fg:w="10"/><text x="8.9929%" y="2607.50"></text></g><g><title>deno.exe`sqlite3Step(Vdbe*) (10 samples, 0.05%)</title><rect x="8.7429%" y="2581" width="0.0479%" height="15" fill="rgb(236,79,13)" fg:x="1827" fg:w="10"/><text x="8.9929%" y="2591.50"></text></g><g><title>deno.exe`sqlite3VdbeExec(Vdbe*) (10 samples, 0.05%)</title><rect x="8.7429%" y="2565" width="0.0479%" height="15" fill="rgb(233,123,3)" fg:x="1827" fg:w="10"/><text x="8.9929%" y="2575.50"></text></g><g><title>deno.exe`sqlite3VdbeHalt(Vdbe*) (4 samples, 0.02%)</title><rect x="8.7716%" y="2549" width="0.0191%" height="15" fill="rgb(214,93,52)" fg:x="1833" fg:w="4"/><text x="9.0216%" y="2559.50"></text></g><g><title>deno.exe`vdbeCommit(sqlite3*, Vdbe*) (4 samples, 0.02%)</title><rect x="8.7716%" y="2533" width="0.0191%" height="15" fill="rgb(251,37,40)" fg:x="1833" fg:w="4"/><text x="9.0216%" y="2543.50"></text></g><g><title>deno.exe`rusqlite::Connection::query_row&lt;alloc::string::String,array$&lt;ref$&lt;dyn$&lt;rusqlite::types::to_sql::ToSql,core::marker::Send,core::marker::Sync&gt; &gt;,0&gt;,deno::cache::cache_db::impl$2::initialize_connection::closure_env$0&gt;(ref$&lt;str$&gt;, ref$&lt;dyn$ (3 samples, 0.01%)</title><rect x="8.7907%" y="2645" width="0.0144%" height="15" fill="rgb(227,80,54)" fg:x="1837" fg:w="3"/><text x="9.0407%" y="2655.50"></text></g><g><title>deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt;,deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (36 samples, 0.17%)</title><rect x="8.6520%" y="2885" width="0.1723%" height="15" fill="rgb(254,48,11)" fg:x="1808" fg:w="36"/><text x="8.9020%" y="2895.50"></text></g><g><title>deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt;(deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (36 samples, 0.17%)</title><rect x="8.6520%" y="2869" width="0.1723%" height="15" fill="rgb(235,193,26)" fg:x="1808" fg:w="36"/><text x="8.9020%" y="2879.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure$0 (36 samples, 0.17%)</title><rect x="8.6520%" y="2853" width="0.1723%" height="15" fill="rgb(229,99,21)" fg:x="1808" fg:w="36"/><text x="8.9020%" y="2863.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::initialize(lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,once_cell::sync::OnceCell&lt;enum2$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2837" width="0.1627%" height="15" fill="rgb(211,140,41)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2847.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt; &gt;::get_or_init&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt; (34 samples, 0.16%)</title><rect x="8.6615%" y="2821" width="0.1627%" height="15" fill="rgb(240,227,30)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2831.50"></text></g><g><title>deno.exe`once_cell::sync::OnceCell&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt; &gt;::get_or_try_init&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2805" width="0.1627%" height="15" fill="rgb(215,224,45)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2815.50"></text></g><g><title>deno.exe`once_cell::imp::OnceCell&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt; &gt;::initialize&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2789" width="0.1627%" height="15" fill="rgb(206,123,31)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2799.50"></text></g><g><title>deno.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2773" width="0.1627%" height="15" fill="rgb(210,138,16)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2783.50"></text></g><g><title>deno.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;&gt;,dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$&lt;Output,bool&gt; &gt; &gt; &gt;(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2757" width="0.1627%" height="15" fill="rgb(228,57,28)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2767.50"></text></g><g><title>deno.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt;,enum2$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2741" width="0.1627%" height="15" fill="rgb(242,170,10)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2751.50"></text></g><g><title>deno.exe`once_cell::sync::impl$6::get_or_init::closure$0&lt;enum2$&lt;deno::cache::cache_db::ConnectionState&gt;,deno::cache::cache_db::impl$2::initialize::closure_env$0&gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$ (34 samples, 0.16%)</title><rect x="8.6615%" y="2725" width="0.1627%" height="15" fill="rgb(228,214,39)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2735.50"></text></g><g><title>deno.exe`deno::cache::cache_db::impl$2::initialize::closure$0 (34 samples, 0.16%)</title><rect x="8.6615%" y="2709" width="0.1627%" height="15" fill="rgb(218,179,33)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2719.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::open_connection (34 samples, 0.16%)</title><rect x="8.6615%" y="2693" width="0.1627%" height="15" fill="rgb(235,193,39)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2703.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::open_connection_and_init(enum2$&lt;core::option::Option (34 samples, 0.16%)</title><rect x="8.6615%" y="2677" width="0.1627%" height="15" fill="rgb(219,221,36)" fg:x="1810" fg:w="34"/><text x="8.9115%" y="2687.50"></text></g><g><title>deno.exe`deno::cache::cache_db::CacheDB::initialize_connection(deno::cache::cache_db::CacheDBConfiguration*, rusqlite::Connection*, ref$ (23 samples, 0.11%)</title><rect x="8.7142%" y="2661" width="0.1101%" height="15" fill="rgb(248,218,19)" fg:x="1821" fg:w="23"/><text x="8.9642%" y="2671.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute&lt;array$&lt;ref$&lt;str$&gt;,2&gt; &gt;(ref$ (4 samples, 0.02%)</title><rect x="8.8051%" y="2645" width="0.0191%" height="15" fill="rgb(205,50,9)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2655.50"></text></g><g><title>deno.exe`rusqlite::statement::Statement::execute_with_bound_parameters (4 samples, 0.02%)</title><rect x="8.8051%" y="2629" width="0.0191%" height="15" fill="rgb(238,81,28)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2639.50"></text></g><g><title>deno.exe`rusqlite::raw_statement::RawStatement::step (4 samples, 0.02%)</title><rect x="8.8051%" y="2613" width="0.0191%" height="15" fill="rgb(235,110,19)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2623.50"></text></g><g><title>deno.exe`sqlite3_step(sqlite3_stmt*) (4 samples, 0.02%)</title><rect x="8.8051%" y="2597" width="0.0191%" height="15" fill="rgb(214,7,14)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2607.50"></text></g><g><title>deno.exe`sqlite3Step(Vdbe*) (4 samples, 0.02%)</title><rect x="8.8051%" y="2581" width="0.0191%" height="15" fill="rgb(211,77,3)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2591.50"></text></g><g><title>deno.exe`sqlite3VdbeExec(Vdbe*) (4 samples, 0.02%)</title><rect x="8.8051%" y="2565" width="0.0191%" height="15" fill="rgb(229,5,9)" fg:x="1840" fg:w="4"/><text x="9.0551%" y="2575.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(core::ptr::non_null::NonNull (37 samples, 0.18%)</title><rect x="8.6520%" y="3093" width="0.1771%" height="15" fill="rgb(225,90,11)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3103.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="3077" width="0.1771%" height="15" fill="rgb(242,56,8)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3087.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (37 samples, 0.18%)</title><rect x="8.6520%" y="3061" width="0.1771%" height="15" fill="rgb(249,212,39)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3071.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="3045" width="0.1771%" height="15" fill="rgb(236,90,9)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3055.50"></text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="3029" width="0.1771%" height="15" fill="rgb(206,88,35)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3039.50"></text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="3013" width="0.1771%" height="15" fill="rgb(205,126,30)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3023.50"></text></g><g><title>deno.exe`Unknown (37 samples, 0.18%)</title><rect x="8.6520%" y="2997" width="0.1771%" height="15" fill="rgb(230,176,12)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="3007.50"></text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; (37 samples, 0.18%)</title><rect x="8.6520%" y="2981" width="0.1771%" height="15" fill="rgb(243,19,9)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2991.50"></text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="2965" width="0.1771%" height="15" fill="rgb(245,171,17)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2975.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="2949" width="0.1771%" height="15" fill="rgb(227,52,21)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2959.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (37 samples, 0.18%)</title><rect x="8.6520%" y="2933" width="0.1771%" height="15" fill="rgb(238,69,14)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2943.50"></text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="2917" width="0.1771%" height="15" fill="rgb(241,156,39)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2927.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::cache::cache_db::impl$2::spawn_eager_init_thread::closure_env$0,tuple$ (37 samples, 0.18%)</title><rect x="8.6520%" y="2901" width="0.1771%" height="15" fill="rgb(212,227,28)" fg:x="1808" fg:w="37"/><text x="8.9020%" y="2911.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(core::ptr::non_null::NonNull (5 samples, 0.02%)</title><rect x="8.8290%" y="3093" width="0.0239%" height="15" fill="rgb(209,118,27)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3103.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="3077" width="0.0239%" height="15" fill="rgb(226,102,5)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3087.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (5 samples, 0.02%)</title><rect x="8.8290%" y="3061" width="0.0239%" height="15" fill="rgb(223,34,3)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3071.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="3045" width="0.0239%" height="15" fill="rgb(221,81,38)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3055.50"></text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="3029" width="0.0239%" height="15" fill="rgb(236,219,28)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3039.50"></text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="3013" width="0.0239%" height="15" fill="rgb(213,200,14)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3023.50"></text></g><g><title>deno.exe`Unknown (5 samples, 0.02%)</title><rect x="8.8290%" y="2997" width="0.0239%" height="15" fill="rgb(240,33,19)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="3007.50"></text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="8.8290%" y="2981" width="0.0239%" height="15" fill="rgb(233,113,27)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2991.50"></text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2965" width="0.0239%" height="15" fill="rgb(220,221,18)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2975.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2949" width="0.0239%" height="15" fill="rgb(238,92,8)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2959.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (5 samples, 0.02%)</title><rect x="8.8290%" y="2933" width="0.0239%" height="15" fill="rgb(222,164,16)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2943.50"></text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2917" width="0.0239%" height="15" fill="rgb(241,119,3)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2927.50"></text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2901" width="0.0239%" height="15" fill="rgb(241,44,8)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2911.50"></text></g><g><title>deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt;,deno_core::task::MaskResultAsSend&lt;tuple$&lt;&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2885" width="0.0239%" height="15" fill="rgb(230,36,40)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2895.50"></text></g><g><title>deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$&lt;&gt; &gt;(deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::start_output_redirect_thread::closure_env$0,tuple$ (5 samples, 0.02%)</title><rect x="8.8290%" y="2869" width="0.0239%" height="15" fill="rgb(243,16,36)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2879.50"></text></g><g><title>deno.exe`deno::tools::test::start_output_redirect_thread::closure$0 (5 samples, 0.02%)</title><rect x="8.8290%" y="2853" width="0.0239%" height="15" fill="rgb(231,4,26)" fg:x="1845" fg:w="5"/><text x="9.0790%" y="2863.50"></text></g><g><title>deno.exe`os_pipe::impl$1::read(os_pipe::PipeReader*, ref_mut$&lt;slice2$ (3 samples, 0.01%)</title><rect x="8.8386%" y="2837" width="0.0144%" height="15" fill="rgb(240,9,31)" fg:x="1847" fg:w="3"/><text x="9.0886%" y="2847.50"></text></g><g><title>deno.exe`std::fs::impl$5::read (3 samples, 0.01%)</title><rect x="8.8386%" y="2821" width="0.0144%" height="15" fill="rgb(207,173,15)" fg:x="1847" fg:w="3"/><text x="9.0886%" y="2831.50"></text></g><g><title>deno.exe`std::sys::windows::handle::Handle::read (3 samples, 0.01%)</title><rect x="8.8386%" y="2805" width="0.0144%" height="15" fill="rgb(224,192,53)" fg:x="1847" fg:w="3"/><text x="9.0886%" y="2815.50"></text></g><g><title>deno.exe`std::sys::windows::handle::Handle::synchronous_read (3 samples, 0.01%)</title><rect x="8.8386%" y="2789" width="0.0144%" height="15" fill="rgb(223,67,28)" fg:x="1847" fg:w="3"/><text x="9.0886%" y="2799.50"></text></g><g><title>`0x7FFAA222EE14 (3 samples, 0.01%)</title><rect x="8.8386%" y="2773" width="0.0144%" height="15" fill="rgb(211,20,47)" fg:x="1847" fg:w="3"/><text x="9.0886%" y="2783.50"></text></g><g><title>deno.exe`v8::internal::Heap::TearDown (4 samples, 0.02%)</title><rect x="8.8817%" y="2149" width="0.0191%" height="15" fill="rgb(240,228,2)" fg:x="1856" fg:w="4"/><text x="9.1317%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::OldSpace::~OldSpace (3 samples, 0.01%)</title><rect x="8.8864%" y="2133" width="0.0144%" height="15" fill="rgb(248,151,12)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::PagedSpace::~PagedSpace (3 samples, 0.01%)</title><rect x="8.8864%" y="2117" width="0.0144%" height="15" fill="rgb(244,8,39)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TearDown (3 samples, 0.01%)</title><rect x="8.8864%" y="2101" width="0.0144%" height="15" fill="rgb(222,26,8)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::VirtualMemory::Free (3 samples, 0.01%)</title><rect x="8.8864%" y="2085" width="0.0144%" height="15" fill="rgb(213,106,44)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2095.50"></text></g><g><title>deno.exe`v8::base::BoundedPageAllocator::FreePages (3 samples, 0.01%)</title><rect x="8.8864%" y="2069" width="0.0144%" height="15" fill="rgb(214,129,20)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2079.50"></text></g><g><title>deno.exe`v8::base::OS::SetPermissions (3 samples, 0.01%)</title><rect x="8.8864%" y="2053" width="0.0144%" height="15" fill="rgb(212,32,13)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2063.50"></text></g><g><title>`0x7FFA9F817142 (3 samples, 0.01%)</title><rect x="8.8864%" y="2037" width="0.0144%" height="15" fill="rgb(208,168,33)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2047.50"></text></g><g><title>`0x7FFAA222F114 (3 samples, 0.01%)</title><rect x="8.8864%" y="2021" width="0.0144%" height="15" fill="rgb(231,207,8)" fg:x="1857" fg:w="3"/><text x="9.1364%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Deinit (5 samples, 0.02%)</title><rect x="8.8817%" y="2165" width="0.0239%" height="15" fill="rgb(235,219,23)" fg:x="1856" fg:w="5"/><text x="9.1317%" y="2175.50"></text></g><g><title>deno.exe`core::mem::manually_drop::ManuallyDrop&lt;v8::isolate::OwnedIsolate&gt;::drop&lt;v8::isolate::OwnedIsolate&gt; (6 samples, 0.03%)</title><rect x="8.8817%" y="2245" width="0.0287%" height="15" fill="rgb(226,216,26)" fg:x="1856" fg:w="6"/><text x="9.1317%" y="2255.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;v8::isolate::OwnedIsolate&gt; (6 samples, 0.03%)</title><rect x="8.8817%" y="2229" width="0.0287%" height="15" fill="rgb(239,137,16)" fg:x="1856" fg:w="6"/><text x="9.1317%" y="2239.50"></text></g><g><title>deno.exe`v8::isolate::impl$8::drop (6 samples, 0.03%)</title><rect x="8.8817%" y="2213" width="0.0287%" height="15" fill="rgb(207,12,36)" fg:x="1856" fg:w="6"/><text x="9.1317%" y="2223.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::dispose (6 samples, 0.03%)</title><rect x="8.8817%" y="2197" width="0.0287%" height="15" fill="rgb(210,214,24)" fg:x="1856" fg:w="6"/><text x="9.1317%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Delete (6 samples, 0.03%)</title><rect x="8.8817%" y="2181" width="0.0287%" height="15" fill="rgb(206,56,30)" fg:x="1856" fg:w="6"/><text x="9.1317%" y="2191.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_runtime::worker::MainWorker&gt; (7 samples, 0.03%)</title><rect x="8.8817%" y="2309" width="0.0335%" height="15" fill="rgb(228,143,26)" fg:x="1856" fg:w="7"/><text x="9.1317%" y="2319.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_core::runtime::jsruntime::JsRuntime&gt; (7 samples, 0.03%)</title><rect x="8.8817%" y="2293" width="0.0335%" height="15" fill="rgb(216,218,46)" fg:x="1856" fg:w="7"/><text x="9.1317%" y="2303.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_core::runtime::jsruntime::InnerIsolateState&gt; (7 samples, 0.03%)</title><rect x="8.8817%" y="2277" width="0.0335%" height="15" fill="rgb(206,6,19)" fg:x="1856" fg:w="7"/><text x="9.1317%" y="2287.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$4::drop (7 samples, 0.03%)</title><rect x="8.8817%" y="2261" width="0.0335%" height="15" fill="rgb(239,177,51)" fg:x="1856" fg:w="7"/><text x="9.1317%" y="2271.50"></text></g><g><title>deno.exe`deno::tools::test::TestEventSender::send(enum2$ (3 samples, 0.01%)</title><rect x="8.9199%" y="2309" width="0.0144%" height="15" fill="rgb(216,55,25)" fg:x="1864" fg:w="3"/><text x="9.1699%" y="2319.50"></text></g><g><title>deno.exe`deno::tools::test::TestEventSender::flush_stdout_and_stderr (3 samples, 0.01%)</title><rect x="8.9199%" y="2293" width="0.0144%" height="15" fill="rgb(231,163,29)" fg:x="1864" fg:w="3"/><text x="9.1699%" y="2303.50"></text></g><g><title>deno.exe`deno::tools::test::TestOutputPipe::flush (3 samples, 0.01%)</title><rect x="8.9199%" y="2277" width="0.0144%" height="15" fill="rgb(232,149,50)" fg:x="1864" fg:w="3"/><text x="9.1699%" y="2287.50"></text></g><g><title>deno.exe`deno::module_loader::impl$6::get_source_map(deno::module_loader::CliSourceMapGetter*, ref$ (3 samples, 0.01%)</title><rect x="8.9630%" y="1397" width="0.0144%" height="15" fill="rgb(223,142,48)" fg:x="1873" fg:w="3"/><text x="9.2130%" y="1407.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_apply_source_map::call(v8::scope::HandleScope (5 samples, 0.02%)</title><rect x="8.9630%" y="1461" width="0.0239%" height="15" fill="rgb(245,83,23)" fg:x="1873" fg:w="5"/><text x="9.2130%" y="1471.50"></text></g><g><title>deno.exe`deno_core::source_map::apply_source_map&lt;dyn$&lt;deno_core::source_map::SourceMapGetter&gt; &gt;(alloc::string::String, long long, long long, deno_core::source_map::SourceMapCache*, ref$&lt;dyn$ (5 samples, 0.02%)</title><rect x="8.9630%" y="1445" width="0.0239%" height="15" fill="rgb(224,63,2)" fg:x="1873" fg:w="5"/><text x="9.2130%" y="1455.50"></text></g><g><title>deno.exe`enum2$&lt;std::collections::hash::map::Entry&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;sourcemap::types::SourceMap&gt; &gt; &gt; &gt;::or_insert_with&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;sourcemap::types::SourceMap&gt; &gt;,deno_core::source_map::apply_source_map::closure_env$0&lt;dyn$&lt;deno_core::source_map::SourceMapGetter&gt; &gt; &gt;(enum2$&lt;std::collections::hash::map::Entry&lt;alloc::string::String,enum2$&lt;core::option::Option&lt;sourcemap::types::SourceMap&gt; &gt; &gt; &gt;, deno_core::source_map::apply_source_map::closure_env$0&lt;dyn$ (5 samples, 0.02%)</title><rect x="8.9630%" y="1429" width="0.0239%" height="15" fill="rgb(218,65,53)" fg:x="1873" fg:w="5"/><text x="9.2130%" y="1439.50"></text></g><g><title>deno.exe`deno_core::source_map::apply_source_map::closure$0&lt;dyn$&lt;deno_core::source_map::SourceMapGetter&gt; &gt;(deno_core::source_map::apply_source_map::closure_env$0&lt;dyn$ (5 samples, 0.02%)</title><rect x="8.9630%" y="1413" width="0.0239%" height="15" fill="rgb(221,84,29)" fg:x="1873" fg:w="5"/><text x="9.2130%" y="1423.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (6 samples, 0.03%)</title><rect x="8.9630%" y="1493" width="0.0287%" height="15" fill="rgb(234,0,32)" fg:x="1873" fg:w="6"/><text x="9.2130%" y="1503.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_apply_source_map::v8_fn_ptr (6 samples, 0.03%)</title><rect x="8.9630%" y="1477" width="0.0287%" height="15" fill="rgb(206,20,16)" fg:x="1873" fg:w="6"/><text x="9.2130%" y="1487.50"></text></g><g><title>deno.exe`Builtins_ArrayMap (8 samples, 0.04%)</title><rect x="8.9630%" y="1525" width="0.0383%" height="15" fill="rgb(244,172,18)" fg:x="1873" fg:w="8"/><text x="9.2130%" y="1535.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (8 samples, 0.04%)</title><rect x="8.9630%" y="1509" width="0.0383%" height="15" fill="rgb(254,133,1)" fg:x="1873" fg:w="8"/><text x="9.2130%" y="1519.50"></text></g><g><title>deno.exe`deno_core::error::get_property(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Object&gt;, ref$ (10 samples, 0.05%)</title><rect x="8.9630%" y="1861" width="0.0479%" height="15" fill="rgb(222,206,41)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1871.50"></text></g><g><title>deno.exe`v8::data::Object::get(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (10 samples, 0.05%)</title><rect x="8.9630%" y="1845" width="0.0479%" height="15" fill="rgb(212,3,42)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1855.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (10 samples, 0.05%)</title><rect x="8.9630%" y="1829" width="0.0479%" height="15" fill="rgb(241,11,4)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1839.50"></text></g><g><title>deno.exe`v8::object::impl$0::get::closure$0 (10 samples, 0.05%)</title><rect x="8.9630%" y="1813" width="0.0479%" height="15" fill="rgb(205,19,26)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1823.50"></text></g><g><title>deno.exe`v8__Object__Get(v8::Object const&amp;, v8::Context const&amp;, v8::Value const&amp;) (10 samples, 0.05%)</title><rect x="8.9630%" y="1797" width="0.0479%" height="15" fill="rgb(210,179,32)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1807.50"></text></g><g><title>deno.exe`v8::Object::Get(v8::Local&lt;v8::Context&gt;, v8::Local (10 samples, 0.05%)</title><rect x="8.9630%" y="1781" width="0.0479%" height="15" fill="rgb(227,116,49)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Runtime::GetObjectProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1765" width="0.0479%" height="15" fill="rgb(211,146,6)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Object::GetProperty (10 samples, 0.05%)</title><rect x="8.9630%" y="1749" width="0.0479%" height="15" fill="rgb(219,44,39)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Object::GetPropertyWithAccessor (10 samples, 0.05%)</title><rect x="8.9630%" y="1733" width="0.0479%" height="15" fill="rgb(234,128,11)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1717" width="0.0479%" height="15" fill="rgb(220,183,53)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (10 samples, 0.05%)</title><rect x="8.9630%" y="1701" width="0.0479%" height="15" fill="rgb(213,219,32)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Builtins::InvokeApiFunction(v8::internal::Isolate*, bool, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1685" width="0.0479%" height="15" fill="rgb(232,156,16)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::FunctionCallbackArguments::Call (10 samples, 0.05%)</title><rect x="8.9630%" y="1669" width="0.0479%" height="15" fill="rgb(246,135,34)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::Accessors::ErrorStackGetter(v8::FunctionCallbackInfo (10 samples, 0.05%)</title><rect x="8.9630%" y="1653" width="0.0479%" height="15" fill="rgb(241,99,0)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1663.50"></text></g><g><title>deno.exe`v8::internal::ErrorUtils::GetFormattedStack(v8::internal::Isolate*, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1637" width="0.0479%" height="15" fill="rgb(222,103,45)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::ErrorUtils::FormatStackTrace(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1621" width="0.0479%" height="15" fill="rgb(212,57,4)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1631.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (10 samples, 0.05%)</title><rect x="8.9630%" y="1605" width="0.0479%" height="15" fill="rgb(215,68,47)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1615.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (10 samples, 0.05%)</title><rect x="8.9630%" y="1589" width="0.0479%" height="15" fill="rgb(230,84,2)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1599.50"></text></g><g><title>deno.exe`Builtins_JSEntry (10 samples, 0.05%)</title><rect x="8.9630%" y="1573" width="0.0479%" height="15" fill="rgb(220,102,14)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1583.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (10 samples, 0.05%)</title><rect x="8.9630%" y="1557" width="0.0479%" height="15" fill="rgb(240,10,32)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1567.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (10 samples, 0.05%)</title><rect x="8.9630%" y="1541" width="0.0479%" height="15" fill="rgb(215,47,27)" fg:x="1873" fg:w="10"/><text x="9.2130%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::de::from_v8&lt;alloc::vec::Vec&lt;deno_core::error::JsStackFrame,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (3 samples, 0.01%)</title><rect x="9.0156%" y="1861" width="0.0144%" height="15" fill="rgb(233,188,43)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1871.50"></text></g><g><title>deno.exe`serde::de::impls::impl$19::deserialize&lt;deno_core::error::JsStackFrame,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (3 samples, 0.01%)</title><rect x="9.0156%" y="1845" width="0.0144%" height="15" fill="rgb(253,190,1)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1855.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_seq&lt;serde::de::impls::impl$19::deserialize::VecVisitor&lt;deno_core::error::JsStackFrame&gt; &gt;(serde_v8::de::Deserializer*, serde::de::impls::impl$19::deserialize::VecVisitor (3 samples, 0.01%)</title><rect x="9.0156%" y="1829" width="0.0144%" height="15" fill="rgb(206,114,52)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1839.50"></text></g><g><title>deno.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;deno_core::error::JsStackFrame,serde_v8::de::SeqAccess&gt;(serde::de::impls::impl$19::deserialize::VecVisitor (3 samples, 0.01%)</title><rect x="9.0156%" y="1813" width="0.0144%" height="15" fill="rgb(233,120,37)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1823.50"></text></g><g><title>deno.exe`serde::de::SeqAccess::next_element&lt;serde_v8::de::SeqAccess,deno_core::error::JsStackFrame&gt; (3 samples, 0.01%)</title><rect x="9.0156%" y="1797" width="0.0144%" height="15" fill="rgb(214,52,39)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1807.50"></text></g><g><title>deno.exe`serde_v8::de::impl$7::next_element_seed&lt;core::marker::PhantomData&lt;deno_core::error::JsStackFrame&gt; &gt;(serde_v8::de::SeqAccess*, core::marker::PhantomData (3 samples, 0.01%)</title><rect x="9.0156%" y="1781" width="0.0144%" height="15" fill="rgb(223,80,29)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1791.50"></text></g><g><title>deno.exe`serde::de::impl$5::deserialize&lt;deno_core::error::JsStackFrame,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt;(core::marker::PhantomData (3 samples, 0.01%)</title><rect x="9.0156%" y="1765" width="0.0144%" height="15" fill="rgb(230,101,40)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1775.50"></text></g><g><title>deno.exe`deno_core::error::_::impl$0::deserialize&lt;ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (3 samples, 0.01%)</title><rect x="9.0156%" y="1749" width="0.0144%" height="15" fill="rgb(219,211,8)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1759.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_struct&lt;deno_core::error::_::impl$0::deserialize::__Visitor&gt;(serde_v8::de::Deserializer*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (3 samples, 0.01%)</title><rect x="9.0156%" y="1733" width="0.0144%" height="15" fill="rgb(252,126,28)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1743.50"></text></g><g><title>deno.exe`deno_core::error::_::impl$0::deserialize::impl$2::visit_map&lt;serde_v8::de::StructAccess&gt; (3 samples, 0.01%)</title><rect x="9.0156%" y="1717" width="0.0144%" height="15" fill="rgb(215,56,38)" fg:x="1884" fg:w="3"/><text x="9.2656%" y="1727.50"></text></g><g><title>deno.exe`deno_core::error::JsError::inner_from_v8_exception(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, std::collections::hash::set::HashSet&lt;v8::handle::Local (18 samples, 0.09%)</title><rect x="8.9630%" y="1877" width="0.0861%" height="15" fill="rgb(249,55,44)" fg:x="1873" fg:w="18"/><text x="9.2130%" y="1887.50"></text></g><g><title>deno.exe`v8::exception::Exception::create_message(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (3 samples, 0.01%)</title><rect x="9.0348%" y="1861" width="0.0144%" height="15" fill="rgb(220,221,32)" fg:x="1888" fg:w="3"/><text x="9.2848%" y="1871.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="9.0348%" y="1845" width="0.0144%" height="15" fill="rgb(212,216,41)" fg:x="1888" fg:w="3"/><text x="9.2848%" y="1855.50"></text></g><g><title>deno.exe`v8::exception::impl$3::create_message::closure$0 (3 samples, 0.01%)</title><rect x="9.0348%" y="1829" width="0.0144%" height="15" fill="rgb(228,213,43)" fg:x="1888" fg:w="3"/><text x="9.2848%" y="1839.50"></text></g><g><title>deno.exe`v8__Exception__CreateMessage(v8::Isolate*, v8::Value const&amp;) (3 samples, 0.01%)</title><rect x="9.0348%" y="1813" width="0.0144%" height="15" fill="rgb(211,31,26)" fg:x="1888" fg:w="3"/><text x="9.2848%" y="1823.50"></text></g><g><title>deno.exe`v8::Exception::CreateMessage(v8::Isolate*, v8::Local (3 samples, 0.01%)</title><rect x="9.0348%" y="1797" width="0.0144%" height="15" fill="rgb(229,202,19)" fg:x="1888" fg:w="3"/><text x="9.2848%" y="1807.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_destructure_error::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (19 samples, 0.09%)</title><rect x="8.9630%" y="1909" width="0.0909%" height="15" fill="rgb(229,105,46)" fg:x="1873" fg:w="19"/><text x="9.2130%" y="1919.50"></text></g><g><title>deno.exe`deno_core::error::JsError::from_v8_exception(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (19 samples, 0.09%)</title><rect x="8.9630%" y="1893" width="0.0909%" height="15" fill="rgb(235,108,1)" fg:x="1873" fg:w="19"/><text x="9.2130%" y="1903.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::mod_evaluate (28 samples, 0.13%)</title><rect x="8.9343%" y="2261" width="0.1340%" height="15" fill="rgb(245,111,35)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2271.50"></text></g><g><title>deno.exe`deno_core::runtime::jsrealm::JsRealm::mod_evaluate (28 samples, 0.13%)</title><rect x="8.9343%" y="2245" width="0.1340%" height="15" fill="rgb(219,185,31)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2255.50"></text></g><g><title>deno.exe`v8::data::Module::evaluate(v8::scope::HandleScope (28 samples, 0.13%)</title><rect x="8.9343%" y="2229" width="0.1340%" height="15" fill="rgb(214,4,43)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2239.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (28 samples, 0.13%)</title><rect x="8.9343%" y="2213" width="0.1340%" height="15" fill="rgb(235,227,40)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2223.50"></text></g><g><title>deno.exe`v8::module::impl$3::evaluate::closure$0 (28 samples, 0.13%)</title><rect x="8.9343%" y="2197" width="0.1340%" height="15" fill="rgb(230,88,30)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2207.50"></text></g><g><title>deno.exe`v8__Module__Evaluate(v8::Module const&amp;, v8::Context const&amp;) (28 samples, 0.13%)</title><rect x="8.9343%" y="2181" width="0.1340%" height="15" fill="rgb(216,217,1)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2191.50"></text></g><g><title>deno.exe`v8::Module::Evaluate(v8::Local (28 samples, 0.13%)</title><rect x="8.9343%" y="2165" width="0.1340%" height="15" fill="rgb(248,139,50)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2175.50"></text></g><g><title>deno.exe`v8::internal::Module::Evaluate(v8::internal::Isolate*, v8::internal::Handle (28 samples, 0.13%)</title><rect x="8.9343%" y="2149" width="0.1340%" height="15" fill="rgb(233,1,21)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::SourceTextModule::Evaluate(v8::internal::Isolate*, v8::internal::Handle (28 samples, 0.13%)</title><rect x="8.9343%" y="2133" width="0.1340%" height="15" fill="rgb(215,183,12)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::SourceTextModule::InnerModuleEvaluation(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SourceTextModule&gt;, v8::internal::ZoneForwardList&lt;v8::internal::Handle (28 samples, 0.13%)</title><rect x="8.9343%" y="2117" width="0.1340%" height="15" fill="rgb(229,104,42)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::SourceTextModule::ExecuteModule(v8::internal::Isolate*, v8::internal::Handle (28 samples, 0.13%)</title><rect x="8.9343%" y="2101" width="0.1340%" height="15" fill="rgb(243,34,48)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Execution::TryCall(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*, v8::internal::Execution::MessageHandling, v8::internal::MaybeHandle (28 samples, 0.13%)</title><rect x="8.9343%" y="2085" width="0.1340%" height="15" fill="rgb(239,11,44)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::InvokeWithTryCatch (28 samples, 0.13%)</title><rect x="8.9343%" y="2069" width="0.1340%" height="15" fill="rgb(231,98,35)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (28 samples, 0.13%)</title><rect x="8.9343%" y="2053" width="0.1340%" height="15" fill="rgb(233,28,25)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2063.50"></text></g><g><title>deno.exe`Builtins_JSEntry (28 samples, 0.13%)</title><rect x="8.9343%" y="2037" width="0.1340%" height="15" fill="rgb(234,123,11)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2047.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (28 samples, 0.13%)</title><rect x="8.9343%" y="2021" width="0.1340%" height="15" fill="rgb(220,69,3)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2031.50"></text></g><g><title>deno.exe`Builtins_GeneratorPrototypeNext (28 samples, 0.13%)</title><rect x="8.9343%" y="2005" width="0.1340%" height="15" fill="rgb(214,64,36)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (28 samples, 0.13%)</title><rect x="8.9343%" y="1989" width="0.1340%" height="15" fill="rgb(211,138,32)" fg:x="1867" fg:w="28"/><text x="9.1843%" y="1999.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (26 samples, 0.12%)</title><rect x="8.9439%" y="1973" width="0.1244%" height="15" fill="rgb(213,118,47)" fg:x="1869" fg:w="26"/><text x="9.1939%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="8.9630%" y="1957" width="0.1053%" height="15" fill="rgb(243,124,49)" fg:x="1873" fg:w="22"/><text x="9.2130%" y="1967.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (22 samples, 0.11%)</title><rect x="8.9630%" y="1941" width="0.1053%" height="15" fill="rgb(221,30,28)" fg:x="1873" fg:w="22"/><text x="9.2130%" y="1951.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_destructure_error::v8_fn_ptr (22 samples, 0.11%)</title><rect x="8.9630%" y="1925" width="0.1053%" height="15" fill="rgb(246,37,13)" fg:x="1873" fg:w="22"/><text x="9.2130%" y="1935.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;deno_core::error::JsError&gt;(v8::scope::HandleScope (3 samples, 0.01%)</title><rect x="9.0539%" y="1909" width="0.0144%" height="15" fill="rgb(249,66,14)" fg:x="1892" fg:w="3"/><text x="9.3039%" y="1919.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;deno_core::error::JsError&gt;(v8::scope::HandleScope (3 samples, 0.01%)</title><rect x="9.0539%" y="1893" width="0.0144%" height="15" fill="rgb(213,166,5)" fg:x="1892" fg:w="3"/><text x="9.3039%" y="1903.50"></text></g><g><title>deno.exe`deno_core::error::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (3 samples, 0.01%)</title><rect x="9.0539%" y="1877" width="0.0144%" height="15" fill="rgb(221,66,24)" fg:x="1892" fg:w="3"/><text x="9.3039%" y="1887.50"></text></g><g><title>deno.exe`deno::worker::impl$1::evaluate_module_possibly_with_npm::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (30 samples, 0.14%)</title><rect x="8.9343%" y="2293" width="0.1436%" height="15" fill="rgb(210,132,17)" fg:x="1867" fg:w="30"/><text x="9.1843%" y="2303.50"></text></g><g><title>deno.exe`deno_runtime::worker::impl$2::evaluate_module::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (30 samples, 0.14%)</title><rect x="8.9343%" y="2277" width="0.1436%" height="15" fill="rgb(243,202,5)" fg:x="1867" fg:w="30"/><text x="9.1843%" y="2287.50"></text></g><g><title>deno.exe`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseStatement(v8::internal::ZoneList&lt;const v8::internal::AstRawString *&gt;*, v8::internal::ZoneList (4 samples, 0.02%)</title><rect x="9.0970%" y="1861" width="0.0191%" height="15" fill="rgb(233,70,48)" fg:x="1901" fg:w="4"/><text x="9.3470%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Parser::ParseExportDeclaration (5 samples, 0.02%)</title><rect x="9.0970%" y="1973" width="0.0239%" height="15" fill="rgb(238,41,26)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseHoistableDeclaration(int, v8::base::Flags&lt;v8::internal::ParseFunctionFlag,int,int&gt;, v8::internal::ZoneList (5 samples, 0.02%)</title><rect x="9.0970%" y="1957" width="0.0239%" height="15" fill="rgb(241,19,31)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Parser::ParseFunctionLiteral(v8::internal::AstRawString const*, v8::internal::Scanner::Location, v8::internal::FunctionNameValidity, v8::internal::FunctionKind, int, v8::internal::FunctionSyntaxKind, v8::internal::LanguageMode, v8::internal::ZoneList (5 samples, 0.02%)</title><rect x="9.0970%" y="1941" width="0.0239%" height="15" fill="rgb(214,76,10)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Parser::SkipFunction (5 samples, 0.02%)</title><rect x="9.0970%" y="1925" width="0.0239%" height="15" fill="rgb(254,202,22)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::PreParser::PreParseFunction (5 samples, 0.02%)</title><rect x="9.0970%" y="1909" width="0.0239%" height="15" fill="rgb(214,72,24)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::PreParser::ParseStatementListAndLogFunction (5 samples, 0.02%)</title><rect x="9.0970%" y="1893" width="0.0239%" height="15" fill="rgb(221,92,46)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseStatementListItem (5 samples, 0.02%)</title><rect x="9.0970%" y="1877" width="0.0239%" height="15" fill="rgb(246,13,50)" fg:x="1901" fg:w="5"/><text x="9.3470%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::CompileScriptOnMainThread(const v8::internal::UnoptimizedCompileFlags, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::ScriptDetails const&amp;, v8::internal::NativesFlag, v8::Extension*, v8::internal::Isolate*, v8::internal::MaybeHandle&lt;v8::internal::Script&gt;, v8::internal::IsCompiledScope*, bool (*) (7 samples, 0.03%)</title><rect x="9.0922%" y="2069" width="0.0335%" height="15" fill="rgb(240,165,38)" fg:x="1900" fg:w="7"/><text x="9.3422%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::CompileToplevel(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (7 samples, 0.03%)</title><rect x="9.0922%" y="2053" width="0.0335%" height="15" fill="rgb(241,24,51)" fg:x="1900" fg:w="7"/><text x="9.3422%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::parsing::ParseProgram(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (6 samples, 0.03%)</title><rect x="9.0970%" y="2037" width="0.0287%" height="15" fill="rgb(227,51,44)" fg:x="1901" fg:w="6"/><text x="9.3470%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Parser::ParseProgram(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::MaybeHandle (6 samples, 0.03%)</title><rect x="9.0970%" y="2021" width="0.0287%" height="15" fill="rgb(231,121,3)" fg:x="1901" fg:w="6"/><text x="9.3470%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Parser::DoParseProgram (6 samples, 0.03%)</title><rect x="9.0970%" y="2005" width="0.0287%" height="15" fill="rgb(245,3,41)" fg:x="1901" fg:w="6"/><text x="9.3470%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Parser::ParseModuleItemList(v8::internal::ScopedList (6 samples, 0.03%)</title><rect x="9.0970%" y="1989" width="0.0287%" height="15" fill="rgb(214,13,26)" fg:x="1901" fg:w="6"/><text x="9.3470%" y="1999.50"></text></g><g><title>deno.exe`v8::ScriptCompiler::CompileUnboundInternal (8 samples, 0.04%)</title><rect x="9.0922%" y="2117" width="0.0383%" height="15" fill="rgb(252,75,11)" fg:x="1900" fg:w="8"/><text x="9.3422%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle (8 samples, 0.04%)</title><rect x="9.0922%" y="2101" width="0.0383%" height="15" fill="rgb(218,226,17)" fg:x="1900" fg:w="8"/><text x="9.3422%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::ScriptDetails const&amp;, v8::Extension*, v8::internal::AlignedCachedData*, v8::internal::BackgroundDeserializeTask*, bool (*) (8 samples, 0.04%)</title><rect x="9.0922%" y="2085" width="0.0383%" height="15" fill="rgb(248,89,38)" fg:x="1900" fg:w="8"/><text x="9.3422%" y="2095.50"></text></g><g><title>deno.exe`deno_core::modules::map::ModuleMap::new_es_module(v8::scope::HandleScope&lt;v8::data::Context&gt;*, bool, enum2$&lt;deno_core::fast_string::FastString&gt;, enum2$ (13 samples, 0.06%)</title><rect x="9.0779%" y="2229" width="0.0622%" height="15" fill="rgb(237,73,46)" fg:x="1897" fg:w="13"/><text x="9.3279%" y="2239.50"></text></g><g><title>deno.exe`v8::script_compiler::compile_module(v8::scope::HandleScope (10 samples, 0.05%)</title><rect x="9.0922%" y="2213" width="0.0479%" height="15" fill="rgb(242,78,33)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2223.50"></text></g><g><title>deno.exe`v8::script_compiler::compile_module2(v8::scope::HandleScope (10 samples, 0.05%)</title><rect x="9.0922%" y="2197" width="0.0479%" height="15" fill="rgb(235,60,3)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2207.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (10 samples, 0.05%)</title><rect x="9.0922%" y="2181" width="0.0479%" height="15" fill="rgb(216,172,19)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2191.50"></text></g><g><title>deno.exe`v8::script_compiler::compile_module2::closure$0 (10 samples, 0.05%)</title><rect x="9.0922%" y="2165" width="0.0479%" height="15" fill="rgb(227,6,42)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2175.50"></text></g><g><title>deno.exe`v8__ScriptCompiler__CompileModule(v8::Isolate*, v8::ScriptCompiler::Source*, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason) (10 samples, 0.05%)</title><rect x="9.0922%" y="2149" width="0.0479%" height="15" fill="rgb(223,207,42)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2159.50"></text></g><g><title>deno.exe`v8::ScriptCompiler::CompileModule (10 samples, 0.05%)</title><rect x="9.0922%" y="2133" width="0.0479%" height="15" fill="rgb(246,138,30)" fg:x="1900" fg:w="10"/><text x="9.3422%" y="2143.50"></text></g><g><title>deno.exe`deno_core::modules::RecursiveModuleLoad::register_and_recurse(v8::scope::HandleScope (14 samples, 0.07%)</title><rect x="9.0779%" y="2245" width="0.0670%" height="15" fill="rgb(251,199,47)" fg:x="1897" fg:w="14"/><text x="9.3279%" y="2255.50"></text></g><g><title>deno.exe`deno_core::runtime::jsrealm::JsRealm::instantiate_module (3 samples, 0.01%)</title><rect x="9.1592%" y="2245" width="0.0144%" height="15" fill="rgb(228,218,44)" fg:x="1914" fg:w="3"/><text x="9.4092%" y="2255.50"></text></g><g><title>deno.exe`deno_core::modules::map::ModuleMap::instantiate_module(v8::scope::HandleScope (3 samples, 0.01%)</title><rect x="9.1592%" y="2229" width="0.0144%" height="15" fill="rgb(220,68,6)" fg:x="1914" fg:w="3"/><text x="9.4092%" y="2239.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::get_emit_code (3 samples, 0.01%)</title><rect x="9.1831%" y="2005" width="0.0144%" height="15" fill="rgb(240,60,26)" fg:x="1919" fg:w="3"/><text x="9.4331%" y="2015.50"></text></g><g><title>deno.exe`deno::util::fs::write_file&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.1975%" y="1909" width="0.0191%" height="15" fill="rgb(211,200,19)" fg:x="1922" fg:w="4"/><text x="9.4475%" y="1919.50"></text></g><g><title>deno.exe`deno::util::fs::write_file_2&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.1975%" y="1893" width="0.0191%" height="15" fill="rgb(242,145,30)" fg:x="1922" fg:w="4"/><text x="9.4475%" y="1903.50"></text></g><g><title>deno.exe`std::fs::OpenOptions::open&lt;ref$&lt;std::path::Path&gt; &gt;(ref$ (3 samples, 0.01%)</title><rect x="9.2023%" y="1877" width="0.0144%" height="15" fill="rgb(225,64,13)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1887.50"></text></g><g><title>deno.exe`std::sys::windows::fs::File::open (3 samples, 0.01%)</title><rect x="9.2023%" y="1861" width="0.0144%" height="15" fill="rgb(218,103,35)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1871.50"></text></g><g><title>deno.exe`core::convert::impl$6::try_into (3 samples, 0.01%)</title><rect x="9.2023%" y="1845" width="0.0144%" height="15" fill="rgb(216,93,46)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1855.50"></text></g><g><title>deno.exe`std::os::windows::io::handle::impl$12::try_from (3 samples, 0.01%)</title><rect x="9.2023%" y="1829" width="0.0144%" height="15" fill="rgb(225,159,27)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1839.50"></text></g><g><title>`0x7FFA9F7D477C (3 samples, 0.01%)</title><rect x="9.2023%" y="1813" width="0.0144%" height="15" fill="rgb(225,204,11)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1823.50"></text></g><g><title>`0x7FFA9F7D4E10 (3 samples, 0.01%)</title><rect x="9.2023%" y="1797" width="0.0144%" height="15" fill="rgb(205,56,4)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1807.50"></text></g><g><title>`0x7FFAA222F7F4 (3 samples, 0.01%)</title><rect x="9.2023%" y="1781" width="0.0144%" height="15" fill="rgb(206,6,35)" fg:x="1923" fg:w="3"/><text x="9.4523%" y="1791.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file::atomic_write_file_raw(ref$&lt;std::path::Path&gt;, ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (7 samples, 0.03%)</title><rect x="9.1975%" y="1925" width="0.0335%" height="15" fill="rgb(247,73,52)" fg:x="1922" fg:w="7"/><text x="9.4475%" y="1935.50"></text></g><g><title>deno.exe`std::fs::rename&lt;ref$&lt;std::path::Path&gt;,ref$&lt;std::path::Path&gt; &gt;(ref$&lt;std::path::Path&gt;, ref$ (3 samples, 0.01%)</title><rect x="9.2166%" y="1909" width="0.0144%" height="15" fill="rgb(246,97,4)" fg:x="1926" fg:w="3"/><text x="9.4666%" y="1919.50"></text></g><g><title>deno.exe`std::sys::windows::fs::rename (3 samples, 0.01%)</title><rect x="9.2166%" y="1893" width="0.0144%" height="15" fill="rgb(212,37,15)" fg:x="1926" fg:w="3"/><text x="9.4666%" y="1903.50"></text></g><g><title>deno.exe`deno::cache::disk_cache::DiskCache::set(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (8 samples, 0.04%)</title><rect x="9.1975%" y="1973" width="0.0383%" height="15" fill="rgb(208,130,40)" fg:x="1922" fg:w="8"/><text x="9.4475%" y="1983.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (8 samples, 0.04%)</title><rect x="9.1975%" y="1957" width="0.0383%" height="15" fill="rgb(236,55,29)" fg:x="1922" fg:w="8"/><text x="9.4475%" y="1967.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file::inner(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (8 samples, 0.04%)</title><rect x="9.1975%" y="1941" width="0.0383%" height="15" fill="rgb(209,156,45)" fg:x="1922" fg:w="8"/><text x="9.4475%" y="1951.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::set_emit_code(url::Url*, unsigned long long, ref$ (9 samples, 0.04%)</title><rect x="9.1975%" y="2005" width="0.0431%" height="15" fill="rgb(249,107,4)" fg:x="1922" fg:w="9"/><text x="9.4475%" y="2015.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::set_emit_code_result(url::Url*, unsigned long long, ref$ (9 samples, 0.04%)</title><rect x="9.1975%" y="1989" width="0.0431%" height="15" fill="rgb(227,7,13)" fg:x="1922" fg:w="9"/><text x="9.4475%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2406%" y="1669" width="0.0239%" height="15" fill="rgb(250,129,14)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2406%" y="1653" width="0.0239%" height="15" fill="rgb(229,92,13)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_transforms_base::rename::RenamePass (5 samples, 0.02%)</title><rect x="9.2406%" y="1637" width="0.0239%" height="15" fill="rgb(245,98,39)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2406%" y="1621" width="0.0239%" height="15" fill="rgb(234,135,48)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2406%" y="1605" width="0.0239%" height="15" fill="rgb(230,98,28)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::impl$1::visit_mut_module&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;(swc_ecma_transforms_base::rename::RenamePass (5 samples, 0.02%)</title><rect x="9.2406%" y="1589" width="0.0239%" height="15" fill="rgb(223,121,0)" fg:x="1931" fg:w="5"/><text x="9.4906%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="9.2406%" y="1685" width="0.0287%" height="15" fill="rgb(234,173,33)" fg:x="1931" fg:w="6"/><text x="9.4906%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt;*, enum2$ (8 samples, 0.04%)</title><rect x="9.2406%" y="1701" width="0.0383%" height="15" fill="rgb(245,47,8)" fg:x="1931" fg:w="8"/><text x="9.4906%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$442::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (3 samples, 0.01%)</title><rect x="9.2836%" y="1541" width="0.0144%" height="15" fill="rgb(205,17,20)" fg:x="1940" fg:w="3"/><text x="9.5336%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$441::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(ref$&lt;slice2$&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt; &gt;, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (3 samples, 0.01%)</title><rect x="9.2836%" y="1525" width="0.0144%" height="15" fill="rgb(232,151,16)" fg:x="1940" fg:w="3"/><text x="9.5336%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_module_items&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.2836%" y="1509" width="0.0144%" height="15" fill="rgb(208,30,32)" fg:x="1940" fg:w="3"/><text x="9.5336%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (13 samples, 0.06%)</title><rect x="9.2406%" y="1749" width="0.0622%" height="15" fill="rgb(254,26,3)" fg:x="1931" fg:w="13"/><text x="9.4906%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (13 samples, 0.06%)</title><rect x="9.2406%" y="1733" width="0.0622%" height="15" fill="rgb(240,177,30)" fg:x="1931" fg:w="13"/><text x="9.4906%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt;*, enum2$ (13 samples, 0.06%)</title><rect x="9.2406%" y="1717" width="0.0622%" height="15" fill="rgb(248,76,44)" fg:x="1931" fg:w="13"/><text x="9.4906%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$27::fold_program&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;(swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1701" width="0.0239%" height="15" fill="rgb(241,186,54)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1685" width="0.0239%" height="15" fill="rgb(249,171,29)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1669" width="0.0239%" height="15" fill="rgb(237,151,44)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1653" width="0.0239%" height="15" fill="rgb(228,174,30)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1637" width="0.0239%" height="15" fill="rgb(252,14,37)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1621" width="0.0239%" height="15" fill="rgb(207,111,40)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_module&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1605" width="0.0239%" height="15" fill="rgb(248,171,54)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_children_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_ast::module::Module*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1589" width="0.0239%" height="15" fill="rgb(211,127,2)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1573" width="0.0239%" height="15" fill="rgb(236,87,47)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_module_items&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, alloc::vec::Vec&lt;enum2$ (5 samples, 0.02%)</title><rect x="9.2788%" y="1557" width="0.0239%" height="15" fill="rgb(223,190,45)" fg:x="1939" fg:w="5"/><text x="9.5288%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (16 samples, 0.08%)</title><rect x="9.2406%" y="1765" width="0.0766%" height="15" fill="rgb(215,5,16)" fg:x="1931" fg:w="16"/><text x="9.4906%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$28::fold_program&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt;(enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.3028%" y="1749" width="0.0144%" height="15" fill="rgb(252,82,33)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.3028%" y="1733" width="0.0144%" height="15" fill="rgb(247,213,44)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(enum2$ (3 samples, 0.01%)</title><rect x="9.3028%" y="1717" width="0.0144%" height="15" fill="rgb(205,196,44)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (3 samples, 0.01%)</title><rect x="9.3028%" y="1701" width="0.0144%" height="15" fill="rgb(237,96,54)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (3 samples, 0.01%)</title><rect x="9.3028%" y="1685" width="0.0144%" height="15" fill="rgb(230,113,34)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_transforms_proposal::decorators::legacy::impl$2::visit_mut_module (3 samples, 0.01%)</title><rect x="9.3028%" y="1669" width="0.0144%" height="15" fill="rgb(221,224,12)" fg:x="1944" fg:w="3"/><text x="9.5528%" y="1679.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_common::errors::Handler&gt;::set&lt;swc_common::errors::Handler,deno_ast::transpiling::fold_program::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (20 samples, 0.10%)</title><rect x="9.2406%" y="1925" width="0.0957%" height="15" fill="rgb(219,112,44)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1935.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_common::errors::Handler&gt;::set&lt;swc_common::errors::Handler,deno_ast::transpiling::fold_program::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (20 samples, 0.10%)</title><rect x="9.2406%" y="1909" width="0.0957%" height="15" fill="rgb(210,31,13)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1919.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program::closure$0 (20 samples, 0.10%)</title><rect x="9.2406%" y="1893" width="0.0957%" height="15" fill="rgb(230,25,16)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1903.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_ecma_transforms_base::helpers::Helpers&gt;::set&lt;swc_ecma_transforms_base::helpers::Helpers,deno_ast::transpiling::fold_program::closure$0::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (20 samples, 0.10%)</title><rect x="9.2406%" y="1877" width="0.0957%" height="15" fill="rgb(246,108,53)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1887.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_ecma_transforms_base::helpers::Helpers&gt;::set&lt;swc_ecma_transforms_base::helpers::Helpers,deno_ast::transpiling::fold_program::closure$0::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (20 samples, 0.10%)</title><rect x="9.2406%" y="1861" width="0.0957%" height="15" fill="rgb(241,172,50)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1871.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program::closure$0::closure$0 (20 samples, 0.10%)</title><rect x="9.2406%" y="1845" width="0.0957%" height="15" fill="rgb(235,141,10)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$192::fold_with&lt;swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;, swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder (20 samples, 0.10%)</title><rect x="9.2406%" y="1829" width="0.0957%" height="15" fill="rgb(220,174,43)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (20 samples, 0.10%)</title><rect x="9.2406%" y="1813" width="0.0957%" height="15" fill="rgb(215,181,40)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (20 samples, 0.10%)</title><rect x="9.2406%" y="1797" width="0.0957%" height="15" fill="rgb(230,97,2)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (20 samples, 0.10%)</title><rect x="9.2406%" y="1781" width="0.0957%" height="15" fill="rgb(211,25,27)" fg:x="1931" fg:w="20"/><text x="9.4906%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.3171%" y="1765" width="0.0191%" height="15" fill="rgb(230,87,26)" fg:x="1947" fg:w="4"/><text x="9.5671%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(enum2$ (3 samples, 0.01%)</title><rect x="9.3219%" y="1749" width="0.0144%" height="15" fill="rgb(227,160,17)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (3 samples, 0.01%)</title><rect x="9.3219%" y="1733" width="0.0144%" height="15" fill="rgb(244,85,34)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (3 samples, 0.01%)</title><rect x="9.3219%" y="1717" width="0.0144%" height="15" fill="rgb(207,70,0)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_module (3 samples, 0.01%)</title><rect x="9.3219%" y="1701" width="0.0144%" height="15" fill="rgb(223,129,7)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_children_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (3 samples, 0.01%)</title><rect x="9.3219%" y="1685" width="0.0144%" height="15" fill="rgb(246,105,7)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (3 samples, 0.01%)</title><rect x="9.3219%" y="1669" width="0.0144%" height="15" fill="rgb(215,154,42)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_module_items(swc_ecma_transforms_base::resolver::Resolver*, alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.3219%" y="1653" width="0.0144%" height="15" fill="rgb(220,215,30)" fg:x="1948" fg:w="3"/><text x="9.5719%" y="1663.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program(enum2$&lt;swc_ecma_ast::module::Program&gt;, deno_ast::transpiling::EmitOptions*, alloc::rc::Rc&lt;swc_common::source_map::SourceMap&gt;, swc_common::comments::SingleThreadedComments*, swc_common::syntax_pos::hygiene::Mark, ref$&lt;slice2$ (23 samples, 0.11%)</title><rect x="9.2406%" y="1941" width="0.1101%" height="15" fill="rgb(228,81,51)" fg:x="1931" fg:w="23"/><text x="9.4906%" y="1951.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_common::syntax_pos::Globals&gt;::set&lt;swc_common::syntax_pos::Globals,deno_ast::transpiling::impl$3::transpile::closure_env$0,enum2$&lt;core::result::Result&lt;deno_ast::transpiling::TranspiledSource,anyhow::Error&gt; &gt; &gt; (32 samples, 0.15%)</title><rect x="9.2406%" y="1989" width="0.1531%" height="15" fill="rgb(247,71,54)" fg:x="1931" fg:w="32"/><text x="9.4906%" y="1999.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_common::syntax_pos::Globals&gt;::set&lt;swc_common::syntax_pos::Globals,deno_ast::transpiling::impl$3::transpile::closure_env$0,enum2$&lt;core::result::Result&lt;deno_ast::transpiling::TranspiledSource,anyhow::Error&gt; &gt; &gt; (32 samples, 0.15%)</title><rect x="9.2406%" y="1973" width="0.1531%" height="15" fill="rgb(234,176,34)" fg:x="1931" fg:w="32"/><text x="9.4906%" y="1983.50"></text></g><g><title>deno.exe`deno_ast::transpiling::impl$3::transpile::closure$0 (32 samples, 0.15%)</title><rect x="9.2406%" y="1957" width="0.1531%" height="15" fill="rgb(241,103,54)" fg:x="1931" fg:w="32"/><text x="9.4906%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_program::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="9.3602%" y="1941" width="0.0335%" height="15" fill="rgb(228,22,34)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_program&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (7 samples, 0.03%)</title><rect x="9.3602%" y="1925" width="0.0335%" height="15" fill="rgb(241,179,48)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::module::Module,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module::Module**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="9.3602%" y="1909" width="0.0335%" height="15" fill="rgb(235,167,37)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_module::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module::Module*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="9.3602%" y="1893" width="0.0335%" height="15" fill="rgb(213,109,30)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_module&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (7 samples, 0.03%)</title><rect x="9.3602%" y="1877" width="0.0335%" height="15" fill="rgb(222,172,16)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="9.3602%" y="1861" width="0.0335%" height="15" fill="rgb(233,192,5)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_module_item::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="9.3602%" y="1845" width="0.0335%" height="15" fill="rgb(247,189,41)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_module_item&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (7 samples, 0.03%)</title><rect x="9.3602%" y="1829" width="0.0335%" height="15" fill="rgb(218,134,47)" fg:x="1956" fg:w="7"/><text x="9.6102%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="9.3698%" y="1813" width="0.0239%" height="15" fill="rgb(216,29,3)" fg:x="1958" fg:w="5"/><text x="9.6198%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="9.3698%" y="1797" width="0.0239%" height="15" fill="rgb(246,140,12)" fg:x="1958" fg:w="5"/><text x="9.6198%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (5 samples, 0.02%)</title><rect x="9.3698%" y="1781" width="0.0239%" height="15" fill="rgb(230,136,11)" fg:x="1958" fg:w="5"/><text x="9.6198%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::ExprStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::ExprStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1765" width="0.0191%" height="15" fill="rgb(247,22,47)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_expr_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::ExprStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1749" width="0.0191%" height="15" fill="rgb(218,84,22)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1733" width="0.0191%" height="15" fill="rgb(216,87,39)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1717" width="0.0191%" height="15" fill="rgb(221,178,8)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1701" width="0.0191%" height="15" fill="rgb(230,42,11)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1685" width="0.0191%" height="15" fill="rgb(237,229,4)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1669" width="0.0191%" height="15" fill="rgb(222,31,33)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1653" width="0.0191%" height="15" fill="rgb(210,17,39)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1637" width="0.0191%" height="15" fill="rgb(244,93,20)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spreads&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_common::syntax_pos::Span, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1621" width="0.0191%" height="15" fill="rgb(210,40,47)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1605" width="0.0191%" height="15" fill="rgb(239,211,47)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1589" width="0.0191%" height="15" fill="rgb(251,223,49)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr_or_spread::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ExprOrSpread*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1573" width="0.0191%" height="15" fill="rgb(221,149,5)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spread&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1557" width="0.0191%" height="15" fill="rgb(219,224,51)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1541" width="0.0191%" height="15" fill="rgb(223,7,8)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1525" width="0.0191%" height="15" fill="rgb(241,217,22)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1509" width="0.0191%" height="15" fill="rgb(248,209,0)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::ArrowExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ArrowExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1493" width="0.0191%" height="15" fill="rgb(217,205,4)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_arrow_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ArrowExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1477" width="0.0191%" height="15" fill="rgb(228,124,39)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_arrow_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1461" width="0.0191%" height="15" fill="rgb(250,116,42)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::BlockStmtOrExpr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::BlockStmtOrExpr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1445" width="0.0191%" height="15" fill="rgb(223,202,9)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_block_stmt_or_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::BlockStmtOrExpr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1429" width="0.0191%" height="15" fill="rgb(242,222,40)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_or_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1413" width="0.0191%" height="15" fill="rgb(229,99,46)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1397" width="0.0191%" height="15" fill="rgb(225,56,46)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1381" width="0.0191%" height="15" fill="rgb(227,94,5)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1365" width="0.0191%" height="15" fill="rgb(205,112,38)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1349" width="0.0191%" height="15" fill="rgb(231,133,46)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1333" width="0.0191%" height="15" fill="rgb(217,16,9)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_ast::decl::VarDecl,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1317" width="0.0191%" height="15" fill="rgb(249,173,9)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;swc_ecma_ast::decl::VarDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1301" width="0.0191%" height="15" fill="rgb(205,163,53)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_var_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1285" width="0.0191%" height="15" fill="rgb(217,54,41)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1269" width="0.0191%" height="15" fill="rgb(228,216,12)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1253" width="0.0191%" height="15" fill="rgb(244,228,15)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::decl::VarDeclarator&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1237" width="0.0191%" height="15" fill="rgb(221,176,53)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::decl::VarDeclarator&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.3746%" y="1221" width="0.0191%" height="15" fill="rgb(205,94,34)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_var_declarator::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDeclarator*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.3746%" y="1205" width="0.0191%" height="15" fill="rgb(213,110,48)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_declarator&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="9.3746%" y="1189" width="0.0191%" height="15" fill="rgb(236,142,28)" fg:x="1959" fg:w="4"/><text x="9.6246%" y="1199.50"></text></g><g><title>deno.exe`futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin&lt;deno_core::modules::RecursiveModuleLoad&gt; (47 samples, 0.22%)</title><rect x="9.1784%" y="2197" width="0.2249%" height="15" fill="rgb(225,135,29)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2207.50"></text></g><g><title>deno.exe`futures_core::stream::impl$4::try_poll_next&lt;deno_core::modules::RecursiveModuleLoad,tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt;,anyhow::Error&gt;(core::pin::Pin&lt;ref_mut$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2181" width="0.2249%" height="15" fill="rgb(252,45,31)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2191.50"></text></g><g><title>deno.exe`deno_core::modules::impl$3::poll_next(core::pin::Pin&lt;ref_mut$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2165" width="0.2249%" height="15" fill="rgb(211,187,50)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2175.50"></text></g><g><title>deno.exe`futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2149" width="0.2249%" height="15" fill="rgb(229,109,7)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2159.50"></text></g><g><title>deno.exe`futures_core::stream::impl$4::try_poll_next&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2133" width="0.2249%" height="15" fill="rgb(251,131,51)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2143.50"></text></g><g><title>deno.exe`futures_util::stream::futures_unordered::impl$7::poll_next&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2117" width="0.2249%" height="15" fill="rgb(251,180,35)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2127.50"></text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2101" width="0.2249%" height="15" fill="rgb(211,46,32)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2111.50"></text></g><g><title>deno.exe`deno_core::modules::impl$3::poll_next::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2085" width="0.2249%" height="15" fill="rgb(248,123,17)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2095.50"></text></g><g><title>deno.exe`deno::module_loader::impl$5::load(deno::module_loader::CliModuleLoader*, url::Url*, enum2$&lt;core::option::Option&lt;ref$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2069" width="0.2249%" height="15" fill="rgb(227,141,18)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2079.50"></text></g><g><title>deno.exe`deno::module_loader::CliModuleLoader::load_sync(url::Url*, enum2$&lt;core::option::Option&lt;ref$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2053" width="0.2249%" height="15" fill="rgb(216,102,9)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2063.50"></text></g><g><title>deno.exe`deno::module_loader::PreparedModuleLoader::load_prepared_module(url::Url*, enum2$&lt;core::option::Option&lt;ref$ (47 samples, 0.22%)</title><rect x="9.1784%" y="2037" width="0.2249%" height="15" fill="rgb(253,47,13)" fg:x="1918" fg:w="47"/><text x="9.4284%" y="2047.50"></text></g><g><title>deno.exe`deno::emit::Emitter::emit_parsed_source(url::Url*, deno_media_type::MediaType, alloc::sync::Arc (46 samples, 0.22%)</title><rect x="9.1831%" y="2021" width="0.2201%" height="15" fill="rgb(226,93,23)" fg:x="1919" fg:w="46"/><text x="9.4331%" y="2031.50"></text></g><g><title>deno.exe`deno_ast::parsed_source::ParsedSource::transpile (34 samples, 0.16%)</title><rect x="9.2406%" y="2005" width="0.1627%" height="15" fill="rgb(247,104,17)" fg:x="1931" fg:w="34"/><text x="9.4906%" y="2015.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; &gt;(alloc::sync::Arc&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1957" width="0.0144%" height="15" fill="rgb(233,203,26)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1967.50"></text></g><g><title>deno.exe`alloc::sync::impl$27::drop&lt;enum2$&lt;swc_ecma_ast::module::Program&gt; &gt;(alloc::sync::Arc&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1941" width="0.0144%" height="15" fill="rgb(244,98,49)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1951.50"></text></g><g><title>deno.exe`alloc::sync::Arc&lt;enum2$&lt;swc_ecma_ast::module::Program&gt; &gt;::drop_slow&lt;enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (3 samples, 0.01%)</title><rect x="9.4080%" y="1925" width="0.0144%" height="15" fill="rgb(235,134,22)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1935.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;enum2$&lt;swc_ecma_ast::module::Program&gt; &gt;(enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1909" width="0.0144%" height="15" fill="rgb(221,70,32)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1919.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;swc_ecma_ast::module::Module&gt; (3 samples, 0.01%)</title><rect x="9.4080%" y="1893" width="0.0144%" height="15" fill="rgb(238,15,50)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1903.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1877" width="0.0144%" height="15" fill="rgb(215,221,48)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1887.50"></text></g><g><title>deno.exe`alloc::vec::impl$25::drop&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1861" width="0.0144%" height="15" fill="rgb(236,73,3)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1871.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;slice2$&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt; &gt;(ptr_mut$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1845" width="0.0144%" height="15" fill="rgb(250,107,11)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1855.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;(enum2$ (3 samples, 0.01%)</title><rect x="9.4080%" y="1829" width="0.0144%" height="15" fill="rgb(242,39,14)" fg:x="1966" fg:w="3"/><text x="9.6580%" y="1839.50"></text></g><g><title>deno.exe`deno::cache::parsed_source::ParsedSourceCache::free (5 samples, 0.02%)</title><rect x="9.4080%" y="2069" width="0.0239%" height="15" fill="rgb(248,164,37)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="2079.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::option::Option&lt;deno_ast::parsed_source::ParsedSource&gt; &gt; &gt;(enum2$&lt;core::option::Option (5 samples, 0.02%)</title><rect x="9.4080%" y="2053" width="0.0239%" height="15" fill="rgb(217,60,12)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="2063.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_ast::parsed_source::ParsedSource&gt; (5 samples, 0.02%)</title><rect x="9.4080%" y="2037" width="0.0239%" height="15" fill="rgb(240,125,29)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="2047.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;deno_ast::parsed_source::ParsedSourceInner&gt; &gt;(alloc::sync::Arc (5 samples, 0.02%)</title><rect x="9.4080%" y="2021" width="0.0239%" height="15" fill="rgb(208,207,28)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="2031.50"></text></g><g><title>deno.exe`alloc::sync::impl$27::drop&lt;deno_ast::parsed_source::ParsedSourceInner&gt;(alloc::sync::Arc (5 samples, 0.02%)</title><rect x="9.4080%" y="2005" width="0.0239%" height="15" fill="rgb(209,159,27)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="2015.50"></text></g><g><title>deno.exe`alloc::sync::Arc&lt;deno_ast::parsed_source::ParsedSourceInner&gt;::drop_slow&lt;deno_ast::parsed_source::ParsedSourceInner&gt; (5 samples, 0.02%)</title><rect x="9.4080%" y="1989" width="0.0239%" height="15" fill="rgb(251,176,53)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="1999.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;deno_ast::parsed_source::ParsedSourceInner&gt; (5 samples, 0.02%)</title><rect x="9.4080%" y="1973" width="0.0239%" height="15" fill="rgb(211,85,7)" fg:x="1966" fg:w="5"/><text x="9.6580%" y="1983.50"></text></g><g><title>deno.exe`core::result::impl$26::branch (4 samples, 0.02%)</title><rect x="9.4415%" y="1989" width="0.0191%" height="15" fill="rgb(216,64,54)" fg:x="1973" fg:w="4"/><text x="9.6915%" y="1999.50"></text></g><g><title>deno.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (4 samples, 0.02%)</title><rect x="9.4415%" y="1973" width="0.0191%" height="15" fill="rgb(217,54,24)" fg:x="1973" fg:w="4"/><text x="9.6915%" y="1983.50"></text></g><g><title>deno.exe`std::sys::windows::handle::Handle::read_buf (4 samples, 0.02%)</title><rect x="9.4415%" y="1957" width="0.0191%" height="15" fill="rgb(208,206,53)" fg:x="1973" fg:w="4"/><text x="9.6915%" y="1967.50"></text></g><g><title>deno.exe`std::sys::windows::handle::Handle::synchronous_read (4 samples, 0.02%)</title><rect x="9.4415%" y="1941" width="0.0191%" height="15" fill="rgb(251,74,39)" fg:x="1973" fg:w="4"/><text x="9.6915%" y="1951.50"></text></g><g><title>`0x7FFAA222EE14 (4 samples, 0.02%)</title><rect x="9.4415%" y="1925" width="0.0191%" height="15" fill="rgb(226,47,5)" fg:x="1973" fg:w="4"/><text x="9.6915%" y="1935.50"></text></g><g><title>deno.exe`deno::cache::disk_cache::DiskCache::get(ref$ (18 samples, 0.09%)</title><rect x="9.4320%" y="2037" width="0.0861%" height="15" fill="rgb(234,111,33)" fg:x="1971" fg:w="18"/><text x="9.6820%" y="2047.50"></text></g><g><title>deno.exe`std::fs::read&lt;std::path::PathBuf&gt; (18 samples, 0.09%)</title><rect x="9.4320%" y="2021" width="0.0861%" height="15" fill="rgb(251,14,10)" fg:x="1971" fg:w="18"/><text x="9.6820%" y="2031.50"></text></g><g><title>deno.exe`std::fs::read::inner (18 samples, 0.09%)</title><rect x="9.4320%" y="2005" width="0.0861%" height="15" fill="rgb(232,43,0)" fg:x="1971" fg:w="18"/><text x="9.6820%" y="2015.50"></text></g><g><title>deno.exe`std::fs::File::open (12 samples, 0.06%)</title><rect x="9.4607%" y="1989" width="0.0574%" height="15" fill="rgb(222,68,43)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1999.50"></text></g><g><title>deno.exe`std::fs::OpenOptions::open (12 samples, 0.06%)</title><rect x="9.4607%" y="1973" width="0.0574%" height="15" fill="rgb(217,24,23)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1983.50"></text></g><g><title>deno.exe`std::fs::OpenOptions::_open (12 samples, 0.06%)</title><rect x="9.4607%" y="1957" width="0.0574%" height="15" fill="rgb(229,209,14)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1967.50"></text></g><g><title>deno.exe`core::result::Result::map (12 samples, 0.06%)</title><rect x="9.4607%" y="1941" width="0.0574%" height="15" fill="rgb(250,149,48)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1951.50"></text></g><g><title>deno.exe`std::sys::windows::fs::File::open (12 samples, 0.06%)</title><rect x="9.4607%" y="1925" width="0.0574%" height="15" fill="rgb(210,120,37)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1935.50"></text></g><g><title>deno.exe`core::convert::impl$6::try_into (12 samples, 0.06%)</title><rect x="9.4607%" y="1909" width="0.0574%" height="15" fill="rgb(210,21,8)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1919.50"></text></g><g><title>deno.exe`std::os::windows::io::handle::impl$12::try_from (12 samples, 0.06%)</title><rect x="9.4607%" y="1893" width="0.0574%" height="15" fill="rgb(243,145,7)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1903.50"></text></g><g><title>`0x7FFA9F7D477C (12 samples, 0.06%)</title><rect x="9.4607%" y="1877" width="0.0574%" height="15" fill="rgb(238,178,32)" fg:x="1977" fg:w="12"/><text x="9.7107%" y="1887.50"></text></g><g><title>`0x7FFA9F7D4E10 (11 samples, 0.05%)</title><rect x="9.4655%" y="1861" width="0.0526%" height="15" fill="rgb(222,4,10)" fg:x="1978" fg:w="11"/><text x="9.7155%" y="1871.50"></text></g><g><title>`0x7FFAA222F7F4 (11 samples, 0.05%)</title><rect x="9.4655%" y="1845" width="0.0526%" height="15" fill="rgb(239,7,37)" fg:x="1978" fg:w="11"/><text x="9.7155%" y="1855.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::get_meta_filename (3 samples, 0.01%)</title><rect x="9.5181%" y="2037" width="0.0144%" height="15" fill="rgb(215,31,37)" fg:x="1989" fg:w="3"/><text x="9.7681%" y="2047.50"></text></g><g><title>deno.exe`deno::cache::disk_cache::DiskCache::get_cache_filename_with_extension(url::Url*, ref$ (3 samples, 0.01%)</title><rect x="9.5181%" y="2021" width="0.0144%" height="15" fill="rgb(224,83,33)" fg:x="1989" fg:w="3"/><text x="9.7681%" y="2031.50"></text></g><g><title>deno.exe`deno::cache::disk_cache::DiskCache::get_cache_filename (3 samples, 0.01%)</title><rect x="9.5181%" y="2005" width="0.0144%" height="15" fill="rgb(239,55,3)" fg:x="1989" fg:w="3"/><text x="9.7681%" y="2015.50"></text></g><g><title>deno.exe`deno_cache_dir::global::url_to_filename (3 samples, 0.01%)</title><rect x="9.5181%" y="1989" width="0.0144%" height="15" fill="rgb(247,92,11)" fg:x="1989" fg:w="3"/><text x="9.7681%" y="1999.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::get_emit_code (25 samples, 0.12%)</title><rect x="9.4320%" y="2053" width="0.1196%" height="15" fill="rgb(239,200,7)" fg:x="1971" fg:w="25"/><text x="9.6820%" y="2063.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;std::fs::File&gt; (7 samples, 0.03%)</title><rect x="9.5564%" y="1925" width="0.0335%" height="15" fill="rgb(227,115,8)" fg:x="1997" fg:w="7"/><text x="9.8064%" y="1935.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;std::sys::windows::fs::File&gt; (7 samples, 0.03%)</title><rect x="9.5564%" y="1909" width="0.0335%" height="15" fill="rgb(215,189,27)" fg:x="1997" fg:w="7"/><text x="9.8064%" y="1919.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;std::sys::windows::handle::Handle&gt; (7 samples, 0.03%)</title><rect x="9.5564%" y="1893" width="0.0335%" height="15" fill="rgb(251,216,39)" fg:x="1997" fg:w="7"/><text x="9.8064%" y="1903.50"></text></g><g><title>deno.exe`core::ptr::drop_in_place&lt;std::os::windows::io::handle::OwnedHandle&gt; (7 samples, 0.03%)</title><rect x="9.5564%" y="1877" width="0.0335%" height="15" fill="rgb(207,29,47)" fg:x="1997" fg:w="7"/><text x="9.8064%" y="1887.50"></text></g><g><title>deno.exe`std::os::windows::io::handle::impl$23::drop (7 samples, 0.03%)</title><rect x="9.5564%" y="1861" width="0.0335%" height="15" fill="rgb(210,71,34)" fg:x="1997" fg:w="7"/><text x="9.8064%" y="1871.50"></text></g><g><title>`0x7FFA9F7D3B4F (6 samples, 0.03%)</title><rect x="9.5612%" y="1845" width="0.0287%" height="15" fill="rgb(253,217,51)" fg:x="1998" fg:w="6"/><text x="9.8112%" y="1855.50"></text></g><g><title>`0x7FFAA222EF34 (6 samples, 0.03%)</title><rect x="9.5612%" y="1829" width="0.0287%" height="15" fill="rgb(222,117,46)" fg:x="1998" fg:w="6"/><text x="9.8112%" y="1839.50"></text></g><g><title>deno.exe`std::fs::OpenOptions::open&lt;ref$&lt;std::path::Path&gt; &gt;(ref$ (13 samples, 0.06%)</title><rect x="9.5899%" y="1925" width="0.0622%" height="15" fill="rgb(226,132,6)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1935.50"></text></g><g><title>deno.exe`std::sys::windows::fs::File::open (13 samples, 0.06%)</title><rect x="9.5899%" y="1909" width="0.0622%" height="15" fill="rgb(254,145,51)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1919.50"></text></g><g><title>deno.exe`core::convert::impl$6::try_into (13 samples, 0.06%)</title><rect x="9.5899%" y="1893" width="0.0622%" height="15" fill="rgb(231,199,27)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1903.50"></text></g><g><title>deno.exe`std::os::windows::io::handle::impl$12::try_from (13 samples, 0.06%)</title><rect x="9.5899%" y="1877" width="0.0622%" height="15" fill="rgb(245,158,14)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1887.50"></text></g><g><title>`0x7FFA9F7D477C (13 samples, 0.06%)</title><rect x="9.5899%" y="1861" width="0.0622%" height="15" fill="rgb(240,113,14)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1871.50"></text></g><g><title>`0x7FFA9F7D4E10 (13 samples, 0.06%)</title><rect x="9.5899%" y="1845" width="0.0622%" height="15" fill="rgb(210,20,13)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1855.50"></text></g><g><title>`0x7FFAA222F7F4 (13 samples, 0.06%)</title><rect x="9.5899%" y="1829" width="0.0622%" height="15" fill="rgb(241,144,13)" fg:x="2004" fg:w="13"/><text x="9.8399%" y="1839.50"></text></g><g><title>deno.exe`deno::util::fs::write_file&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (22 samples, 0.11%)</title><rect x="9.5564%" y="1957" width="0.1053%" height="15" fill="rgb(235,43,34)" fg:x="1997" fg:w="22"/><text x="9.8064%" y="1967.50"></text></g><g><title>deno.exe`deno::util::fs::write_file_2&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (22 samples, 0.11%)</title><rect x="9.5564%" y="1941" width="0.1053%" height="15" fill="rgb(208,36,20)" fg:x="1997" fg:w="22"/><text x="9.8064%" y="1951.50"></text></g><g><title>`0x7FFA9F82B9EF (11 samples, 0.05%)</title><rect x="9.6665%" y="1861" width="0.0526%" height="15" fill="rgb(239,204,10)" fg:x="2020" fg:w="11"/><text x="9.9165%" y="1871.50"></text></g><g><title>`0x7FFAA222F234 (11 samples, 0.05%)</title><rect x="9.6665%" y="1845" width="0.0526%" height="15" fill="rgb(217,84,43)" fg:x="2020" fg:w="11"/><text x="9.9165%" y="1855.50"></text></g><g><title>deno.exe`deno::cache::disk_cache::DiskCache::set(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (36 samples, 0.17%)</title><rect x="9.5564%" y="2021" width="0.1723%" height="15" fill="rgb(241,170,50)" fg:x="1997" fg:w="36"/><text x="9.8064%" y="2031.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (36 samples, 0.17%)</title><rect x="9.5564%" y="2005" width="0.1723%" height="15" fill="rgb(226,205,29)" fg:x="1997" fg:w="36"/><text x="9.8064%" y="2015.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file::inner(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (36 samples, 0.17%)</title><rect x="9.5564%" y="1989" width="0.1723%" height="15" fill="rgb(233,113,1)" fg:x="1997" fg:w="36"/><text x="9.8064%" y="1999.50"></text></g><g><title>deno.exe`deno::util::fs::atomic_write_file::atomic_write_file_raw(ref$&lt;std::path::Path&gt;, ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (36 samples, 0.17%)</title><rect x="9.5564%" y="1973" width="0.1723%" height="15" fill="rgb(253,98,13)" fg:x="1997" fg:w="36"/><text x="9.8064%" y="1983.50"></text></g><g><title>deno.exe`std::fs::rename&lt;ref$&lt;std::path::Path&gt;,ref$&lt;std::path::Path&gt; &gt;(ref$&lt;std::path::Path&gt;, ref$ (14 samples, 0.07%)</title><rect x="9.6617%" y="1957" width="0.0670%" height="15" fill="rgb(211,115,12)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1967.50"></text></g><g><title>deno.exe`std::sys::windows::fs::rename (14 samples, 0.07%)</title><rect x="9.6617%" y="1941" width="0.0670%" height="15" fill="rgb(208,12,16)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1951.50"></text></g><g><title>deno.exe`std::sys::windows::cvt (14 samples, 0.07%)</title><rect x="9.6617%" y="1925" width="0.0670%" height="15" fill="rgb(237,193,54)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1935.50"></text></g><g><title>deno.exe`std::sys::windows::impl$2::is_zero (14 samples, 0.07%)</title><rect x="9.6617%" y="1909" width="0.0670%" height="15" fill="rgb(243,22,42)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1919.50"></text></g><g><title>`0x7FFA9F82B6A4 (14 samples, 0.07%)</title><rect x="9.6617%" y="1893" width="0.0670%" height="15" fill="rgb(233,151,36)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1903.50"></text></g><g><title>`0x7FFA9F82B6F6 (14 samples, 0.07%)</title><rect x="9.6617%" y="1877" width="0.0670%" height="15" fill="rgb(237,57,45)" fg:x="2019" fg:w="14"/><text x="9.9117%" y="1887.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::set_emit_code(url::Url*, unsigned long long, ref$ (39 samples, 0.19%)</title><rect x="9.5516%" y="2053" width="0.1866%" height="15" fill="rgb(221,88,17)" fg:x="1996" fg:w="39"/><text x="9.8016%" y="2063.50"></text></g><g><title>deno.exe`deno::cache::emit::EmitCache::set_emit_code_result(url::Url*, unsigned long long, ref$ (39 samples, 0.19%)</title><rect x="9.5516%" y="2037" width="0.1866%" height="15" fill="rgb(230,79,15)" fg:x="1996" fg:w="39"/><text x="9.8016%" y="2047.50"></text></g><g><title>deno.exe`base64::encode::encode_config_buf&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (4 samples, 0.02%)</title><rect x="9.7430%" y="1989" width="0.0191%" height="15" fill="rgb(213,57,13)" fg:x="2036" fg:w="4"/><text x="9.9930%" y="1999.50"></text></g><g><title>deno.exe`base64::chunked_encoder::ChunkedEncoder::encode&lt;base64::chunked_encoder::StringSink&gt;(ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.7430%" y="1973" width="0.0191%" height="15" fill="rgb(222,116,39)" fg:x="2036" fg:w="4"/><text x="9.9930%" y="1983.50"></text></g><g><title>deno.exe`base64::encode::encode_to_slice(ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (4 samples, 0.02%)</title><rect x="9.7430%" y="1957" width="0.0191%" height="15" fill="rgb(245,107,2)" fg:x="2036" fg:w="4"/><text x="9.9930%" y="1967.50"></text></g><g><title>deno.exe`base64::encode::read_u64(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="9.7478%" y="1941" width="0.0144%" height="15" fill="rgb(238,1,10)" fg:x="2037" fg:w="3"/><text x="9.9978%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::scope::Scope::prepare_renaming (3 samples, 0.01%)</title><rect x="9.7813%" y="1605" width="0.0144%" height="15" fill="rgb(249,4,48)" fg:x="2044" fg:w="3"/><text x="10.0313%" y="1615.50"></text></g><g><title>deno.exe`core::slice::iter::impl$189::for_each&lt;swc_ecma_transforms_base::rename::analyzer::scope::Scope,swc_ecma_transforms_base::rename::analyzer::scope::impl$4::prepare_renaming::closure_env$0&gt;(core::slice::iter::IterMut (3 samples, 0.01%)</title><rect x="9.7813%" y="1589" width="0.0144%" height="15" fill="rgb(223,151,18)" fg:x="2044" fg:w="3"/><text x="10.0313%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::scope::impl$4::prepare_renaming::closure$0 (3 samples, 0.01%)</title><rect x="9.7813%" y="1573" width="0.0144%" height="15" fill="rgb(227,65,43)" fg:x="2044" fg:w="3"/><text x="10.0313%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::scope::Scope::rename_in_normal_mode&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;(swc_ecma_transforms_base::hygiene::HygieneRenamer*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, swc_ecma_transforms_base::rename::analyzer::reverse_map::ReverseMap*, std::collections::hash::set::HashSet&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,core::hash::BuildHasherDefault (3 samples, 0.01%)</title><rect x="9.8004%" y="1589" width="0.0144%" height="15" fill="rgb(218,40,45)" fg:x="2048" fg:w="3"/><text x="10.0504%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::scope::Scope::rename_one_scope_in_normal_mode&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;(swc_ecma_transforms_base::hygiene::HygieneRenamer*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, swc_ecma_transforms_base::rename::analyzer::reverse_map::ReverseMap*, alloc::vec::Vec&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,alloc::alloc::Global&gt;, std::collections::hash::set::HashSet&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,core::hash::BuildHasherDefault (3 samples, 0.01%)</title><rect x="9.8004%" y="1573" width="0.0144%" height="15" fill="rgb(252,121,31)" fg:x="2048" fg:w="3"/><text x="10.0504%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::scope::Scope::rename_in_normal_mode&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;(swc_ecma_transforms_base::hygiene::HygieneRenamer*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, std::collections::hash::map::HashMap&lt;tuple$&lt;swc_ecma_transforms_base::rename::analyzer::scope::FastJsWord,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,ahash::random_state::RandomState&gt;*, swc_ecma_transforms_base::rename::analyzer::reverse_map::ReverseMap*, std::collections::hash::set::HashSet&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,core::hash::BuildHasherDefault (5 samples, 0.02%)</title><rect x="9.7957%" y="1605" width="0.0239%" height="15" fill="rgb(219,158,43)" fg:x="2047" fg:w="5"/><text x="10.0457%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1461" width="0.0239%" height="15" fill="rgb(231,162,42)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1445" width="0.0239%" height="15" fill="rgb(217,179,25)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_export_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1429" width="0.0239%" height="15" fill="rgb(206,212,31)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_export_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1413" width="0.0239%" height="15" fill="rgb(235,144,12)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1397" width="0.0239%" height="15" fill="rgb(213,51,10)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_decl&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1381" width="0.0239%" height="15" fill="rgb(231,145,14)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::impl$1::visit_fn_decl (5 samples, 0.02%)</title><rect x="9.8196%" y="1365" width="0.0239%" height="15" fill="rgb(235,15,28)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::Analyzer::with_fn_scope&lt;swc_ecma_transforms_base::rename::analyzer::impl$1::visit_fn_decl::closure_env$1&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1349" width="0.0239%" height="15" fill="rgb(237,206,10)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::Analyzer::with_scope&lt;swc_ecma_transforms_base::rename::analyzer::impl$1::visit_fn_decl::closure_env$1&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1333" width="0.0239%" height="15" fill="rgb(236,227,27)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::impl$1::visit_fn_decl::closure$1 (5 samples, 0.02%)</title><rect x="9.8196%" y="1317" width="0.0239%" height="15" fill="rgb(246,83,35)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::analyzer::Analyzer::visit_fn_body_within_same_scope(enum2$&lt;core::option::Option (5 samples, 0.02%)</title><rect x="9.8196%" y="1301" width="0.0239%" height="15" fill="rgb(220,136,24)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$338::visit_children_with&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1285" width="0.0239%" height="15" fill="rgb(217,3,25)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_block_stmt&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (5 samples, 0.02%)</title><rect x="9.8196%" y="1269" width="0.0239%" height="15" fill="rgb(239,24,14)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_stmts&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1253" width="0.0239%" height="15" fill="rgb(244,16,53)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_stmts&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1237" width="0.0239%" height="15" fill="rgb(208,175,44)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1247.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,swc_ecma_visit::visit_stmts::closure_env$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;, swc_ecma_visit::visit_stmts::closure_env$0 (5 samples, 0.02%)</title><rect x="9.8196%" y="1221" width="0.0239%" height="15" fill="rgb(252,18,48)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_stmts::closure$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_visit::visit_stmts::closure_env$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1205" width="0.0239%" height="15" fill="rgb(234,199,32)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_stmt&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1189" width="0.0239%" height="15" fill="rgb(225,77,54)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_stmt&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (5 samples, 0.02%)</title><rect x="9.8196%" y="1173" width="0.0239%" height="15" fill="rgb(225,42,25)" fg:x="2052" fg:w="5"/><text x="10.0696%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;::get_map&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer,swc_ecma_ast::module::Module&gt; (16 samples, 0.08%)</title><rect x="9.7717%" y="1621" width="0.0766%" height="15" fill="rgb(242,227,46)" fg:x="2042" fg:w="16"/><text x="10.0217%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$437::visit_with&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (6 samples, 0.03%)</title><rect x="9.8196%" y="1605" width="0.0287%" height="15" fill="rgb(246,197,35)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (6 samples, 0.03%)</title><rect x="9.8196%" y="1589" width="0.0287%" height="15" fill="rgb(215,159,26)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; (6 samples, 0.03%)</title><rect x="9.8196%" y="1573" width="0.0287%" height="15" fill="rgb(212,194,50)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_items&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, ref$&lt;slice2$&lt;enum2$ (6 samples, 0.03%)</title><rect x="9.8196%" y="1557" width="0.0287%" height="15" fill="rgb(246,132,1)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, ref$&lt;slice2$&lt;enum2$ (6 samples, 0.03%)</title><rect x="9.8196%" y="1541" width="0.0287%" height="15" fill="rgb(217,71,7)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1551.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_module_items::closure_env$0 (6 samples, 0.03%)</title><rect x="9.8196%" y="1525" width="0.0287%" height="15" fill="rgb(252,59,32)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items::closure$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;*, enum2$ (6 samples, 0.03%)</title><rect x="9.8196%" y="1509" width="0.0287%" height="15" fill="rgb(253,204,25)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (6 samples, 0.03%)</title><rect x="9.8196%" y="1493" width="0.0287%" height="15" fill="rgb(232,21,16)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_transforms_base::rename::analyzer::Analyzer&gt;(swc_ecma_transforms_base::rename::analyzer::Analyzer*, enum2$ (6 samples, 0.03%)</title><rect x="9.8196%" y="1477" width="0.0287%" height="15" fill="rgb(248,90,29)" fg:x="2052" fg:w="6"/><text x="10.0696%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::collector::collect_decls&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt;,swc_ecma_ast::module::Module&gt;(swc_ecma_ast::module::Module*, enum2$&lt;core::option::Option (3 samples, 0.01%)</title><rect x="9.8531%" y="1605" width="0.0144%" height="15" fill="rgb(249,223,7)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$437::visit_with&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_ast::module::Module*, swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom (3 samples, 0.01%)</title><rect x="9.8531%" y="1589" width="0.0144%" height="15" fill="rgb(231,119,42)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom (3 samples, 0.01%)</title><rect x="9.8531%" y="1573" width="0.0144%" height="15" fill="rgb(215,41,35)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom (3 samples, 0.01%)</title><rect x="9.8531%" y="1557" width="0.0144%" height="15" fill="rgb(220,44,45)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_items&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt;*, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.8531%" y="1541" width="0.0144%" height="15" fill="rgb(253,197,36)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt;*, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.8531%" y="1525" width="0.0144%" height="15" fill="rgb(245,225,54)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1535.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom (3 samples, 0.01%)</title><rect x="9.8531%" y="1509" width="0.0144%" height="15" fill="rgb(239,94,37)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items::closure$0&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.8531%" y="1493" width="0.0144%" height="15" fill="rgb(242,217,10)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.8531%" y="1477" width="0.0144%" height="15" fill="rgb(250,193,7)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt; &gt;(swc_ecma_transforms_base::rename::collector::CustomBindingCollector&lt;tuple$&lt;string_cache::atom::Atom&lt;swc_atoms::JsWordStaticSet&gt;,swc_common::syntax_pos::hygiene::SyntaxContext&gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.8531%" y="1461" width="0.0144%" height="15" fill="rgb(230,104,19)" fg:x="2059" fg:w="3"/><text x="10.1031%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;::get_unresolved&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer,swc_ecma_ast::module::Module&gt; (6 samples, 0.03%)</title><rect x="9.8483%" y="1621" width="0.0287%" height="15" fill="rgb(230,181,4)" fg:x="2058" fg:w="6"/><text x="10.0983%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::eval::contains_eval&lt;swc_ecma_ast::module::Module&gt; (4 samples, 0.02%)</title><rect x="9.8770%" y="1621" width="0.0191%" height="15" fill="rgb(216,219,49)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$437::visit_with&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt; (4 samples, 0.02%)</title><rect x="9.8770%" y="1605" width="0.0191%" height="15" fill="rgb(254,144,0)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt; (4 samples, 0.02%)</title><rect x="9.8770%" y="1589" width="0.0191%" height="15" fill="rgb(205,209,38)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt; (4 samples, 0.02%)</title><rect x="9.8770%" y="1573" width="0.0191%" height="15" fill="rgb(240,21,42)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_items&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;(swc_ecma_transforms_base::rename::eval::EvalFinder*, ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="9.8770%" y="1557" width="0.0191%" height="15" fill="rgb(241,132,3)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;(swc_ecma_transforms_base::rename::eval::EvalFinder*, ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="9.8770%" y="1541" width="0.0191%" height="15" fill="rgb(225,14,2)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1551.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_module_items::closure_env$0 (4 samples, 0.02%)</title><rect x="9.8770%" y="1525" width="0.0191%" height="15" fill="rgb(210,141,35)" fg:x="2064" fg:w="4"/><text x="10.1270%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items::closure$0&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;(swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.8818%" y="1509" width="0.0144%" height="15" fill="rgb(251,14,44)" fg:x="2065" fg:w="3"/><text x="10.1318%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;(swc_ecma_transforms_base::rename::eval::EvalFinder*, enum2$ (3 samples, 0.01%)</title><rect x="9.8818%" y="1493" width="0.0144%" height="15" fill="rgb(247,48,18)" fg:x="2065" fg:w="3"/><text x="10.1318%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_transforms_base::rename::eval::EvalFinder&gt;(swc_ecma_transforms_base::rename::eval::EvalFinder*, enum2$ (3 samples, 0.01%)</title><rect x="9.8818%" y="1477" width="0.0144%" height="15" fill="rgb(225,0,40)" fg:x="2065" fg:w="3"/><text x="10.1318%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$638::visit_mut_with&lt;swc_ecma_transforms_base::rename::ops::Operator,swc_ecma_ast::function::Function&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1493" width="0.0144%" height="15" fill="rgb(221,31,33)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$701::visit_mut_with&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1477" width="0.0144%" height="15" fill="rgb(237,42,40)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_function&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1461" width="0.0144%" height="15" fill="rgb(233,51,29)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_function&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1445" width="0.0144%" height="15" fill="rgb(226,58,20)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(swc_ecma_transforms_base::rename::ops::Operator*, enum2$&lt;core::option::Option (3 samples, 0.01%)</title><rect x="9.9009%" y="1429" width="0.0144%" height="15" fill="rgb(208,98,7)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(swc_ecma_transforms_base::rename::ops::Operator*, enum2$&lt;core::option::Option (3 samples, 0.01%)</title><rect x="9.9009%" y="1413" width="0.0144%" height="15" fill="rgb(228,143,44)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_block_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1397" width="0.0144%" height="15" fill="rgb(246,55,38)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_block_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (3 samples, 0.01%)</title><rect x="9.9009%" y="1381" width="0.0144%" height="15" fill="rgb(247,87,16)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::ops::impl$3::visit_mut_stmts(swc_ecma_transforms_base::rename::ops::Operator*, alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="9.9009%" y="1365" width="0.0144%" height="15" fill="rgb(234,129,42)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$816::visit_mut_with&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(enum2$ (3 samples, 0.01%)</title><rect x="9.9009%" y="1349" width="0.0144%" height="15" fill="rgb(220,82,16)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(swc_ecma_transforms_base::rename::ops::Operator*, enum2$ (3 samples, 0.01%)</title><rect x="9.9009%" y="1333" width="0.0144%" height="15" fill="rgb(211,88,4)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmt&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(swc_ecma_transforms_base::rename::ops::Operator*, enum2$ (3 samples, 0.01%)</title><rect x="9.9009%" y="1317" width="0.0144%" height="15" fill="rgb(248,151,21)" fg:x="2069" fg:w="3"/><text x="10.1509%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt;*, enum2$ (31 samples, 0.15%)</title><rect x="9.7717%" y="1717" width="0.1483%" height="15" fill="rgb(238,163,6)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;*, enum2$ (31 samples, 0.15%)</title><rect x="9.7717%" y="1701" width="0.1483%" height="15" fill="rgb(209,183,11)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_transforms_base::rename::RenamePass (31 samples, 0.15%)</title><rect x="9.7717%" y="1685" width="0.1483%" height="15" fill="rgb(219,37,20)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;*, enum2$ (31 samples, 0.15%)</title><rect x="9.7717%" y="1669" width="0.1483%" height="15" fill="rgb(210,158,4)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;(swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;*, enum2$ (31 samples, 0.15%)</title><rect x="9.7717%" y="1653" width="0.1483%" height="15" fill="rgb(221,167,53)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::impl$1::visit_mut_module&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt;(swc_ecma_transforms_base::rename::RenamePass (31 samples, 0.15%)</title><rect x="9.7717%" y="1637" width="0.1483%" height="15" fill="rgb(237,151,45)" fg:x="2042" fg:w="31"/><text x="10.0217%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_with&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; &gt;(swc_ecma_ast::module::Module*, swc_ecma_visit::Folder (5 samples, 0.02%)</title><rect x="9.8962%" y="1621" width="0.0239%" height="15" fill="rgb(231,39,3)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$9::visit_mut_module&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(swc_ecma_visit::Folder (5 samples, 0.02%)</title><rect x="9.8962%" y="1605" width="0.0239%" height="15" fill="rgb(212,167,28)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_with&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (5 samples, 0.02%)</title><rect x="9.8962%" y="1589" width="0.0239%" height="15" fill="rgb(232,178,8)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (5 samples, 0.02%)</title><rect x="9.8962%" y="1573" width="0.0239%" height="15" fill="rgb(225,151,20)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_base::rename::ops::Operator&gt; (5 samples, 0.02%)</title><rect x="9.8962%" y="1557" width="0.0239%" height="15" fill="rgb(238,3,37)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::ops::impl$3::visit_mut_module_items(swc_ecma_transforms_base::rename::ops::Operator*, alloc::vec::Vec&lt;enum2$ (5 samples, 0.02%)</title><rect x="9.8962%" y="1541" width="0.0239%" height="15" fill="rgb(251,147,42)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_with&lt;swc_ecma_transforms_base::rename::ops::Operator&gt;(enum2$ (5 samples, 0.02%)</title><rect x="9.8962%" y="1525" width="0.0239%" height="15" fill="rgb(208,173,10)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::rename::ops::impl$3::visit_mut_module_item(swc_ecma_transforms_base::rename::ops::Operator*, enum2$ (5 samples, 0.02%)</title><rect x="9.8962%" y="1509" width="0.0239%" height="15" fill="rgb(246,225,4)" fg:x="2068" fg:w="5"/><text x="10.1462%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt;*, enum2$ (33 samples, 0.16%)</title><rect x="9.7717%" y="1733" width="0.1579%" height="15" fill="rgb(248,102,6)" fg:x="2042" fg:w="33"/><text x="10.0217%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.9297%" y="1685" width="0.0239%" height="15" fill="rgb(232,6,21)" fg:x="2075" fg:w="5"/><text x="10.1797%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="9.9297%" y="1669" width="0.0239%" height="15" fill="rgb(221,179,22)" fg:x="2075" fg:w="5"/><text x="10.1797%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.9392%" y="1653" width="0.0144%" height="15" fill="rgb(252,50,20)" fg:x="2077" fg:w="3"/><text x="10.1892%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_transforms_react::jsx::Jsx&lt;ref$ (3 samples, 0.01%)</title><rect x="9.9392%" y="1637" width="0.0144%" height="15" fill="rgb(222,56,38)" fg:x="2077" fg:w="3"/><text x="10.1892%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.9392%" y="1621" width="0.0144%" height="15" fill="rgb(206,193,29)" fg:x="2077" fg:w="3"/><text x="10.1892%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (3 samples, 0.01%)</title><rect x="9.9392%" y="1605" width="0.0144%" height="15" fill="rgb(239,192,45)" fg:x="2077" fg:w="3"/><text x="10.1892%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_transforms_react::jsx::impl$4::visit_mut_module&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_react::jsx::Jsx&lt;ref$ (3 samples, 0.01%)</title><rect x="9.9392%" y="1589" width="0.0144%" height="15" fill="rgb(254,18,36)" fg:x="2077" fg:w="3"/><text x="10.1892%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt;*, enum2$ (40 samples, 0.19%)</title><rect x="9.7717%" y="1749" width="0.1914%" height="15" fill="rgb(221,127,11)" fg:x="2042" fg:w="40"/><text x="10.0217%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$27::fold_program&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="9.9297%" y="1733" width="0.0335%" height="15" fill="rgb(234,146,35)" fg:x="2075" fg:w="7"/><text x="10.1797%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="9.9297%" y="1717" width="0.0335%" height="15" fill="rgb(254,201,37)" fg:x="2075" fg:w="7"/><text x="10.1797%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="9.9297%" y="1701" width="0.0335%" height="15" fill="rgb(211,202,23)" fg:x="2075" fg:w="7"/><text x="10.1797%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;::handle_module_items&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option&lt;ref$ (8 samples, 0.04%)</title><rect x="9.9775%" y="1589" width="0.0383%" height="15" fill="rgb(237,91,2)" fg:x="2085" fg:w="8"/><text x="10.2275%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="9.9871%" y="1573" width="0.0287%" height="15" fill="rgb(226,228,36)" fg:x="2087" fg:w="6"/><text x="10.2371%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="9.9871%" y="1557" width="0.0287%" height="15" fill="rgb(213,63,50)" fg:x="2087" fg:w="6"/><text x="10.2371%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="9.9871%" y="1541" width="0.0287%" height="15" fill="rgb(235,194,19)" fg:x="2087" fg:w="6"/><text x="10.2371%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1525" width="0.0191%" height="15" fill="rgb(207,204,18)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1509" width="0.0191%" height="15" fill="rgb(248,8,7)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1493" width="0.0191%" height="15" fill="rgb(223,145,47)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1477" width="0.0191%" height="15" fill="rgb(228,84,11)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1461" width="0.0191%" height="15" fill="rgb(218,76,45)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1445" width="0.0191%" height="15" fill="rgb(223,80,15)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_fn_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1429" width="0.0191%" height="15" fill="rgb(219,218,33)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_fn_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1413" width="0.0191%" height="15" fill="rgb(208,51,11)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1397" width="0.0191%" height="15" fill="rgb(229,165,39)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1381" width="0.0191%" height="15" fill="rgb(241,100,24)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="9.9967%" y="1365" width="0.0191%" height="15" fill="rgb(228,14,23)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="9.9967%" y="1349" width="0.0191%" height="15" fill="rgb(247,116,52)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1333" width="0.0191%" height="15" fill="rgb(216,149,33)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1317" width="0.0191%" height="15" fill="rgb(238,142,29)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_stmts&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, alloc::vec::Vec&lt;enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1301" width="0.0191%" height="15" fill="rgb(224,83,40)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$816::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1285" width="0.0191%" height="15" fill="rgb(234,165,11)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_stmt&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1269" width="0.0191%" height="15" fill="rgb(215,96,23)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$816::visit_mut_children_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1253" width="0.0191%" height="15" fill="rgb(233,179,26)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="9.9967%" y="1237" width="0.0191%" height="15" fill="rgb(225,129,33)" fg:x="2089" fg:w="4"/><text x="10.2467%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1317" width="0.0191%" height="15" fill="rgb(237,49,13)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1301" width="0.0191%" height="15" fill="rgb(211,3,31)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1285" width="0.0191%" height="15" fill="rgb(216,152,19)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1269" width="0.0191%" height="15" fill="rgb(251,121,35)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_stmts&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1253" width="0.0191%" height="15" fill="rgb(210,217,47)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1263.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,swc_ecma_transforms_typescript::strip::impl$7::visit_stmts::closure_env$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;, swc_ecma_transforms_typescript::strip::impl$7::visit_stmts::closure_env$0&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1237" width="0.0191%" height="15" fill="rgb(244,116,22)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_stmts::closure$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::impl$7::visit_stmts::closure_env$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1221" width="0.0191%" height="15" fill="rgb(228,17,21)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$514::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1205" width="0.0191%" height="15" fill="rgb(240,149,34)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1189" width="0.0191%" height="15" fill="rgb(208,125,47)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (4 samples, 0.02%)</title><rect x="10.0158%" y="1173" width="0.0191%" height="15" fill="rgb(249,186,39)" fg:x="2093" fg:w="4"/><text x="10.2658%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$320::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;,swc_ecma_ast::function::Function&gt;(swc_ecma_ast::function::Function**, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0158%" y="1381" width="0.0287%" height="15" fill="rgb(240,220,33)" fg:x="2093" fg:w="6"/><text x="10.2658%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$388::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_ast::function::Function*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0158%" y="1365" width="0.0287%" height="15" fill="rgb(243,110,23)" fg:x="2093" fg:w="6"/><text x="10.2658%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0158%" y="1349" width="0.0287%" height="15" fill="rgb(219,163,46)" fg:x="2093" fg:w="6"/><text x="10.2658%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0158%" y="1333" width="0.0287%" height="15" fill="rgb(216,126,30)" fg:x="2093" fg:w="6"/><text x="10.2658%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="10.0158%" y="1461" width="0.0335%" height="15" fill="rgb(208,139,11)" fg:x="2093" fg:w="7"/><text x="10.2658%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="10.0158%" y="1445" width="0.0335%" height="15" fill="rgb(213,118,36)" fg:x="2093" fg:w="7"/><text x="10.2658%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (7 samples, 0.03%)</title><rect x="10.0158%" y="1429" width="0.0335%" height="15" fill="rgb(226,43,17)" fg:x="2093" fg:w="7"/><text x="10.2658%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (7 samples, 0.03%)</title><rect x="10.0158%" y="1413" width="0.0335%" height="15" fill="rgb(254,217,4)" fg:x="2093" fg:w="7"/><text x="10.2658%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_decl&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="10.0158%" y="1397" width="0.0335%" height="15" fill="rgb(210,134,47)" fg:x="2093" fg:w="7"/><text x="10.2658%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$442::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1589" width="0.0431%" height="15" fill="rgb(237,24,49)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$441::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(ref$&lt;slice2$&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt; &gt;, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1573" width="0.0431%" height="15" fill="rgb(251,39,46)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_module_items&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, ref$&lt;slice2$&lt;enum2$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1557" width="0.0431%" height="15" fill="rgb(251,220,3)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1567.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_transforms_typescript::strip::impl$7::visit_module_items::closure_env$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_transforms_typescript::strip::impl$7::visit_module_items::closure_env$0&lt;ref$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1541" width="0.0431%" height="15" fill="rgb(228,105,12)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$7::visit_module_items::closure$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::impl$7::visit_module_items::closure_env$0&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1525" width="0.0431%" height="15" fill="rgb(215,196,1)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$440::visit_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1509" width="0.0431%" height="15" fill="rgb(214,33,39)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1493" width="0.0431%" height="15" fill="rgb(220,19,52)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (9 samples, 0.04%)</title><rect x="10.0158%" y="1477" width="0.0431%" height="15" fill="rgb(221,78,38)" fg:x="2093" fg:w="9"/><text x="10.2658%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (67 samples, 0.32%)</title><rect x="9.7717%" y="1797" width="0.3206%" height="15" fill="rgb(253,30,16)" fg:x="2042" fg:w="67"/><text x="10.0217%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (67 samples, 0.32%)</title><rect x="9.7717%" y="1781" width="0.3206%" height="15" fill="rgb(242,65,0)" fg:x="2042" fg:w="67"/><text x="10.0217%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt;*, enum2$ (67 samples, 0.32%)</title><rect x="9.7717%" y="1765" width="0.3206%" height="15" fill="rgb(235,201,12)" fg:x="2042" fg:w="67"/><text x="10.0217%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$27::fold_program&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;(swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;*, enum2$ (27 samples, 0.13%)</title><rect x="9.9632%" y="1749" width="0.1292%" height="15" fill="rgb(233,161,9)" fg:x="2082" fg:w="27"/><text x="10.2132%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt;*, enum2$ (27 samples, 0.13%)</title><rect x="9.9632%" y="1733" width="0.1292%" height="15" fill="rgb(241,207,41)" fg:x="2082" fg:w="27"/><text x="10.2132%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;*, enum2$ (27 samples, 0.13%)</title><rect x="9.9632%" y="1717" width="0.1292%" height="15" fill="rgb(212,69,46)" fg:x="2082" fg:w="27"/><text x="10.2132%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (27 samples, 0.13%)</title><rect x="9.9632%" y="1701" width="0.1292%" height="15" fill="rgb(239,69,45)" fg:x="2082" fg:w="27"/><text x="10.2132%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (27 samples, 0.13%)</title><rect x="9.9632%" y="1685" width="0.1292%" height="15" fill="rgb(242,117,48)" fg:x="2082" fg:w="27"/><text x="10.2132%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (26 samples, 0.12%)</title><rect x="9.9679%" y="1669" width="0.1244%" height="15" fill="rgb(228,41,36)" fg:x="2083" fg:w="26"/><text x="10.2179%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_module&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (26 samples, 0.12%)</title><rect x="9.9679%" y="1653" width="0.1244%" height="15" fill="rgb(212,3,32)" fg:x="2083" fg:w="26"/><text x="10.2179%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_children_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_ast::module::Module*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (25 samples, 0.12%)</title><rect x="9.9727%" y="1637" width="0.1196%" height="15" fill="rgb(233,41,49)" fg:x="2084" fg:w="25"/><text x="10.2227%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (25 samples, 0.12%)</title><rect x="9.9727%" y="1621" width="0.1196%" height="15" fill="rgb(252,170,49)" fg:x="2084" fg:w="25"/><text x="10.2227%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_module_items&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, alloc::vec::Vec&lt;enum2$ (25 samples, 0.12%)</title><rect x="9.9727%" y="1605" width="0.1196%" height="15" fill="rgb(229,53,26)" fg:x="2084" fg:w="25"/><text x="10.2227%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1589" width="0.0287%" height="15" fill="rgb(217,157,12)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1573" width="0.0287%" height="15" fill="rgb(227,17,9)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_item&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1557" width="0.0287%" height="15" fill="rgb(218,84,12)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1541" width="0.0287%" height="15" fill="rgb(212,79,24)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1525" width="0.0287%" height="15" fill="rgb(217,222,37)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1509" width="0.0287%" height="15" fill="rgb(246,208,8)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_export_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1493" width="0.0287%" height="15" fill="rgb(244,133,10)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1477" width="0.0287%" height="15" fill="rgb(209,219,41)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1461" width="0.0287%" height="15" fill="rgb(253,175,45)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_fn_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1445" width="0.0287%" height="15" fill="rgb(235,100,37)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_fn_decl&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1429" width="0.0287%" height="15" fill="rgb(225,87,19)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1413" width="0.0287%" height="15" fill="rgb(217,152,17)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_function&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1397" width="0.0287%" height="15" fill="rgb(235,72,13)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option (6 samples, 0.03%)</title><rect x="10.0636%" y="1381" width="0.0287%" height="15" fill="rgb(233,140,18)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_opt_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$&lt;core::option::Option (6 samples, 0.03%)</title><rect x="10.0636%" y="1365" width="0.0287%" height="15" fill="rgb(207,212,28)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1349" width="0.0287%" height="15" fill="rgb(220,130,25)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_block_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1333" width="0.0287%" height="15" fill="rgb(205,55,34)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_stmts&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, alloc::vec::Vec&lt;enum2$ (6 samples, 0.03%)</title><rect x="10.0636%" y="1317" width="0.0287%" height="15" fill="rgb(237,54,35)" fg:x="2103" fg:w="6"/><text x="10.3136%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$816::visit_mut_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="10.0684%" y="1301" width="0.0239%" height="15" fill="rgb(208,67,23)" fg:x="2104" fg:w="5"/><text x="10.3184%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::impl$8::visit_mut_stmt&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="10.0684%" y="1285" width="0.0239%" height="15" fill="rgb(206,207,50)" fg:x="2104" fg:w="5"/><text x="10.3184%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$816::visit_mut_children_with&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_transforms_typescript::strip::Strip&lt;ref$ (5 samples, 0.02%)</title><rect x="10.0684%" y="1269" width="0.0239%" height="15" fill="rgb(213,211,42)" fg:x="2104" fg:w="5"/><text x="10.3184%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmt&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;(swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;*, enum2$ (5 samples, 0.02%)</title><rect x="10.0684%" y="1253" width="0.0239%" height="15" fill="rgb(252,197,50)" fg:x="2104" fg:w="5"/><text x="10.3184%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$437::visit_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; (3 samples, 0.01%)</title><rect x="10.0924%" y="1701" width="0.0144%" height="15" fill="rgb(251,211,41)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; (3 samples, 0.01%)</title><rect x="10.0924%" y="1685" width="0.0144%" height="15" fill="rgb(229,211,5)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; (3 samples, 0.01%)</title><rect x="10.0924%" y="1669" width="0.0144%" height="15" fill="rgb(239,36,31)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_items&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.0924%" y="1653" width="0.0144%" height="15" fill="rgb(248,67,31)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.0924%" y="1637" width="0.0144%" height="15" fill="rgb(249,55,44)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1647.50"></text></g><g><title>deno.exe`core::slice::iter::impl$181::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_module_items::closure_env$0 (3 samples, 0.01%)</title><rect x="10.0924%" y="1621" width="0.0144%" height="15" fill="rgb(216,82,12)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_items::closure$0&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_visit::visit_module_items::closure_env$0&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;*, enum2$ (3 samples, 0.01%)</title><rect x="10.0924%" y="1605" width="0.0144%" height="15" fill="rgb(242,174,1)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::Visit::visit_module_item&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (3 samples, 0.01%)</title><rect x="10.0924%" y="1589" width="0.0144%" height="15" fill="rgb(208,120,29)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_module_item&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (3 samples, 0.01%)</title><rect x="10.0924%" y="1573" width="0.0144%" height="15" fill="rgb(221,105,43)" fg:x="2109" fg:w="3"/><text x="10.3424%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (74 samples, 0.35%)</title><rect x="9.7717%" y="1813" width="0.3541%" height="15" fill="rgb(234,124,22)" fg:x="2042" fg:w="74"/><text x="10.0217%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$28::fold_program&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt;(enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;*, enum2$ (7 samples, 0.03%)</title><rect x="10.0924%" y="1797" width="0.0335%" height="15" fill="rgb(212,23,30)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;*, enum2$ (7 samples, 0.03%)</title><rect x="10.0924%" y="1781" width="0.0335%" height="15" fill="rgb(219,122,53)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(enum2$ (7 samples, 0.03%)</title><rect x="10.0924%" y="1765" width="0.0335%" height="15" fill="rgb(248,84,24)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (7 samples, 0.03%)</title><rect x="10.0924%" y="1749" width="0.0335%" height="15" fill="rgb(245,115,18)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (7 samples, 0.03%)</title><rect x="10.0924%" y="1733" width="0.0335%" height="15" fill="rgb(227,176,51)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_transforms_proposal::decorators::legacy::impl$2::visit_mut_module (7 samples, 0.03%)</title><rect x="10.0924%" y="1717" width="0.0335%" height="15" fill="rgb(229,63,42)" fg:x="2109" fg:w="7"/><text x="10.3424%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_children_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; (4 samples, 0.02%)</title><rect x="10.1067%" y="1701" width="0.0191%" height="15" fill="rgb(247,202,24)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt; (4 samples, 0.02%)</title><rect x="10.1067%" y="1685" width="0.0191%" height="15" fill="rgb(244,173,20)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_transforms_proposal::decorators::legacy::impl$2::visit_mut_module_items(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, alloc::vec::Vec&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.1067%" y="1669" width="0.0191%" height="15" fill="rgb(242,81,47)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_transforms_proposal::decorators::legacy::TscDecorator::visit_mut_stmt_likes&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;(alloc::vec::Vec&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.1067%" y="1653" width="0.0191%" height="15" fill="rgb(231,185,54)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.1067%" y="1637" width="0.0191%" height="15" fill="rgb(243,55,32)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_transforms_proposal::decorators::legacy::impl$2::visit_mut_module_item(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (4 samples, 0.02%)</title><rect x="10.1067%" y="1621" width="0.0191%" height="15" fill="rgb(208,167,19)" fg:x="2112" fg:w="4"/><text x="10.3567%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_children_with&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.1115%" y="1605" width="0.0144%" height="15" fill="rgb(231,72,35)" fg:x="2113" fg:w="3"/><text x="10.3615%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_item&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;(swc_ecma_transforms_proposal::decorators::legacy::TscDecorator*, enum2$ (3 samples, 0.01%)</title><rect x="10.1115%" y="1589" width="0.0144%" height="15" fill="rgb(250,173,51)" fg:x="2113" fg:w="3"/><text x="10.3615%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (3 samples, 0.01%)</title><rect x="10.1450%" y="1253" width="0.0144%" height="15" fill="rgb(209,5,22)" fg:x="2120" fg:w="3"/><text x="10.3950%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (3 samples, 0.01%)</title><rect x="10.1450%" y="1237" width="0.0144%" height="15" fill="rgb(250,174,19)" fg:x="2120" fg:w="3"/><text x="10.3950%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (13 samples, 0.06%)</title><rect x="10.1259%" y="1589" width="0.0622%" height="15" fill="rgb(217,3,49)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (13 samples, 0.06%)</title><rect x="10.1259%" y="1573" width="0.0622%" height="15" fill="rgb(218,225,5)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_export_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (13 samples, 0.06%)</title><rect x="10.1259%" y="1557" width="0.0622%" height="15" fill="rgb(236,89,11)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_export_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (13 samples, 0.06%)</title><rect x="10.1259%" y="1541" width="0.0622%" height="15" fill="rgb(206,33,28)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (13 samples, 0.06%)</title><rect x="10.1259%" y="1525" width="0.0622%" height="15" fill="rgb(241,56,42)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_decl&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (13 samples, 0.06%)</title><rect x="10.1259%" y="1509" width="0.0622%" height="15" fill="rgb(222,44,11)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_fn_decl (13 samples, 0.06%)</title><rect x="10.1259%" y="1493" width="0.0622%" height="15" fill="rgb(234,111,20)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::Resolver::with_child&lt;swc_ecma_transforms_base::resolver::impl$2::visit_mut_fn_decl::closure_env$0&gt; (13 samples, 0.06%)</title><rect x="10.1259%" y="1477" width="0.0622%" height="15" fill="rgb(237,77,6)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_fn_decl::closure$0 (13 samples, 0.06%)</title><rect x="10.1259%" y="1461" width="0.0622%" height="15" fill="rgb(235,111,23)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$638::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Resolver,swc_ecma_ast::function::Function&gt; (13 samples, 0.06%)</title><rect x="10.1259%" y="1445" width="0.0622%" height="15" fill="rgb(251,135,29)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$701::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (13 samples, 0.06%)</title><rect x="10.1259%" y="1429" width="0.0622%" height="15" fill="rgb(217,57,1)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_function (13 samples, 0.06%)</title><rect x="10.1259%" y="1413" width="0.0622%" height="15" fill="rgb(249,119,31)" fg:x="2116" fg:w="13"/><text x="10.3759%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$656::visit_mut_children_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (11 samples, 0.05%)</title><rect x="10.1354%" y="1397" width="0.0526%" height="15" fill="rgb(233,164,33)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_block_stmt&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (11 samples, 0.05%)</title><rect x="10.1354%" y="1381" width="0.0526%" height="15" fill="rgb(250,217,43)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_stmts(swc_ecma_transforms_base::resolver::Resolver*, alloc::vec::Vec&lt;enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1365" width="0.0526%" height="15" fill="rgb(232,154,50)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$817::visit_mut_children_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(alloc::vec::Vec&lt;enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1349" width="0.0526%" height="15" fill="rgb(227,190,8)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmts&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, alloc::vec::Vec&lt;enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1333" width="0.0526%" height="15" fill="rgb(209,217,32)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1343.50"></text></g><g><title>deno.exe`core::slice::iter::impl$189::for_each&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,swc_ecma_visit::visit_mut_stmts::closure_env$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt; &gt;(core::slice::iter::IterMut&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;, swc_ecma_visit::visit_mut_stmts::closure_env$0 (11 samples, 0.05%)</title><rect x="10.1354%" y="1317" width="0.0526%" height="15" fill="rgb(243,203,50)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmts::closure$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_visit::visit_mut_stmts::closure_env$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt;*, enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1301" width="0.0526%" height="15" fill="rgb(232,152,27)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_stmt&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1285" width="0.0526%" height="15" fill="rgb(240,34,29)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_stmt&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (11 samples, 0.05%)</title><rect x="10.1354%" y="1269" width="0.0526%" height="15" fill="rgb(215,185,52)" fg:x="2118" fg:w="11"/><text x="10.3854%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$751::visit_mut_children_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(alloc::vec::Vec&lt;enum2$ (15 samples, 0.07%)</title><rect x="10.1259%" y="1685" width="0.0718%" height="15" fill="rgb(240,89,49)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_items&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, alloc::vec::Vec&lt;enum2$ (15 samples, 0.07%)</title><rect x="10.1259%" y="1669" width="0.0718%" height="15" fill="rgb(225,12,52)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1679.50"></text></g><g><title>deno.exe`core::slice::iter::impl$189::for_each&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,swc_ecma_visit::visit_mut_module_items::closure_env$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt; &gt;(core::slice::iter::IterMut&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt; &gt;, swc_ecma_visit::visit_mut_module_items::closure_env$0 (15 samples, 0.07%)</title><rect x="10.1259%" y="1653" width="0.0718%" height="15" fill="rgb(239,128,45)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_items::closure$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_visit::visit_mut_module_items::closure_env$0&lt;swc_ecma_transforms_base::resolver::Resolver&gt;*, enum2$ (15 samples, 0.07%)</title><rect x="10.1259%" y="1637" width="0.0718%" height="15" fill="rgb(211,78,47)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_item&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (15 samples, 0.07%)</title><rect x="10.1259%" y="1621" width="0.0718%" height="15" fill="rgb(232,31,21)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_item&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (15 samples, 0.07%)</title><rect x="10.1259%" y="1605" width="0.0718%" height="15" fill="rgb(222,168,14)" fg:x="2116" fg:w="15"/><text x="10.3759%" y="1615.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_common::errors::Handler&gt;::set&lt;swc_common::errors::Handler,deno_ast::transpiling::fold_program::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (92 samples, 0.44%)</title><rect x="9.7717%" y="1973" width="0.4403%" height="15" fill="rgb(209,128,24)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1983.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_common::errors::Handler&gt;::set&lt;swc_common::errors::Handler,deno_ast::transpiling::fold_program::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (92 samples, 0.44%)</title><rect x="9.7717%" y="1957" width="0.4403%" height="15" fill="rgb(249,35,13)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1967.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program::closure$0 (92 samples, 0.44%)</title><rect x="9.7717%" y="1941" width="0.4403%" height="15" fill="rgb(218,7,2)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1951.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_ecma_transforms_base::helpers::Helpers&gt;::set&lt;swc_ecma_transforms_base::helpers::Helpers,deno_ast::transpiling::fold_program::closure$0::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (92 samples, 0.44%)</title><rect x="9.7717%" y="1925" width="0.4403%" height="15" fill="rgb(238,107,27)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1935.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_ecma_transforms_base::helpers::Helpers&gt;::set&lt;swc_ecma_transforms_base::helpers::Helpers,deno_ast::transpiling::fold_program::closure$0::closure_env$0,enum2$&lt;swc_ecma_ast::module::Program&gt; &gt; (92 samples, 0.44%)</title><rect x="9.7717%" y="1909" width="0.4403%" height="15" fill="rgb(217,88,38)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1919.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program::closure$0::closure$0 (92 samples, 0.44%)</title><rect x="9.7717%" y="1893" width="0.4403%" height="15" fill="rgb(230,207,0)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$192::fold_with&lt;swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;, swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder (92 samples, 0.44%)</title><rect x="9.7717%" y="1877" width="0.4403%" height="15" fill="rgb(249,64,54)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::ImportDeclsToVarDeclsFolder&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (92 samples, 0.44%)</title><rect x="9.7717%" y="1861" width="0.4403%" height="15" fill="rgb(231,7,11)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_visit::Optional&lt;deno_ast::transpiling::transforms::StripExportsFolder&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (92 samples, 0.44%)</title><rect x="9.7717%" y="1845" width="0.4403%" height="15" fill="rgb(205,149,21)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$0::fold_program(swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;,swc_visit::AndThen&lt;enum2$&lt;either::Either&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_proposal::decorators::legacy::TscDecorator&gt;,swc_ecma_transforms_proposal::decorators::Decorators&gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::helpers::InjectHelpers&gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;swc_common::comments::NoopComments&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::strip::Strip&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_typescript::inline_enum::InlineEnum&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_visit::Optional&lt;swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_src::JsxSrc&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx_self::JsxSelf&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::refresh::Refresh&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::jsx::Jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::display_name::DisplayName&gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_react::pure_annotations::PureAnnotations&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::fixer::Fixer&gt;,swc_visit::AndThen&lt;swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::rename::RenamePass&lt;swc_ecma_transforms_base::hygiene::HygieneRenamer&gt; &gt;,swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::hygiene::HygieneRemover&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;*, enum2$ (92 samples, 0.44%)</title><rect x="9.7717%" y="1829" width="0.4403%" height="15" fill="rgb(215,126,34)" fg:x="2042" fg:w="92"/><text x="10.0217%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$10::fold_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_visit::Folder&lt;swc_ecma_transforms_base::resolver::Resolver&gt;*, enum2$ (18 samples, 0.09%)</title><rect x="10.1259%" y="1813" width="0.0861%" height="15" fill="rgb(241,132,45)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$801::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(enum2$ (18 samples, 0.09%)</title><rect x="10.1259%" y="1797" width="0.0861%" height="15" fill="rgb(252,69,32)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (18 samples, 0.09%)</title><rect x="10.1259%" y="1781" width="0.0861%" height="15" fill="rgb(232,204,19)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_program&lt;swc_ecma_transforms_base::resolver::Resolver&gt;(swc_ecma_transforms_base::resolver::Resolver*, enum2$ (18 samples, 0.09%)</title><rect x="10.1259%" y="1765" width="0.0861%" height="15" fill="rgb(249,15,47)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_module (18 samples, 0.09%)</title><rect x="10.1259%" y="1749" width="0.0861%" height="15" fill="rgb(209,227,23)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$747::visit_mut_children_with&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (18 samples, 0.09%)</title><rect x="10.1259%" y="1733" width="0.0861%" height="15" fill="rgb(248,92,24)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module&lt;swc_ecma_transforms_base::resolver::Resolver&gt; (18 samples, 0.09%)</title><rect x="10.1259%" y="1717" width="0.0861%" height="15" fill="rgb(247,59,2)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$2::visit_mut_module_items(swc_ecma_transforms_base::resolver::Resolver*, alloc::vec::Vec&lt;enum2$ (18 samples, 0.09%)</title><rect x="10.1259%" y="1701" width="0.0861%" height="15" fill="rgb(221,30,5)" fg:x="2116" fg:w="18"/><text x="10.3759%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$751::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Hoister&gt;(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.1976%" y="1685" width="0.0144%" height="15" fill="rgb(208,108,53)" fg:x="2131" fg:w="3"/><text x="10.4476%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_transforms_base::resolver::impl$4::visit_mut_module_items(swc_ecma_transforms_base::resolver::Hoister*, alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.1976%" y="1669" width="0.0144%" height="15" fill="rgb(211,183,26)" fg:x="2131" fg:w="3"/><text x="10.4476%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_visit::impl$750::visit_mut_with&lt;swc_ecma_transforms_base::resolver::Hoister&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.1976%" y="1653" width="0.0144%" height="15" fill="rgb(232,132,4)" fg:x="2131" fg:w="3"/><text x="10.4476%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_visit::VisitMut::visit_mut_module_item&lt;swc_ecma_transforms_base::resolver::Hoister&gt;(swc_ecma_transforms_base::resolver::Hoister*, enum2$ (3 samples, 0.01%)</title><rect x="10.1976%" y="1637" width="0.0144%" height="15" fill="rgb(253,128,37)" fg:x="2131" fg:w="3"/><text x="10.4476%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_visit::visit_mut_module_item&lt;swc_ecma_transforms_base::resolver::Hoister&gt;(swc_ecma_transforms_base::resolver::Hoister*, enum2$ (3 samples, 0.01%)</title><rect x="10.1976%" y="1621" width="0.0144%" height="15" fill="rgb(221,58,24)" fg:x="2131" fg:w="3"/><text x="10.4476%" y="1631.50"></text></g><g><title>deno.exe`deno_ast::transpiling::fold_program(enum2$&lt;swc_ecma_ast::module::Program&gt;, deno_ast::transpiling::EmitOptions*, alloc::rc::Rc&lt;swc_common::source_map::SourceMap&gt;, swc_common::comments::SingleThreadedComments*, swc_common::syntax_pos::hygiene::Mark, ref$&lt;slice2$ (98 samples, 0.47%)</title><rect x="9.7717%" y="1989" width="0.4690%" height="15" fill="rgb(230,54,45)" fg:x="2042" fg:w="98"/><text x="10.0217%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_transforms_typescript::strip::strip_with_jsx&lt;ref$&lt;swc_common::comments::SingleThreadedComments&gt; &gt;(alloc::rc::Rc (3 samples, 0.01%)</title><rect x="10.2263%" y="1973" width="0.0144%" height="15" fill="rgb(254,21,18)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_transforms_react::jsx::parse_expr_for_jsx(swc_common::source_map::SourceMap*, ref$ (3 samples, 0.01%)</title><rect x="10.2263%" y="1957" width="0.0144%" height="15" fill="rgb(221,108,0)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_parser::parse_file_as_expr(swc_common::syntax_pos::SourceFile*, enum2$&lt;swc_ecma_parser::Syntax&gt;, swc_ecma_ast::EsVersion, enum2$&lt;core::option::Option&lt;ref$&lt;dyn$&lt;swc_common::comments::Comments&gt; &gt; &gt; &gt;, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.2263%" y="1941" width="0.0144%" height="15" fill="rgb(206,95,1)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_parser::with_file_parser&lt;alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt;,swc_ecma_parser::parse_file_as_expr::closure_env$0&gt;(swc_common::syntax_pos::SourceFile*, enum2$&lt;swc_ecma_parser::Syntax&gt;, swc_ecma_ast::EsVersion, enum2$&lt;core::option::Option&lt;ref$&lt;dyn$&lt;swc_common::comments::Comments&gt; &gt; &gt; &gt;, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.2263%" y="1925" width="0.0144%" height="15" fill="rgb(237,52,5)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_parser::parse_file_as_expr::closure$0(swc_ecma_parser::parse_file_as_expr::closure_env$0, swc_ecma_parser::parser::Parser (3 samples, 0.01%)</title><rect x="10.2263%" y="1909" width="0.0144%" height="15" fill="rgb(218,150,34)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1893" width="0.0144%" height="15" fill="rgb(235,194,28)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1877" width="0.0144%" height="15" fill="rgb(245,92,18)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_assignment_expr_base&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1861" width="0.0144%" height="15" fill="rgb(253,203,53)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_cond_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1845" width="0.0144%" height="15" fill="rgb(249,185,47)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_bin_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1829" width="0.0144%" height="15" fill="rgb(252,194,52)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_unary_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1813" width="0.0144%" height="15" fill="rgb(210,53,36)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_lhs_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1797" width="0.0144%" height="15" fill="rgb(237,37,25)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1781" width="0.0144%" height="15" fill="rgb(242,116,27)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_parser::parser::Parser&lt;swc_ecma_parser::lexer::Lexer&gt;::parse_member_expr_or_new_expr&lt;swc_ecma_parser::lexer::Lexer&gt; (3 samples, 0.01%)</title><rect x="10.2263%" y="1765" width="0.0144%" height="15" fill="rgb(213,185,26)" fg:x="2137" fg:w="3"/><text x="10.4763%" y="1775.50"></text></g><g><title>deno.exe`serde_json::ser::to_writer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,sourcemap::jsontypes::RawSourceMap&gt;(alloc::vec::Vec (6 samples, 0.03%)</title><rect x="10.2407%" y="1957" width="0.0287%" height="15" fill="rgb(225,204,8)" fg:x="2140" fg:w="6"/><text x="10.4907%" y="1967.50"></text></g><g><title>deno.exe`sourcemap::jsontypes::_::impl$0::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(sourcemap::jsontypes::RawSourceMap*, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (6 samples, 0.03%)</title><rect x="10.2407%" y="1941" width="0.0287%" height="15" fill="rgb(254,111,37)" fg:x="2140" fg:w="6"/><text x="10.4907%" y="1951.50"></text></g><g><title>deno.exe`serde_json::ser::impl$9::serialize_field&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter,enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;*, ref$&lt;str$&gt;, enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1925" width="0.0191%" height="15" fill="rgb(242,35,9)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1935.50"></text></g><g><title>deno.exe`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,str$,enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;*, ref$&lt;str$&gt;, enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1909" width="0.0191%" height="15" fill="rgb(232,138,49)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1919.50"></text></g><g><title>deno.exe`serde_json::ser::impl$8::serialize_value&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter,enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;*, enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1893" width="0.0191%" height="15" fill="rgb(247,56,4)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1903.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$5::serialize&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt;,ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1877" width="0.0191%" height="15" fill="rgb(226,179,17)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1887.50"></text></g><g><title>deno.exe`serde_json::ser::impl$3::serialize_some&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter,alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt;(serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1861" width="0.0191%" height="15" fill="rgb(216,163,45)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1871.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt;*, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1845" width="0.0191%" height="15" fill="rgb(211,157,3)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1855.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1829" width="0.0191%" height="15" fill="rgb(234,44,20)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1839.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1813" width="0.0191%" height="15" fill="rgb(254,138,23)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1823.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt; &gt;(core::slice::iter::Iter&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1797" width="0.0191%" height="15" fill="rgb(206,119,39)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1807.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,serde_json::error::Error&gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1781" width="0.0191%" height="15" fill="rgb(231,105,52)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1791.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1765" width="0.0191%" height="15" fill="rgb(250,20,5)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1775.50"></text></g><g><title>deno.exe`serde_json::ser::impl$4::serialize_element&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter,ref$&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt; &gt; &gt;(enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;*, enum2$&lt;core::option::Option (4 samples, 0.02%)</title><rect x="10.2503%" y="1749" width="0.0191%" height="15" fill="rgb(215,198,30)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1759.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;,ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;**, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1733" width="0.0191%" height="15" fill="rgb(246,142,8)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1743.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$5::serialize&lt;alloc::string::String,ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;*, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1717" width="0.0191%" height="15" fill="rgb(243,26,38)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1727.50"></text></g><g><title>deno.exe`serde_json::ser::impl$3::serialize_some&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter,alloc::string::String&gt;(serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1701" width="0.0191%" height="15" fill="rgb(205,133,28)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1711.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$1::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt; &gt;(alloc::string::String*, serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.2503%" y="1685" width="0.0191%" height="15" fill="rgb(212,34,0)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1695.50"></text></g><g><title>deno.exe`serde_json::ser::impl$3::serialize_str&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;(serde_json::ser::Serializer&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;*, ref$ (4 samples, 0.02%)</title><rect x="10.2503%" y="1669" width="0.0191%" height="15" fill="rgb(251,226,22)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1679.50"></text></g><g><title>deno.exe`serde_json::ser::format_escaped_str&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;***, serde_json::ser::CompactFormatter*, ref$ (4 samples, 0.02%)</title><rect x="10.2503%" y="1653" width="0.0191%" height="15" fill="rgb(252,119,9)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1663.50"></text></g><g><title>deno.exe`serde_json::ser::format_escaped_str_contents&lt;ref_mut$&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,serde_json::ser::CompactFormatter&gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;***, serde_json::ser::CompactFormatter*, ref$ (4 samples, 0.02%)</title><rect x="10.2503%" y="1637" width="0.0191%" height="15" fill="rgb(213,150,50)" fg:x="2142" fg:w="4"/><text x="10.5003%" y="1647.50"></text></g><g><title>deno.exe`sourcemap::types::SourceMap::to_writer&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;(alloc::vec::Vec (10 samples, 0.05%)</title><rect x="10.2407%" y="1989" width="0.0479%" height="15" fill="rgb(212,24,39)" fg:x="2140" fg:w="10"/><text x="10.4907%" y="1999.50"></text></g><g><title>deno.exe`sourcemap::encoder::encode&lt;sourcemap::types::SourceMap,ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;(sourcemap::types::SourceMap*, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="10.2407%" y="1973" width="0.0479%" height="15" fill="rgb(213,46,39)" fg:x="2140" fg:w="10"/><text x="10.4907%" y="1983.50"></text></g><g><title>deno.exe`sourcemap::encoder::impl$0::as_raw_sourcemap (4 samples, 0.02%)</title><rect x="10.2694%" y="1957" width="0.0191%" height="15" fill="rgb(239,106,12)" fg:x="2146" fg:w="4"/><text x="10.5194%" y="1967.50"></text></g><g><title>deno.exe`sourcemap::encoder::serialize_mappings (4 samples, 0.02%)</title><rect x="10.2694%" y="1941" width="0.0191%" height="15" fill="rgb(249,229,21)" fg:x="2146" fg:w="4"/><text x="10.5194%" y="1951.50"></text></g><g><title>deno.exe`swc_common::source_map::SourceMap::build_source_map_with_config&lt;deno_ast::transpiling::SourceMapConfig&gt;(ref$&lt;slice2$&lt;tuple$&lt;swc_common::syntax_pos::BytePos,swc_common::syntax_pos::LineCol&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (9 samples, 0.04%)</title><rect x="10.2886%" y="1989" width="0.0431%" height="15" fill="rgb(212,158,3)" fg:x="2150" fg:w="9"/><text x="10.5386%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_ast::decl::VarDecl,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3508%" y="1589" width="0.0144%" height="15" fill="rgb(253,26,48)" fg:x="2163" fg:w="3"/><text x="10.6008%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;swc_ecma_ast::decl::VarDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3508%" y="1573" width="0.0144%" height="15" fill="rgb(238,178,20)" fg:x="2163" fg:w="3"/><text x="10.6008%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_var_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3508%" y="1557" width="0.0144%" height="15" fill="rgb(208,86,15)" fg:x="2163" fg:w="3"/><text x="10.6008%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.3508%" y="1541" width="0.0144%" height="15" fill="rgb(239,42,53)" fg:x="2163" fg:w="3"/><text x="10.6008%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.3508%" y="1525" width="0.0144%" height="15" fill="rgb(245,226,8)" fg:x="2163" fg:w="3"/><text x="10.6008%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_ast::stmt::TryStmt,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::TryStmt***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3651%" y="1589" width="0.0144%" height="15" fill="rgb(216,176,32)" fg:x="2166" fg:w="3"/><text x="10.6151%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;swc_ecma_ast::stmt::TryStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::TryStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3651%" y="1573" width="0.0144%" height="15" fill="rgb(231,186,21)" fg:x="2166" fg:w="3"/><text x="10.6151%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_try_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::TryStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.3651%" y="1557" width="0.0144%" height="15" fill="rgb(205,95,49)" fg:x="2166" fg:w="3"/><text x="10.6151%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_try_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.3651%" y="1541" width="0.0144%" height="15" fill="rgb(217,145,8)" fg:x="2166" fg:w="3"/><text x="10.6151%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (7 samples, 0.03%)</title><rect x="10.3795%" y="1477" width="0.0335%" height="15" fill="rgb(239,144,48)" fg:x="2169" fg:w="7"/><text x="10.6295%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (7 samples, 0.03%)</title><rect x="10.3795%" y="1461" width="0.0335%" height="15" fill="rgb(214,189,23)" fg:x="2169" fg:w="7"/><text x="10.6295%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (7 samples, 0.03%)</title><rect x="10.3795%" y="1445" width="0.0335%" height="15" fill="rgb(229,157,17)" fg:x="2169" fg:w="7"/><text x="10.6295%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (7 samples, 0.03%)</title><rect x="10.3795%" y="1429" width="0.0335%" height="15" fill="rgb(230,5,48)" fg:x="2169" fg:w="7"/><text x="10.6295%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (7 samples, 0.03%)</title><rect x="10.3795%" y="1413" width="0.0335%" height="15" fill="rgb(224,156,48)" fg:x="2169" fg:w="7"/><text x="10.6295%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::decl::Decl&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::decl::Decl&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.3795%" y="1589" width="0.0383%" height="15" fill="rgb(223,14,29)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::decl::Decl&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.3795%" y="1573" width="0.0383%" height="15" fill="rgb(229,96,36)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (8 samples, 0.04%)</title><rect x="10.3795%" y="1557" width="0.0383%" height="15" fill="rgb(231,102,53)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::decl::FnDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.3795%" y="1541" width="0.0383%" height="15" fill="rgb(210,77,38)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_fn_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.3795%" y="1525" width="0.0383%" height="15" fill="rgb(235,131,6)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.3795%" y="1509" width="0.0383%" height="15" fill="rgb(252,55,38)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_trailing&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.3795%" y="1493" width="0.0383%" height="15" fill="rgb(246,38,14)" fg:x="2169" fg:w="8"/><text x="10.6295%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4321%" y="1541" width="0.0191%" height="15" fill="rgb(242,27,5)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4321%" y="1525" width="0.0191%" height="15" fill="rgb(228,65,35)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.4321%" y="1509" width="0.0191%" height="15" fill="rgb(245,93,11)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::BlockStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::BlockStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4321%" y="1493" width="0.0191%" height="15" fill="rgb(213,1,31)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_block_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::BlockStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4321%" y="1477" width="0.0191%" height="15" fill="rgb(237,205,14)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.4321%" y="1461" width="0.0191%" height="15" fill="rgb(232,118,45)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.4321%" y="1445" width="0.0191%" height="15" fill="rgb(218,5,6)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.4321%" y="1429" width="0.0191%" height="15" fill="rgb(251,87,51)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.4321%" y="1413" width="0.0191%" height="15" fill="rgb(207,225,20)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4321%" y="1397" width="0.0191%" height="15" fill="rgb(222,78,54)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.4321%" y="1381" width="0.0191%" height="15" fill="rgb(232,85,16)" fg:x="2180" fg:w="4"/><text x="10.6821%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::IfStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::IfStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (6 samples, 0.03%)</title><rect x="10.4273%" y="1589" width="0.0287%" height="15" fill="rgb(244,25,33)" fg:x="2179" fg:w="6"/><text x="10.6773%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_if_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::IfStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (6 samples, 0.03%)</title><rect x="10.4273%" y="1573" width="0.0287%" height="15" fill="rgb(233,24,36)" fg:x="2179" fg:w="6"/><text x="10.6773%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_if_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (6 samples, 0.03%)</title><rect x="10.4273%" y="1557" width="0.0287%" height="15" fill="rgb(253,49,54)" fg:x="2179" fg:w="6"/><text x="10.6773%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spreads&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_common::syntax_pos::Span, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.4560%" y="1429" width="0.0191%" height="15" fill="rgb(245,12,22)" fg:x="2185" fg:w="4"/><text x="10.7060%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.4560%" y="1413" width="0.0191%" height="15" fill="rgb(253,141,28)" fg:x="2185" fg:w="4"/><text x="10.7060%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.4560%" y="1397" width="0.0191%" height="15" fill="rgb(225,207,27)" fg:x="2185" fg:w="4"/><text x="10.7060%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr_or_spread::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ExprOrSpread*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1381" width="0.0144%" height="15" fill="rgb(220,84,2)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spread&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4608%" y="1365" width="0.0144%" height="15" fill="rgb(224,37,37)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1349" width="0.0144%" height="15" fill="rgb(220,143,18)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1333" width="0.0144%" height="15" fill="rgb(210,88,33)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.4608%" y="1317" width="0.0144%" height="15" fill="rgb(219,87,51)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1301" width="0.0144%" height="15" fill="rgb(211,7,35)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1285" width="0.0144%" height="15" fill="rgb(232,77,2)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4608%" y="1269" width="0.0144%" height="15" fill="rgb(249,94,25)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spreads&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_common::syntax_pos::Span, ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.4608%" y="1253" width="0.0144%" height="15" fill="rgb(215,112,2)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.4608%" y="1237" width="0.0144%" height="15" fill="rgb(226,115,48)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.4608%" y="1221" width="0.0144%" height="15" fill="rgb(249,196,10)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr_or_spread::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ExprOrSpread*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1205" width="0.0144%" height="15" fill="rgb(237,109,14)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spread&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4608%" y="1189" width="0.0144%" height="15" fill="rgb(217,103,53)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1173" width="0.0144%" height="15" fill="rgb(244,137,9)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4608%" y="1157" width="0.0144%" height="15" fill="rgb(227,201,3)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1167.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.4608%" y="1141" width="0.0144%" height="15" fill="rgb(243,94,6)" fg:x="2186" fg:w="3"/><text x="10.7108%" y="1151.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.4560%" y="1477" width="0.0383%" height="15" fill="rgb(235,118,5)" fg:x="2185" fg:w="8"/><text x="10.7060%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.4560%" y="1461" width="0.0383%" height="15" fill="rgb(247,10,30)" fg:x="2185" fg:w="8"/><text x="10.7060%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.4560%" y="1445" width="0.0383%" height="15" fill="rgb(205,26,28)" fg:x="2185" fg:w="8"/><text x="10.7060%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_callee::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Callee&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1429" width="0.0191%" height="15" fill="rgb(206,99,35)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_callee&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.4752%" y="1413" width="0.0191%" height="15" fill="rgb(238,130,40)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1397" width="0.0191%" height="15" fill="rgb(224,126,31)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1381" width="0.0191%" height="15" fill="rgb(254,105,17)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1365" width="0.0191%" height="15" fill="rgb(216,87,36)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.4752%" y="1349" width="0.0191%" height="15" fill="rgb(240,21,12)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::FnExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::FnExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1333" width="0.0191%" height="15" fill="rgb(245,192,34)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_fn_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::FnExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.4752%" y="1317" width="0.0191%" height="15" fill="rgb(226,100,49)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.4752%" y="1301" width="0.0191%" height="15" fill="rgb(245,188,27)" fg:x="2189" fg:w="4"/><text x="10.7252%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_trailing&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4800%" y="1285" width="0.0144%" height="15" fill="rgb(212,170,8)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4800%" y="1269" width="0.0144%" height="15" fill="rgb(217,113,29)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.4800%" y="1253" width="0.0144%" height="15" fill="rgb(237,30,3)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (3 samples, 0.01%)</title><rect x="10.4800%" y="1237" width="0.0144%" height="15" fill="rgb(227,19,28)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4800%" y="1221" width="0.0144%" height="15" fill="rgb(239,172,45)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.4800%" y="1205" width="0.0144%" height="15" fill="rgb(254,55,39)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::IfStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::IfStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4800%" y="1189" width="0.0144%" height="15" fill="rgb(249,208,12)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_if_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::IfStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.4800%" y="1173" width="0.0144%" height="15" fill="rgb(240,52,13)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_if_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.4800%" y="1157" width="0.0144%" height="15" fill="rgb(252,149,13)" fg:x="2190" fg:w="3"/><text x="10.7300%" y="1167.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::ReturnStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::ReturnStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.4560%" y="1589" width="0.0431%" height="15" fill="rgb(232,81,48)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_return_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::ReturnStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.4560%" y="1573" width="0.0431%" height="15" fill="rgb(222,144,2)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_return_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (9 samples, 0.04%)</title><rect x="10.4560%" y="1557" width="0.0431%" height="15" fill="rgb(216,81,32)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.4560%" y="1541" width="0.0431%" height="15" fill="rgb(244,78,51)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.4560%" y="1525" width="0.0431%" height="15" fill="rgb(217,66,21)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.4560%" y="1509" width="0.0431%" height="15" fill="rgb(247,101,42)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (9 samples, 0.04%)</title><rect x="10.4560%" y="1493" width="0.0431%" height="15" fill="rgb(227,81,39)" fg:x="2185" fg:w="9"/><text x="10.7060%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (33 samples, 0.16%)</title><rect x="10.3508%" y="1669" width="0.1579%" height="15" fill="rgb(220,223,44)" fg:x="2163" fg:w="33"/><text x="10.6008%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (33 samples, 0.16%)</title><rect x="10.3508%" y="1653" width="0.1579%" height="15" fill="rgb(205,218,2)" fg:x="2163" fg:w="33"/><text x="10.6008%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (33 samples, 0.16%)</title><rect x="10.3508%" y="1637" width="0.1579%" height="15" fill="rgb(212,207,28)" fg:x="2163" fg:w="33"/><text x="10.6008%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (33 samples, 0.16%)</title><rect x="10.3508%" y="1621" width="0.1579%" height="15" fill="rgb(224,12,41)" fg:x="2163" fg:w="33"/><text x="10.6008%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (33 samples, 0.16%)</title><rect x="10.3508%" y="1605" width="0.1579%" height="15" fill="rgb(216,118,12)" fg:x="2163" fg:w="33"/><text x="10.6008%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_trailing&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (35 samples, 0.17%)</title><rect x="10.3508%" y="1685" width="0.1675%" height="15" fill="rgb(252,97,46)" fg:x="2163" fg:w="35"/><text x="10.6008%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::decl::Decl&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (37 samples, 0.18%)</title><rect x="10.3508%" y="1765" width="0.1771%" height="15" fill="rgb(244,206,19)" fg:x="2163" fg:w="37"/><text x="10.6008%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (37 samples, 0.18%)</title><rect x="10.3508%" y="1749" width="0.1771%" height="15" fill="rgb(231,84,31)" fg:x="2163" fg:w="37"/><text x="10.6008%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::decl::FnDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (37 samples, 0.18%)</title><rect x="10.3508%" y="1733" width="0.1771%" height="15" fill="rgb(244,133,0)" fg:x="2163" fg:w="37"/><text x="10.6008%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_fn_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (37 samples, 0.18%)</title><rect x="10.3508%" y="1717" width="0.1771%" height="15" fill="rgb(223,15,50)" fg:x="2163" fg:w="37"/><text x="10.6008%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (37 samples, 0.18%)</title><rect x="10.3508%" y="1701" width="0.1771%" height="15" fill="rgb(250,118,49)" fg:x="2163" fg:w="37"/><text x="10.6008%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::module_decl::ModuleDecl&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module_decl::ModuleDecl&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (39 samples, 0.19%)</title><rect x="10.3460%" y="1861" width="0.1866%" height="15" fill="rgb(248,25,38)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_module_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module_decl::ModuleDecl&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (39 samples, 0.19%)</title><rect x="10.3460%" y="1845" width="0.1866%" height="15" fill="rgb(215,70,14)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_module_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (39 samples, 0.19%)</title><rect x="10.3460%" y="1829" width="0.1866%" height="15" fill="rgb(215,28,15)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::module_decl::ExportDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module_decl::ExportDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (39 samples, 0.19%)</title><rect x="10.3460%" y="1813" width="0.1866%" height="15" fill="rgb(243,6,28)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_export_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module_decl::ExportDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (39 samples, 0.19%)</title><rect x="10.3460%" y="1797" width="0.1866%" height="15" fill="rgb(222,130,1)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_export_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (39 samples, 0.19%)</title><rect x="10.3460%" y="1781" width="0.1866%" height="15" fill="rgb(236,166,44)" fg:x="2162" fg:w="39"/><text x="10.5960%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::AwaitExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::AwaitExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1237" width="0.0144%" height="15" fill="rgb(221,108,14)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1247.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_await_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::AwaitExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1221" width="0.0144%" height="15" fill="rgb(252,3,45)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1231.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_await_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="1205" width="0.0144%" height="15" fill="rgb(237,68,30)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1215.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1189" width="0.0144%" height="15" fill="rgb(211,79,22)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1199.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1173" width="0.0144%" height="15" fill="rgb(252,185,21)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1183.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1157" width="0.0144%" height="15" fill="rgb(225,189,26)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1167.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="1141" width="0.0144%" height="15" fill="rgb(241,30,40)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1151.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1125" width="0.0144%" height="15" fill="rgb(235,215,44)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1135.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1109" width="0.0144%" height="15" fill="rgb(205,8,29)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1119.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="1093" width="0.0144%" height="15" fill="rgb(241,137,42)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1103.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spreads&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_common::syntax_pos::Span, ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="1077" width="0.0144%" height="15" fill="rgb(237,155,2)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1087.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="1061" width="0.0144%" height="15" fill="rgb(245,29,42)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1071.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="1045" width="0.0144%" height="15" fill="rgb(234,101,35)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1055.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr_or_spread::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ExprOrSpread*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="1029" width="0.0144%" height="15" fill="rgb(228,64,37)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1039.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spread&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="1013" width="0.0144%" height="15" fill="rgb(217,214,36)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1023.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="997" width="0.0144%" height="15" fill="rgb(243,70,3)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="1007.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="981" width="0.0144%" height="15" fill="rgb(253,158,52)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="991.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="965" width="0.0144%" height="15" fill="rgb(234,111,54)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="975.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="949" width="0.0144%" height="15" fill="rgb(217,70,32)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="959.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="933" width="0.0144%" height="15" fill="rgb(234,18,33)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="943.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="917" width="0.0144%" height="15" fill="rgb(234,12,49)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="927.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spreads&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_common::syntax_pos::Span, ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="901" width="0.0144%" height="15" fill="rgb(236,10,21)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="911.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="885" width="0.0144%" height="15" fill="rgb(248,182,45)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="895.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::expr::ExprOrSpread&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="869" width="0.0144%" height="15" fill="rgb(217,95,36)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="879.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr_or_spread::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::ExprOrSpread*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="853" width="0.0144%" height="15" fill="rgb(212,110,31)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="863.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr_or_spread&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="837" width="0.0144%" height="15" fill="rgb(206,32,53)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="847.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="821" width="0.0144%" height="15" fill="rgb(246,141,37)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="831.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="805" width="0.0144%" height="15" fill="rgb(219,16,7)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="815.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (3 samples, 0.01%)</title><rect x="10.5374%" y="789" width="0.0144%" height="15" fill="rgb(230,205,45)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="799.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::expr::CallExpr,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="773" width="0.0144%" height="15" fill="rgb(231,43,49)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="783.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_call_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::expr::CallExpr*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="10.5374%" y="757" width="0.0144%" height="15" fill="rgb(212,106,34)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="767.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_call_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (3 samples, 0.01%)</title><rect x="10.5374%" y="741" width="0.0144%" height="15" fill="rgb(206,83,17)" fg:x="2202" fg:w="3"/><text x="10.7874%" y="751.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5374%" y="1301" width="0.0191%" height="15" fill="rgb(244,154,49)" fg:x="2202" fg:w="4"/><text x="10.7874%" y="1311.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;enum2$&lt;swc_ecma_ast::expr::Expr&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5374%" y="1285" width="0.0191%" height="15" fill="rgb(244,149,49)" fg:x="2202" fg:w="4"/><text x="10.7874%" y="1295.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_expr::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::expr::Expr&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5374%" y="1269" width="0.0191%" height="15" fill="rgb(227,134,18)" fg:x="2202" fg:w="4"/><text x="10.7874%" y="1279.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_expr&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.5374%" y="1253" width="0.0191%" height="15" fill="rgb(237,116,36)" fg:x="2202" fg:w="4"/><text x="10.7874%" y="1263.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_ast::decl::VarDecl,alloc::alloc::Global&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl***, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="10.5374%" y="1445" width="0.0239%" height="15" fill="rgb(205,129,40)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1455.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$0::emit_with&lt;swc_ecma_ast::decl::VarDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="10.5374%" y="1429" width="0.0239%" height="15" fill="rgb(236,178,4)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1439.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_var_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="10.5374%" y="1413" width="0.0239%" height="15" fill="rgb(251,76,53)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1423.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (5 samples, 0.02%)</title><rect x="10.5374%" y="1397" width="0.0239%" height="15" fill="rgb(242,92,40)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1407.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_decl_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (5 samples, 0.02%)</title><rect x="10.5374%" y="1381" width="0.0239%" height="15" fill="rgb(209,45,30)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1391.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::decl::VarDeclarator&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (5 samples, 0.02%)</title><rect x="10.5374%" y="1365" width="0.0239%" height="15" fill="rgb(218,157,36)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1375.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,swc_ecma_ast::decl::VarDeclarator&gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$ (5 samples, 0.02%)</title><rect x="10.5374%" y="1349" width="0.0239%" height="15" fill="rgb(222,186,16)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1359.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_var_declarator::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::VarDeclarator*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="10.5374%" y="1333" width="0.0239%" height="15" fill="rgb(254,72,35)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1343.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_var_declarator&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (5 samples, 0.02%)</title><rect x="10.5374%" y="1317" width="0.0239%" height="15" fill="rgb(224,25,35)" fg:x="2202" fg:w="5"/><text x="10.7874%" y="1327.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::class::ClassMethod,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::class::ClassMethod**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.5374%" y="1621" width="0.0383%" height="15" fill="rgb(206,135,52)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1631.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_class_method::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::class::ClassMethod*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.5374%" y="1605" width="0.0383%" height="15" fill="rgb(229,174,47)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1615.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_class_method&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.5374%" y="1589" width="0.0383%" height="15" fill="rgb(242,184,21)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1599.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::stmt::BlockStmt,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::BlockStmt**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.5374%" y="1573" width="0.0383%" height="15" fill="rgb(213,22,45)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1583.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_block_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::stmt::BlockStmt*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.5374%" y="1557" width="0.0383%" height="15" fill="rgb(237,81,54)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1567.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.5374%" y="1541" width="0.0383%" height="15" fill="rgb(248,177,18)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1551.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (8 samples, 0.04%)</title><rect x="10.5374%" y="1525" width="0.0383%" height="15" fill="rgb(254,31,16)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1535.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (8 samples, 0.04%)</title><rect x="10.5374%" y="1509" width="0.0383%" height="15" fill="rgb(235,20,31)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1519.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (8 samples, 0.04%)</title><rect x="10.5374%" y="1493" width="0.0383%" height="15" fill="rgb(240,56,43)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1503.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (8 samples, 0.04%)</title><rect x="10.5374%" y="1477" width="0.0383%" height="15" fill="rgb(237,197,51)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1487.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (8 samples, 0.04%)</title><rect x="10.5374%" y="1461" width="0.0383%" height="15" fill="rgb(241,162,44)" fg:x="2202" fg:w="8"/><text x="10.7874%" y="1471.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::decl::ClassDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::ClassDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.5374%" y="1765" width="0.0431%" height="15" fill="rgb(224,23,20)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_class_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::ClassDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.5374%" y="1749" width="0.0431%" height="15" fill="rgb(250,109,34)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_class_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (9 samples, 0.04%)</title><rect x="10.5374%" y="1733" width="0.0431%" height="15" fill="rgb(214,175,50)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_class_decl_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (9 samples, 0.04%)</title><rect x="10.5374%" y="1717" width="0.0431%" height="15" fill="rgb(213,182,5)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_class_trailing&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (9 samples, 0.04%)</title><rect x="10.5374%" y="1701" width="0.0431%" height="15" fill="rgb(209,199,19)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::class::ClassMember&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (9 samples, 0.04%)</title><rect x="10.5374%" y="1685" width="0.0431%" height="15" fill="rgb(236,224,42)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::class::ClassMember&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (9 samples, 0.04%)</title><rect x="10.5374%" y="1669" width="0.0431%" height="15" fill="rgb(246,226,29)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_class_member::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::class::ClassMember&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (9 samples, 0.04%)</title><rect x="10.5374%" y="1653" width="0.0431%" height="15" fill="rgb(227,223,11)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_class_member&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (9 samples, 0.04%)</title><rect x="10.5374%" y="1637" width="0.0431%" height="15" fill="rgb(219,7,51)" fg:x="2202" fg:w="9"/><text x="10.7874%" y="1647.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::decl::Decl&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::decl::Decl&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (13 samples, 0.06%)</title><rect x="10.5374%" y="1813" width="0.0622%" height="15" fill="rgb(245,167,10)" fg:x="2202" fg:w="13"/><text x="10.7874%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::decl::Decl&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (13 samples, 0.06%)</title><rect x="10.5374%" y="1797" width="0.0622%" height="15" fill="rgb(237,224,16)" fg:x="2202" fg:w="13"/><text x="10.7874%" y="1807.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (13 samples, 0.06%)</title><rect x="10.5374%" y="1781" width="0.0622%" height="15" fill="rgb(226,132,13)" fg:x="2202" fg:w="13"/><text x="10.7874%" y="1791.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::decl::FnDecl,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5805%" y="1765" width="0.0191%" height="15" fill="rgb(214,140,3)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1775.50"></text></g><g><title>deno.exe`swc_ecma_codegen::decl::impl$0::emit_fn_decl::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::decl::FnDecl*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5805%" y="1749" width="0.0191%" height="15" fill="rgb(221,177,4)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1759.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_decl&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.5805%" y="1733" width="0.0191%" height="15" fill="rgb(238,139,3)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_fn_trailing&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.5805%" y="1717" width="0.0191%" height="15" fill="rgb(216,17,39)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_block_stmt_inner&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (4 samples, 0.02%)</title><rect x="10.5805%" y="1701" width="0.0191%" height="15" fill="rgb(238,120,9)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1711.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.5805%" y="1685" width="0.0191%" height="15" fill="rgb(244,92,53)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1695.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_list5&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap,enum2$&lt;swc_ecma_ast::stmt::Stmt&gt; &gt;(swc_common::syntax_pos::Span, enum2$&lt;core::option::Option&lt;ref$&lt;slice2$&lt;enum2$ (4 samples, 0.02%)</title><rect x="10.5805%" y="1669" width="0.0191%" height="15" fill="rgb(224,148,33)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1679.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.02%)</title><rect x="10.5805%" y="1653" width="0.0191%" height="15" fill="rgb(243,6,36)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1663.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (4 samples, 0.02%)</title><rect x="10.5805%" y="1637" width="0.0191%" height="15" fill="rgb(230,102,11)" fg:x="2211" fg:w="4"/><text x="10.8305%" y="1647.50"></text></g><g><title>deno.exe`better_scoped_tls::ScopedKey&lt;swc_common::syntax_pos::Globals&gt;::set&lt;swc_common::syntax_pos::Globals,deno_ast::transpiling::impl$3::transpile::closure_env$0,enum2$&lt;core::result::Result&lt;deno_ast::transpiling::TranspiledSource,anyhow::Error&gt; &gt; &gt; (180 samples, 0.86%)</title><rect x="9.7430%" y="2037" width="0.8614%" height="15" fill="rgb(234,148,36)" fg:x="2036" fg:w="180"/><text x="9.9930%" y="2047.50"></text></g><g><title>deno.exe`scoped_tls::ScopedKey&lt;swc_common::syntax_pos::Globals&gt;::set&lt;swc_common::syntax_pos::Globals,deno_ast::transpiling::impl$3::transpile::closure_env$0,enum2$&lt;core::result::Result&lt;deno_ast::transpiling::TranspiledSource,anyhow::Error&gt; &gt; &gt; (180 samples, 0.86%)</title><rect x="9.7430%" y="2021" width="0.8614%" height="15" fill="rgb(251,153,25)" fg:x="2036" fg:w="180"/><text x="9.9930%" y="2031.50"></text></g><g><title>deno.exe`deno_ast::transpiling::impl$3::transpile::closure$0 (180 samples, 0.86%)</title><rect x="9.7430%" y="2005" width="0.8614%" height="15" fill="rgb(215,129,8)" fg:x="2036" fg:w="180"/><text x="9.9930%" y="2015.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_program::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::Program&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (57 samples, 0.27%)</title><rect x="10.3316%" y="1989" width="0.2728%" height="15" fill="rgb(224,128,35)" fg:x="2159" fg:w="57"/><text x="10.5816%" y="1999.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_program&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (57 samples, 0.27%)</title><rect x="10.3316%" y="1973" width="0.2728%" height="15" fill="rgb(237,56,52)" fg:x="2159" fg:w="57"/><text x="10.5816%" y="1983.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;swc_ecma_ast::module::Module,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module::Module**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (57 samples, 0.27%)</title><rect x="10.3316%" y="1957" width="0.2728%" height="15" fill="rgb(234,213,19)" fg:x="2159" fg:w="57"/><text x="10.5816%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_module::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(swc_ecma_ast::module::Module*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (57 samples, 0.27%)</title><rect x="10.3316%" y="1941" width="0.2728%" height="15" fill="rgb(252,82,23)" fg:x="2159" fg:w="57"/><text x="10.5816%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_module&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt; (56 samples, 0.27%)</title><rect x="10.3364%" y="1925" width="0.2680%" height="15" fill="rgb(254,201,21)" fg:x="2160" fg:w="56"/><text x="10.5864%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (56 samples, 0.27%)</title><rect x="10.3364%" y="1909" width="0.2680%" height="15" fill="rgb(250,186,11)" fg:x="2160" fg:w="56"/><text x="10.5864%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$2::emit_module_item::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (56 samples, 0.27%)</title><rect x="10.3364%" y="1893" width="0.2680%" height="15" fill="rgb(211,174,5)" fg:x="2160" fg:w="56"/><text x="10.5864%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_module_item&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (56 samples, 0.27%)</title><rect x="10.3364%" y="1877" width="0.2680%" height="15" fill="rgb(214,121,10)" fg:x="2160" fg:w="56"/><text x="10.5864%" y="1887.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$1::emit_with&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;**, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (15 samples, 0.07%)</title><rect x="10.5326%" y="1861" width="0.0718%" height="15" fill="rgb(241,66,2)" fg:x="2201" fg:w="15"/><text x="10.7826%" y="1871.50"></text></g><g><title>deno.exe`swc_ecma_codegen::impl$4::emit_stmt::impl$0::emit_with&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;*, swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec (15 samples, 0.07%)</title><rect x="10.5326%" y="1845" width="0.0718%" height="15" fill="rgb(220,167,19)" fg:x="2201" fg:w="15"/><text x="10.7826%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_codegen::Emitter&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;::emit_stmt&lt;alloc::boxed::Box&lt;swc_ecma_codegen::text_writer::basic_impl::JsWriter&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;,alloc::alloc::Global&gt;,swc_common::source_map::SourceMap&gt;(enum2$ (15 samples, 0.07%)</title><rect x="10.5326%" y="1829" width="0.0718%" height="15" fill="rgb(231,54,50)" fg:x="2201" fg:w="15"/><text x="10.7826%" y="1839.50"></text></g><g><title>deno.exe`swc_ecma_ast::module_decl::impl$18::clone(enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1925" width="0.0239%" height="15" fill="rgb(239,217,53)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_ast::module_decl::impl$36::clone (5 samples, 0.02%)</title><rect x="10.6187%" y="1909" width="0.0239%" height="15" fill="rgb(248,8,0)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1919.50"></text></g><g><title>deno.exe`swc_ecma_ast::decl::impl$19::clone(enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1893" width="0.0239%" height="15" fill="rgb(229,118,37)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1903.50"></text></g><g><title>deno.exe`swc_ecma_ast::decl::impl$49::clone (5 samples, 0.02%)</title><rect x="10.6187%" y="1877" width="0.0239%" height="15" fill="rgb(253,223,43)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1887.50"></text></g><g><title>deno.exe`alloc::boxed::impl$12::clone&lt;swc_ecma_ast::function::Function,alloc::alloc::Global&gt; (5 samples, 0.02%)</title><rect x="10.6187%" y="1861" width="0.0239%" height="15" fill="rgb(211,77,36)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1871.50"></text></g><g><title>deno.exe`alloc::alloc::impl$2::write_clone_into_raw&lt;swc_ecma_ast::function::Function&gt; (5 samples, 0.02%)</title><rect x="10.6187%" y="1845" width="0.0239%" height="15" fill="rgb(219,3,53)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1855.50"></text></g><g><title>deno.exe`swc_ecma_ast::function::impl$3::clone (5 samples, 0.02%)</title><rect x="10.6187%" y="1829" width="0.0239%" height="15" fill="rgb(244,45,42)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1839.50"></text></g><g><title>deno.exe`core::option::impl$5::clone&lt;swc_ecma_ast::stmt::BlockStmt&gt;(enum2$&lt;core::option::Option (5 samples, 0.02%)</title><rect x="10.6187%" y="1813" width="0.0239%" height="15" fill="rgb(225,95,27)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1823.50"></text></g><g><title>deno.exe`swc_ecma_ast::stmt::impl$9::clone (5 samples, 0.02%)</title><rect x="10.6187%" y="1797" width="0.0239%" height="15" fill="rgb(207,74,8)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1807.50"></text></g><g><title>deno.exe`alloc::vec::impl$11::clone&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1781" width="0.0239%" height="15" fill="rgb(243,63,36)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1791.50"></text></g><g><title>deno.exe`alloc::vec::impl$9::deref(alloc::vec::Vec&lt;enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1765" width="0.0239%" height="15" fill="rgb(211,180,12)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1775.50"></text></g><g><title>deno.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1749" width="0.0239%" height="15" fill="rgb(254,166,49)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1759.50"></text></g><g><title>deno.exe`alloc::slice::hack::impl$0::to_vec&lt;enum2$&lt;swc_ecma_ast::stmt::Stmt&gt;,alloc::alloc::Global&gt;(ref$&lt;slice2$&lt;enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1733" width="0.0239%" height="15" fill="rgb(205,19,0)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1743.50"></text></g><g><title>deno.exe`swc_ecma_ast::stmt::impl$1::clone(enum2$ (5 samples, 0.02%)</title><rect x="10.6187%" y="1717" width="0.0239%" height="15" fill="rgb(224,172,32)" fg:x="2219" fg:w="5"/><text x="10.8687%" y="1727.50"></text></g><g><title>deno.exe`swc_ecma_ast::module::impl$10::clone(enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="2037" width="0.0479%" height="15" fill="rgb(254,136,30)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="2047.50"></text></g><g><title>deno.exe`swc_ecma_ast::module::impl$28::clone (10 samples, 0.05%)</title><rect x="10.6187%" y="2021" width="0.0479%" height="15" fill="rgb(246,19,35)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="2031.50"></text></g><g><title>deno.exe`alloc::vec::impl$11::clone&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="2005" width="0.0479%" height="15" fill="rgb(219,24,36)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="2015.50"></text></g><g><title>deno.exe`alloc::vec::impl$9::deref(alloc::vec::Vec&lt;enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="1989" width="0.0479%" height="15" fill="rgb(251,55,1)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="1999.50"></text></g><g><title>deno.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$&lt;enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="1973" width="0.0479%" height="15" fill="rgb(218,117,39)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="1983.50"></text></g><g><title>deno.exe`alloc::slice::hack::impl$0::to_vec&lt;enum2$&lt;swc_ecma_ast::module::ModuleItem&gt;,alloc::alloc::Global&gt;(ref$&lt;slice2$&lt;enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="1957" width="0.0479%" height="15" fill="rgb(248,169,11)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="1967.50"></text></g><g><title>deno.exe`swc_ecma_ast::module::impl$53::clone(enum2$ (10 samples, 0.05%)</title><rect x="10.6187%" y="1941" width="0.0479%" height="15" fill="rgb(244,40,44)" fg:x="2219" fg:w="10"/><text x="10.8687%" y="1951.50"></text></g><g><title>deno.exe`swc_ecma_ast::stmt::impl$1::clone(enum2$ (5 samples, 0.02%)</title><rect x="10.6427%" y="1925" width="0.0239%" height="15" fill="rgb(234,62,37)" fg:x="2224" fg:w="5"/><text x="10.8927%" y="1935.50"></text></g><g><title>deno.exe`swc_ecma_ast::decl::impl$19::clone(enum2$ (5 samples, 0.02%)</title><rect x="10.6427%" y="1909" width="0.0239%" height="15" fill="rgb(207,117,42)" fg:x="2224" fg:w="5"/><text x="10.8927%" y="1919.50"></text></g><g><title>deno.exe`deno::module_loader::PreparedModuleLoader::load_prepared_module(url::Url*, enum2$&lt;core::option::Option&lt;ref$ (264 samples, 1.26%)</title><rect x="9.4080%" y="2085" width="1.2633%" height="15" fill="rgb(213,43,2)" fg:x="1966" fg:w="264"/><text x="9.6580%" y="2095.50"></text></g><g><title>deno.exe`deno::emit::Emitter::emit_parsed_source(url::Url*, deno_media_type::MediaType, alloc::sync::Arc (259 samples, 1.24%)</title><rect x="9.4320%" y="2069" width="1.2394%" height="15" fill="rgb(244,202,51)" fg:x="1971" fg:w="259"/><text x="9.6820%" y="2079.50"></text></g><g><title>deno.exe`deno_ast::parsed_source::ParsedSource::transpile (194 samples, 0.93%)</title><rect x="9.7430%" y="2053" width="0.9284%" height="15" fill="rgb(253,174,46)" fg:x="2036" fg:w="194"/><text x="9.9930%" y="2063.50"></text></g><g><title>deno.exe`deno::worker::impl$1::execute_side_module_possibly_with_npm::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (368 samples, 1.76%)</title><rect x="8.9343%" y="2309" width="1.7610%" height="15" fill="rgb(251,23,1)" fg:x="1867" fg:w="368"/><text x="9.1843%" y="2319.50"></text></g><g><title>deno.exe`deno_runtime::worker::impl$2::preload_side_module::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (338 samples, 1.62%)</title><rect x="9.0779%" y="2293" width="1.6175%" height="15" fill="rgb(253,26,1)" fg:x="1897" fg:w="338"/><text x="9.3279%" y="2303.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$17::load_side_module::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (338 samples, 1.62%)</title><rect x="9.0779%" y="2277" width="1.6175%" height="15" fill="rgb(216,89,31)" fg:x="1897" fg:w="338"/><text x="9.3279%" y="2287.50"></text></g><g><title>deno.exe`deno_core::runtime::jsrealm::impl$2::load_side_module::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (338 samples, 1.62%)</title><rect x="9.0779%" y="2261" width="1.6175%" height="15" fill="rgb(209,109,5)" fg:x="1897" fg:w="338"/><text x="9.3279%" y="2271.50"></text></g><g><title>deno.exe`futures_util::stream::stream::next::impl$3::poll&lt;deno_core::modules::RecursiveModuleLoad&gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::stream::next::Next (318 samples, 1.52%)</title><rect x="9.1736%" y="2245" width="1.5217%" height="15" fill="rgb(229,63,13)" fg:x="1917" fg:w="318"/><text x="9.4236%" y="2255.50"></text></g><g><title>deno.exe`futures_util::stream::stream::StreamExt::poll_next_unpin&lt;deno_core::modules::RecursiveModuleLoad&gt; (318 samples, 1.52%)</title><rect x="9.1736%" y="2229" width="1.5217%" height="15" fill="rgb(238,137,54)" fg:x="1917" fg:w="318"/><text x="9.4236%" y="2239.50"></text></g><g><title>deno.exe`deno_core::modules::impl$3::poll_next(core::pin::Pin&lt;ref_mut$ (318 samples, 1.52%)</title><rect x="9.1736%" y="2213" width="1.5217%" height="15" fill="rgb(228,1,9)" fg:x="1917" fg:w="318"/><text x="9.4236%" y="2223.50"></text></g><g><title>deno.exe`futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (270 samples, 1.29%)</title><rect x="9.4033%" y="2197" width="1.2921%" height="15" fill="rgb(249,120,48)" fg:x="1965" fg:w="270"/><text x="9.6533%" y="2207.50"></text></g><g><title>deno.exe`futures_core::stream::impl$4::try_poll_next&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (270 samples, 1.29%)</title><rect x="9.4033%" y="2181" width="1.2921%" height="15" fill="rgb(209,72,36)" fg:x="1965" fg:w="270"/><text x="9.6533%" y="2191.50"></text></g><g><title>deno.exe`futures_util::stream::futures_unordered::impl$7::poll_next&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (270 samples, 1.29%)</title><rect x="9.4033%" y="2165" width="1.2921%" height="15" fill="rgb(247,98,49)" fg:x="1965" fg:w="270"/><text x="9.6533%" y="2175.50"></text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;deno_core::modules::ModuleRequest,deno_core::modules::ModuleSource&gt; &gt; &gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;tuple$ (270 samples, 1.29%)</title><rect x="9.4033%" y="2149" width="1.2921%" height="15" fill="rgb(233,75,36)" fg:x="1965" fg:w="270"/><text x="9.6533%" y="2159.50"></text></g><g><title>deno.exe`deno_core::modules::impl$2::register_and_recurse::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (270 samples, 1.29%)</title><rect x="9.4033%" y="2133" width="1.2921%" height="15" fill="rgb(225,14,24)" fg:x="1965" fg:w="270"/><text x="9.6533%" y="2143.50"></text></g><g><title>deno.exe`deno::module_loader::impl$5::load(deno::module_loader::CliModuleLoader*, url::Url*, enum2$&lt;core::option::Option&lt;ref$ (269 samples, 1.29%)</title><rect x="9.4080%" y="2117" width="1.2873%" height="15" fill="rgb(237,193,20)" fg:x="1966" fg:w="269"/><text x="9.6580%" y="2127.50"></text></g><g><title>deno.exe`deno::module_loader::CliModuleLoader::load_sync(url::Url*, enum2$&lt;core::option::Option&lt;ref$ (269 samples, 1.29%)</title><rect x="9.4080%" y="2101" width="1.2873%" height="15" fill="rgb(239,122,19)" fg:x="1966" fg:w="269"/><text x="9.6580%" y="2111.50"></text></g><g><title>deno.exe`deno::util::text_encoding::code_without_source_map(enum2$ (5 samples, 0.02%)</title><rect x="10.6714%" y="2085" width="0.0239%" height="15" fill="rgb(231,220,10)" fg:x="2230" fg:w="5"/><text x="10.9214%" y="2095.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (4 samples, 0.02%)</title><rect x="10.7049%" y="2101" width="0.0191%" height="15" fill="rgb(220,66,15)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Builtin_ObjectDefineProperties (4 samples, 0.02%)</title><rect x="10.7049%" y="2085" width="0.0191%" height="15" fill="rgb(215,171,52)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::DefineProperties(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.02%)</title><rect x="10.7049%" y="2069" width="0.0191%" height="15" fill="rgb(241,169,50)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyDescriptor*, v8::Maybe (4 samples, 0.02%)</title><rect x="10.7049%" y="2053" width="0.0191%" height="15" fill="rgb(236,189,0)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyDescriptor*, v8::Maybe (4 samples, 0.02%)</title><rect x="10.7049%" y="2037" width="0.0191%" height="15" fill="rgb(217,147,20)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::PropertyKey const&amp;, v8::internal::PropertyDescriptor*, v8::Maybe (4 samples, 0.02%)</title><rect x="10.7049%" y="2021" width="0.0191%" height="15" fill="rgb(206,188,39)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::OrdinaryDefineOwnProperty(v8::internal::LookupIterator*, v8::internal::PropertyDescriptor*, v8::Maybe (4 samples, 0.02%)</title><rect x="10.7049%" y="2005" width="0.0191%" height="15" fill="rgb(227,118,25)" fg:x="2237" fg:w="4"/><text x="10.9549%" y="2015.50"></text></g><g><title>deno.exe`deno_runtime::worker::MainWorker::bootstrap (7 samples, 0.03%)</title><rect x="10.6953%" y="2277" width="0.0335%" height="15" fill="rgb(248,171,40)" fg:x="2235" fg:w="7"/><text x="10.9453%" y="2287.50"></text></g><g><title>deno.exe`v8::data::Function::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local (6 samples, 0.03%)</title><rect x="10.7001%" y="2261" width="0.0287%" height="15" fill="rgb(251,90,54)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2271.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (6 samples, 0.03%)</title><rect x="10.7001%" y="2245" width="0.0287%" height="15" fill="rgb(234,11,46)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2255.50"></text></g><g><title>deno.exe`v8::function::impl$17::call::closure$0 (6 samples, 0.03%)</title><rect x="10.7001%" y="2229" width="0.0287%" height="15" fill="rgb(229,134,13)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2239.50"></text></g><g><title>deno.exe`v8__Function__Call(v8::Function const&amp;, v8::Context const&amp;, v8::Value const&amp;, int, v8::Value const* const*) (6 samples, 0.03%)</title><rect x="10.7001%" y="2213" width="0.0287%" height="15" fill="rgb(223,129,3)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2223.50"></text></g><g><title>deno.exe`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (6 samples, 0.03%)</title><rect x="10.7001%" y="2197" width="0.0287%" height="15" fill="rgb(221,124,13)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (6 samples, 0.03%)</title><rect x="10.7001%" y="2181" width="0.0287%" height="15" fill="rgb(234,3,18)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (6 samples, 0.03%)</title><rect x="10.7001%" y="2165" width="0.0287%" height="15" fill="rgb(249,199,20)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2175.50"></text></g><g><title>deno.exe`Builtins_JSEntry (6 samples, 0.03%)</title><rect x="10.7001%" y="2149" width="0.0287%" height="15" fill="rgb(224,134,6)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2159.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (6 samples, 0.03%)</title><rect x="10.7001%" y="2133" width="0.0287%" height="15" fill="rgb(254,83,26)" fg:x="2236" fg:w="6"/><text x="10.9501%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="10.7049%" y="2117" width="0.0239%" height="15" fill="rgb(217,88,9)" fg:x="2237" fg:w="5"/><text x="10.9549%" y="2127.50"></text></g><g><title>deno.exe`v8::data::Object::get_index(v8::scope::HandleScope (5 samples, 0.02%)</title><rect x="10.7623%" y="2213" width="0.0239%" height="15" fill="rgb(225,73,2)" fg:x="2249" fg:w="5"/><text x="11.0123%" y="2223.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (5 samples, 0.02%)</title><rect x="10.7623%" y="2197" width="0.0239%" height="15" fill="rgb(226,44,39)" fg:x="2249" fg:w="5"/><text x="11.0123%" y="2207.50"></text></g><g><title>deno.exe`deno_core::modules::map::ModuleMap::update_with_snapshotted_data(v8::scope::HandleScope (11 samples, 0.05%)</title><rect x="10.7432%" y="2229" width="0.0526%" height="15" fill="rgb(228,53,17)" fg:x="2245" fg:w="11"/><text x="10.9932%" y="2239.50"></text></g><g><title>deno.exe`deno_core::runtime::bindings::op_ctx_function(v8::scope::HandleScope (5 samples, 0.02%)</title><rect x="10.8006%" y="2213" width="0.0239%" height="15" fill="rgb(212,27,27)" fg:x="2257" fg:w="5"/><text x="11.0506%" y="2223.50"></text></g><g><title>deno.exe`Builtins_CompileLazy (4 samples, 0.02%)</title><rect x="10.8245%" y="2069" width="0.0191%" height="15" fill="rgb(241,50,6)" fg:x="2262" fg:w="4"/><text x="11.0745%" y="2079.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (4 samples, 0.02%)</title><rect x="10.8245%" y="2053" width="0.0191%" height="15" fill="rgb(225,28,51)" fg:x="2262" fg:w="4"/><text x="11.0745%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CompileLazy (4 samples, 0.02%)</title><rect x="10.8245%" y="2037" width="0.0191%" height="15" fill="rgb(215,33,16)" fg:x="2262" fg:w="4"/><text x="11.0745%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.02%)</title><rect x="10.8245%" y="2021" width="0.0191%" height="15" fill="rgb(243,40,39)" fg:x="2262" fg:w="4"/><text x="11.0745%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.02%)</title><rect x="10.8245%" y="2005" width="0.0191%" height="15" fill="rgb(225,11,42)" fg:x="2262" fg:w="4"/><text x="11.0745%" y="2015.50"></text></g><g><title>deno.exe`v8::data::Function::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local (5 samples, 0.02%)</title><rect x="10.8245%" y="2213" width="0.0239%" height="15" fill="rgb(241,220,38)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2223.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (5 samples, 0.02%)</title><rect x="10.8245%" y="2197" width="0.0239%" height="15" fill="rgb(244,52,35)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2207.50"></text></g><g><title>deno.exe`v8::function::impl$17::call::closure$0 (5 samples, 0.02%)</title><rect x="10.8245%" y="2181" width="0.0239%" height="15" fill="rgb(246,42,46)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2191.50"></text></g><g><title>deno.exe`v8__Function__Call(v8::Function const&amp;, v8::Context const&amp;, v8::Value const&amp;, int, v8::Value const* const*) (5 samples, 0.02%)</title><rect x="10.8245%" y="2165" width="0.0239%" height="15" fill="rgb(205,184,13)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2175.50"></text></g><g><title>deno.exe`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (5 samples, 0.02%)</title><rect x="10.8245%" y="2149" width="0.0239%" height="15" fill="rgb(209,48,36)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2159.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (5 samples, 0.02%)</title><rect x="10.8245%" y="2133" width="0.0239%" height="15" fill="rgb(244,34,51)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (5 samples, 0.02%)</title><rect x="10.8245%" y="2117" width="0.0239%" height="15" fill="rgb(221,107,33)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2127.50"></text></g><g><title>deno.exe`Builtins_JSEntry (5 samples, 0.02%)</title><rect x="10.8245%" y="2101" width="0.0239%" height="15" fill="rgb(224,203,12)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2111.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (5 samples, 0.02%)</title><rect x="10.8245%" y="2085" width="0.0239%" height="15" fill="rgb(230,215,18)" fg:x="2262" fg:w="5"/><text x="11.0745%" y="2095.50"></text></g><g><title>deno.exe`deno_core::runtime::bindings::initialize_context(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Context&gt;, ref$&lt;slice2$ (14 samples, 0.07%)</title><rect x="10.7958%" y="2229" width="0.0670%" height="15" fill="rgb(206,185,35)" fg:x="2256" fg:w="14"/><text x="11.0458%" y="2239.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::create_opstate (5 samples, 0.02%)</title><rect x="10.8628%" y="2229" width="0.0239%" height="15" fill="rgb(228,140,34)" fg:x="2270" fg:w="5"/><text x="11.1128%" y="2239.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::collect_ops(ref_mut$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.8676%" y="2213" width="0.0191%" height="15" fill="rgb(208,93,13)" fg:x="2271" fg:w="4"/><text x="11.1176%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="10.9298%" y="1909" width="0.0144%" height="15" fill="rgb(221,193,39)" fg:x="2284" fg:w="3"/><text x="11.1798%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9154%" y="1989" width="0.0335%" height="15" fill="rgb(241,132,34)" fg:x="2281" fg:w="7"/><text x="11.1654%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (6 samples, 0.03%)</title><rect x="10.9202%" y="1973" width="0.0287%" height="15" fill="rgb(221,141,10)" fg:x="2282" fg:w="6"/><text x="11.1702%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (6 samples, 0.03%)</title><rect x="10.9202%" y="1957" width="0.0287%" height="15" fill="rgb(226,90,31)" fg:x="2282" fg:w="6"/><text x="11.1702%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="10.9250%" y="1941" width="0.0239%" height="15" fill="rgb(243,75,5)" fg:x="2283" fg:w="5"/><text x="11.1750%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="10.9298%" y="1925" width="0.0191%" height="15" fill="rgb(227,156,21)" fg:x="2284" fg:w="4"/><text x="11.1798%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::DeserializeDeferredObjects (12 samples, 0.06%)</title><rect x="10.8963%" y="2037" width="0.0574%" height="15" fill="rgb(250,195,8)" fg:x="2277" fg:w="12"/><text x="11.1463%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (12 samples, 0.06%)</title><rect x="10.8963%" y="2021" width="0.0574%" height="15" fill="rgb(220,134,5)" fg:x="2277" fg:w="12"/><text x="11.1463%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9059%" y="2005" width="0.0479%" height="15" fill="rgb(246,106,34)" fg:x="2279" fg:w="10"/><text x="11.1559%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (11 samples, 0.05%)</title><rect x="10.9537%" y="1957" width="0.0526%" height="15" fill="rgb(205,1,4)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1941" width="0.0526%" height="15" fill="rgb(224,151,29)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="10.9537%" y="1925" width="0.0526%" height="15" fill="rgb(251,196,0)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1909" width="0.0526%" height="15" fill="rgb(212,127,0)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (11 samples, 0.05%)</title><rect x="10.9537%" y="1893" width="0.0526%" height="15" fill="rgb(236,71,53)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1877" width="0.0526%" height="15" fill="rgb(227,99,0)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="10.9537%" y="1861" width="0.0526%" height="15" fill="rgb(239,89,21)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1845" width="0.0526%" height="15" fill="rgb(243,122,19)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (11 samples, 0.05%)</title><rect x="10.9537%" y="1829" width="0.0526%" height="15" fill="rgb(229,192,45)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1839.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1813" width="0.0526%" height="15" fill="rgb(235,165,35)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1823.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="10.9537%" y="1797" width="0.0526%" height="15" fill="rgb(253,202,0)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1807.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="10.9537%" y="1781" width="0.0526%" height="15" fill="rgb(235,51,20)" fg:x="2289" fg:w="11"/><text x="11.2037%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1765" width="0.0479%" height="15" fill="rgb(218,95,46)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1749" width="0.0479%" height="15" fill="rgb(212,81,10)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1733" width="0.0479%" height="15" fill="rgb(240,59,0)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1717" width="0.0479%" height="15" fill="rgb(212,191,42)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1701" width="0.0479%" height="15" fill="rgb(233,140,3)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1685" width="0.0479%" height="15" fill="rgb(215,69,23)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1669" width="0.0479%" height="15" fill="rgb(240,202,20)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1653" width="0.0479%" height="15" fill="rgb(209,146,50)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1663.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1637" width="0.0479%" height="15" fill="rgb(253,102,54)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1621" width="0.0479%" height="15" fill="rgb(250,173,47)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1631.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (10 samples, 0.05%)</title><rect x="10.9585%" y="1605" width="0.0479%" height="15" fill="rgb(232,142,7)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1615.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (10 samples, 0.05%)</title><rect x="10.9585%" y="1589" width="0.0479%" height="15" fill="rgb(230,157,47)" fg:x="2290" fg:w="10"/><text x="11.2085%" y="1599.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (9 samples, 0.04%)</title><rect x="10.9633%" y="1573" width="0.0431%" height="15" fill="rgb(214,177,35)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1583.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (9 samples, 0.04%)</title><rect x="10.9633%" y="1557" width="0.0431%" height="15" fill="rgb(234,119,46)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1567.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (9 samples, 0.04%)</title><rect x="10.9633%" y="1541" width="0.0431%" height="15" fill="rgb(241,180,50)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1551.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (9 samples, 0.04%)</title><rect x="10.9633%" y="1525" width="0.0431%" height="15" fill="rgb(221,54,25)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1535.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (9 samples, 0.04%)</title><rect x="10.9633%" y="1509" width="0.0431%" height="15" fill="rgb(209,157,44)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1519.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (9 samples, 0.04%)</title><rect x="10.9633%" y="1493" width="0.0431%" height="15" fill="rgb(246,115,41)" fg:x="2291" fg:w="9"/><text x="11.2133%" y="1503.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (8 samples, 0.04%)</title><rect x="10.9681%" y="1477" width="0.0383%" height="15" fill="rgb(229,86,1)" fg:x="2292" fg:w="8"/><text x="11.2181%" y="1487.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9729%" y="1461" width="0.0335%" height="15" fill="rgb(240,108,53)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1471.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="10.9729%" y="1445" width="0.0335%" height="15" fill="rgb(227,134,2)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1455.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9729%" y="1429" width="0.0335%" height="15" fill="rgb(213,129,25)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="10.9729%" y="1413" width="0.0335%" height="15" fill="rgb(226,35,21)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9729%" y="1397" width="0.0335%" height="15" fill="rgb(208,129,26)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1407.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="10.9729%" y="1381" width="0.0335%" height="15" fill="rgb(224,83,6)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9729%" y="1365" width="0.0335%" height="15" fill="rgb(227,52,39)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1375.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="10.9729%" y="1349" width="0.0335%" height="15" fill="rgb(241,30,17)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1359.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="10.9729%" y="1333" width="0.0335%" height="15" fill="rgb(246,186,42)" fg:x="2293" fg:w="7"/><text x="11.2229%" y="1343.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (6 samples, 0.03%)</title><rect x="10.9777%" y="1317" width="0.0287%" height="15" fill="rgb(221,169,15)" fg:x="2294" fg:w="6"/><text x="11.2277%" y="1327.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="10.9824%" y="1301" width="0.0239%" height="15" fill="rgb(235,108,21)" fg:x="2295" fg:w="5"/><text x="11.2324%" y="1311.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="10.9824%" y="1285" width="0.0239%" height="15" fill="rgb(219,148,30)" fg:x="2295" fg:w="5"/><text x="11.2324%" y="1295.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="10.9824%" y="1269" width="0.0239%" height="15" fill="rgb(220,109,5)" fg:x="2295" fg:w="5"/><text x="11.2324%" y="1279.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="10.9824%" y="1253" width="0.0239%" height="15" fill="rgb(213,203,48)" fg:x="2295" fg:w="5"/><text x="11.2324%" y="1263.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="10.9824%" y="1237" width="0.0239%" height="15" fill="rgb(244,71,33)" fg:x="2295" fg:w="5"/><text x="11.2324%" y="1247.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="10.9872%" y="1221" width="0.0191%" height="15" fill="rgb(209,23,2)" fg:x="2296" fg:w="4"/><text x="11.2372%" y="1231.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="10.9872%" y="1205" width="0.0191%" height="15" fill="rgb(219,97,7)" fg:x="2296" fg:w="4"/><text x="11.2372%" y="1215.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="10.9872%" y="1189" width="0.0191%" height="15" fill="rgb(216,161,23)" fg:x="2296" fg:w="4"/><text x="11.2372%" y="1199.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="10.9920%" y="1173" width="0.0144%" height="15" fill="rgb(207,45,42)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1183.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="10.9920%" y="1157" width="0.0144%" height="15" fill="rgb(241,61,4)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1167.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="10.9920%" y="1141" width="0.0144%" height="15" fill="rgb(236,170,1)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1151.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="10.9920%" y="1125" width="0.0144%" height="15" fill="rgb(239,72,5)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1135.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="10.9920%" y="1109" width="0.0144%" height="15" fill="rgb(214,13,50)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1119.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="10.9920%" y="1093" width="0.0144%" height="15" fill="rgb(224,88,9)" fg:x="2297" fg:w="3"/><text x="11.2420%" y="1103.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (9 samples, 0.04%)</title><rect x="11.0255%" y="1845" width="0.0431%" height="15" fill="rgb(238,192,34)" fg:x="2304" fg:w="9"/><text x="11.2755%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (7 samples, 0.03%)</title><rect x="11.0351%" y="1829" width="0.0335%" height="15" fill="rgb(217,203,50)" fg:x="2306" fg:w="7"/><text x="11.2851%" y="1839.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="11.0351%" y="1813" width="0.0335%" height="15" fill="rgb(241,123,32)" fg:x="2306" fg:w="7"/><text x="11.2851%" y="1823.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="11.0446%" y="1797" width="0.0239%" height="15" fill="rgb(248,151,39)" fg:x="2308" fg:w="5"/><text x="11.2946%" y="1807.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="11.0494%" y="1781" width="0.0191%" height="15" fill="rgb(208,89,6)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="11.0494%" y="1765" width="0.0191%" height="15" fill="rgb(254,43,26)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="11.0494%" y="1749" width="0.0191%" height="15" fill="rgb(216,158,13)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="11.0494%" y="1733" width="0.0191%" height="15" fill="rgb(212,47,37)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="11.0494%" y="1717" width="0.0191%" height="15" fill="rgb(254,16,10)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="11.0494%" y="1701" width="0.0191%" height="15" fill="rgb(223,228,16)" fg:x="2309" fg:w="4"/><text x="11.2994%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="11.0542%" y="1685" width="0.0144%" height="15" fill="rgb(249,108,50)" fg:x="2310" fg:w="3"/><text x="11.3042%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="11.0542%" y="1669" width="0.0144%" height="15" fill="rgb(208,220,5)" fg:x="2310" fg:w="3"/><text x="11.3042%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="11.0542%" y="1653" width="0.0144%" height="15" fill="rgb(217,89,48)" fg:x="2310" fg:w="3"/><text x="11.3042%" y="1663.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (3 samples, 0.01%)</title><rect x="11.0542%" y="1637" width="0.0144%" height="15" fill="rgb(212,113,41)" fg:x="2310" fg:w="3"/><text x="11.3042%" y="1647.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (3 samples, 0.01%)</title><rect x="11.0542%" y="1621" width="0.0144%" height="15" fill="rgb(231,127,5)" fg:x="2310" fg:w="3"/><text x="11.3042%" y="1631.50"></text></g><g><title>deno.exe`v8::internal::ContextDeserializer::Deserialize(v8::internal::Isolate*, v8::internal::Handle (37 samples, 0.18%)</title><rect x="10.8963%" y="2053" width="0.1771%" height="15" fill="rgb(217,141,17)" fg:x="2277" fg:w="37"/><text x="11.1463%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (25 samples, 0.12%)</title><rect x="10.9537%" y="2037" width="0.1196%" height="15" fill="rgb(245,125,54)" fg:x="2289" fg:w="25"/><text x="11.2037%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHandle&lt;v8::internal::Isolate&gt; &gt;(unsigned char, v8::internal::SlotAccessorForHandle (25 samples, 0.12%)</title><rect x="10.9537%" y="2021" width="0.1196%" height="15" fill="rgb(248,125,3)" fg:x="2289" fg:w="25"/><text x="11.2037%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (25 samples, 0.12%)</title><rect x="10.9537%" y="2005" width="0.1196%" height="15" fill="rgb(236,119,51)" fg:x="2289" fg:w="25"/><text x="11.2037%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (25 samples, 0.12%)</title><rect x="10.9537%" y="1989" width="0.1196%" height="15" fill="rgb(239,99,8)" fg:x="2289" fg:w="25"/><text x="11.2037%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (25 samples, 0.12%)</title><rect x="10.9537%" y="1973" width="0.1196%" height="15" fill="rgb(224,228,4)" fg:x="2289" fg:w="25"/><text x="11.2037%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (14 samples, 0.07%)</title><rect x="11.0064%" y="1957" width="0.0670%" height="15" fill="rgb(220,131,45)" fg:x="2300" fg:w="14"/><text x="11.2564%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (14 samples, 0.07%)</title><rect x="11.0064%" y="1941" width="0.0670%" height="15" fill="rgb(215,62,5)" fg:x="2300" fg:w="14"/><text x="11.2564%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (13 samples, 0.06%)</title><rect x="11.0111%" y="1925" width="0.0622%" height="15" fill="rgb(253,12,24)" fg:x="2301" fg:w="13"/><text x="11.2611%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (12 samples, 0.06%)</title><rect x="11.0159%" y="1909" width="0.0574%" height="15" fill="rgb(248,120,50)" fg:x="2302" fg:w="12"/><text x="11.2659%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="11.0207%" y="1893" width="0.0526%" height="15" fill="rgb(245,194,10)" fg:x="2303" fg:w="11"/><text x="11.2707%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (11 samples, 0.05%)</title><rect x="11.0207%" y="1877" width="0.0526%" height="15" fill="rgb(241,149,38)" fg:x="2303" fg:w="11"/><text x="11.2707%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (11 samples, 0.05%)</title><rect x="11.0207%" y="1861" width="0.0526%" height="15" fill="rgb(219,215,7)" fg:x="2303" fg:w="11"/><text x="11.2707%" y="1871.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::create_context(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::ObjectTemplate&gt; (*)(ref_mut$&lt;v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt; &gt;,v8::handle::Local&lt;v8::data::ObjectTemplate&gt;)&gt; &gt;, ref$&lt;slice2$&lt;void (*)(ref_mut$&lt;v8::scope::HandleScope&lt;v8::data::Context&gt; &gt;,v8::handle::Local (40 samples, 0.19%)</title><rect x="10.8867%" y="2229" width="0.1914%" height="15" fill="rgb(208,120,31)" fg:x="2275" fg:w="40"/><text x="11.1367%" y="2239.50"></text></g><g><title>deno.exe`v8::data::Context::new_from_template(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, v8::handle::Local (39 samples, 0.19%)</title><rect x="10.8915%" y="2213" width="0.1866%" height="15" fill="rgb(244,30,8)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2223.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (39 samples, 0.19%)</title><rect x="10.8915%" y="2197" width="0.1866%" height="15" fill="rgb(238,35,44)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2207.50"></text></g><g><title>deno.exe`v8::context::impl$0::new_from_template::closure$0 (39 samples, 0.19%)</title><rect x="10.8915%" y="2181" width="0.1866%" height="15" fill="rgb(243,218,37)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2191.50"></text></g><g><title>deno.exe`v8__Context__New(v8::Isolate*, v8::ObjectTemplate const*, v8::Value const*) (39 samples, 0.19%)</title><rect x="10.8915%" y="2165" width="0.1866%" height="15" fill="rgb(218,169,10)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2175.50"></text></g><g><title>deno.exe`v8::Context::New(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (39 samples, 0.19%)</title><rect x="10.8915%" y="2149" width="0.1866%" height="15" fill="rgb(221,144,10)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2159.50"></text></g><g><title>deno.exe`v8::NewContext(v8::Isolate*, v8::ExtensionConfiguration*, v8::MaybeLocal&lt;v8::ObjectTemplate&gt;, v8::MaybeLocal (39 samples, 0.19%)</title><rect x="10.8915%" y="2133" width="0.1866%" height="15" fill="rgb(226,41,38)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Bootstrapper::CreateEnvironment(v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (39 samples, 0.19%)</title><rect x="10.8915%" y="2117" width="0.1866%" height="15" fill="rgb(228,3,1)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Genesis::Genesis(v8::internal::Isolate*, v8::internal::MaybeHandle&lt;v8::internal::JSGlobalProxy&gt;, v8::Local (39 samples, 0.19%)</title><rect x="10.8915%" y="2101" width="0.1866%" height="15" fill="rgb(209,129,12)" fg:x="2276" fg:w="39"/><text x="11.1415%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Snapshot::NewContextFromSnapshot(v8::internal::Isolate*, v8::internal::Handle (38 samples, 0.18%)</title><rect x="10.8963%" y="2085" width="0.1818%" height="15" fill="rgb(213,136,33)" fg:x="2277" fg:w="38"/><text x="11.1463%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::ContextDeserializer::DeserializeContext(v8::internal::Isolate*, v8::internal::SnapshotData const*, bool, v8::internal::Handle (38 samples, 0.18%)</title><rect x="10.8963%" y="2069" width="0.1818%" height="15" fill="rgb(209,181,29)" fg:x="2277" fg:w="38"/><text x="11.1463%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeap::SetUp (6 samples, 0.03%)</title><rect x="11.0877%" y="2133" width="0.0287%" height="15" fill="rgb(234,173,18)" fg:x="2317" fg:w="6"/><text x="11.3377%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyDeserializer::DeserializeIntoIsolate (6 samples, 0.03%)</title><rect x="11.0877%" y="2117" width="0.0287%" height="15" fill="rgb(227,73,47)" fg:x="2317" fg:w="6"/><text x="11.3377%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeapImageDeserializer::DeserializeImpl (5 samples, 0.02%)</title><rect x="11.0925%" y="2101" width="0.0239%" height="15" fill="rgb(234,9,34)" fg:x="2318" fg:w="5"/><text x="11.3425%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::ReadOnlyHeapImageDeserializer::DeserializeReadOnlySegment (5 samples, 0.02%)</title><rect x="11.0925%" y="2085" width="0.0239%" height="15" fill="rgb(235,172,15)" fg:x="2318" fg:w="5"/><text x="11.3425%" y="2095.50"></text></g><g><title>deno.exe`memcpy_repmovs() (3 samples, 0.01%)</title><rect x="11.1021%" y="2069" width="0.0144%" height="15" fill="rgb(245,61,2)" fg:x="2320" fg:w="3"/><text x="11.3521%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::SharedHeapDeserializer::DeserializeIntoIsolate (6 samples, 0.03%)</title><rect x="11.1164%" y="2133" width="0.0287%" height="15" fill="rgb(238,39,47)" fg:x="2323" fg:w="6"/><text x="11.3664%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::SharedHeapDeserializer::DeserializeStringTable (6 samples, 0.03%)</title><rect x="11.1164%" y="2117" width="0.0287%" height="15" fill="rgb(234,37,24)" fg:x="2323" fg:w="6"/><text x="11.3664%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupKey&lt;v8::internal::StringTableInsertionKey,v8::internal::Isolate&gt; (6 samples, 0.03%)</title><rect x="11.1164%" y="2101" width="0.0287%" height="15" fill="rgb(248,223,24)" fg:x="2323" fg:w="6"/><text x="11.3664%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::StringTable::EnsureCapacity (4 samples, 0.02%)</title><rect x="11.1260%" y="2085" width="0.0191%" height="15" fill="rgb(223,12,15)" fg:x="2325" fg:w="4"/><text x="11.3760%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::StringTable::Data::Resize(v8::internal::PtrComprCageBase, std::Cr::unique_ptr&lt;v8::internal::StringTable::Data,std::Cr::default_delete (3 samples, 0.01%)</title><rect x="11.1308%" y="2069" width="0.0144%" height="15" fill="rgb(249,6,3)" fg:x="2326" fg:w="3"/><text x="11.3808%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (4 samples, 0.02%)</title><rect x="11.2361%" y="1749" width="0.0191%" height="15" fill="rgb(237,105,33)" fg:x="2348" fg:w="4"/><text x="11.4861%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (4 samples, 0.02%)</title><rect x="11.2361%" y="1733" width="0.0191%" height="15" fill="rgb(252,208,35)" fg:x="2348" fg:w="4"/><text x="11.4861%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="11.2265%" y="1813" width="0.0335%" height="15" fill="rgb(215,181,35)" fg:x="2346" fg:w="7"/><text x="11.4765%" y="1823.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (6 samples, 0.03%)</title><rect x="11.2313%" y="1797" width="0.0287%" height="15" fill="rgb(246,212,3)" fg:x="2347" fg:w="6"/><text x="11.4813%" y="1807.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (5 samples, 0.02%)</title><rect x="11.2361%" y="1781" width="0.0239%" height="15" fill="rgb(247,156,24)" fg:x="2348" fg:w="5"/><text x="11.4861%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (5 samples, 0.02%)</title><rect x="11.2361%" y="1765" width="0.0239%" height="15" fill="rgb(248,9,31)" fg:x="2348" fg:w="5"/><text x="11.4861%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (12 samples, 0.06%)</title><rect x="11.2074%" y="1829" width="0.0574%" height="15" fill="rgb(234,26,45)" fg:x="2342" fg:w="12"/><text x="11.4574%" y="1839.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (13 samples, 0.06%)</title><rect x="11.2074%" y="1845" width="0.0622%" height="15" fill="rgb(249,11,32)" fg:x="2342" fg:w="13"/><text x="11.4574%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (23 samples, 0.11%)</title><rect x="11.1691%" y="1909" width="0.1101%" height="15" fill="rgb(249,162,33)" fg:x="2334" fg:w="23"/><text x="11.4191%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (22 samples, 0.11%)</title><rect x="11.1739%" y="1893" width="0.1053%" height="15" fill="rgb(232,4,32)" fg:x="2335" fg:w="22"/><text x="11.4239%" y="1903.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (21 samples, 0.10%)</title><rect x="11.1786%" y="1877" width="0.1005%" height="15" fill="rgb(212,5,45)" fg:x="2336" fg:w="21"/><text x="11.4286%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (19 samples, 0.09%)</title><rect x="11.1882%" y="1861" width="0.0909%" height="15" fill="rgb(227,95,13)" fg:x="2338" fg:w="19"/><text x="11.4382%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (26 samples, 0.12%)</title><rect x="11.1643%" y="1973" width="0.1244%" height="15" fill="rgb(223,205,10)" fg:x="2333" fg:w="26"/><text x="11.4143%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (26 samples, 0.12%)</title><rect x="11.1643%" y="1957" width="0.1244%" height="15" fill="rgb(222,178,8)" fg:x="2333" fg:w="26"/><text x="11.4143%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (26 samples, 0.12%)</title><rect x="11.1643%" y="1941" width="0.1244%" height="15" fill="rgb(216,13,22)" fg:x="2333" fg:w="26"/><text x="11.4143%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (25 samples, 0.12%)</title><rect x="11.1691%" y="1925" width="0.1196%" height="15" fill="rgb(240,167,12)" fg:x="2334" fg:w="25"/><text x="11.4191%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (45 samples, 0.22%)</title><rect x="11.1451%" y="2117" width="0.2153%" height="15" fill="rgb(235,68,35)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (45 samples, 0.22%)</title><rect x="11.1451%" y="2101" width="0.2153%" height="15" fill="rgb(253,40,27)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (45 samples, 0.22%)</title><rect x="11.1451%" y="2085" width="0.2153%" height="15" fill="rgb(214,19,28)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (45 samples, 0.22%)</title><rect x="11.1451%" y="2069" width="0.2153%" height="15" fill="rgb(210,167,45)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (45 samples, 0.22%)</title><rect x="11.1451%" y="2053" width="0.2153%" height="15" fill="rgb(232,97,40)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (45 samples, 0.22%)</title><rect x="11.1451%" y="2037" width="0.2153%" height="15" fill="rgb(250,35,23)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (45 samples, 0.22%)</title><rect x="11.1451%" y="2021" width="0.2153%" height="15" fill="rgb(248,47,53)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (45 samples, 0.22%)</title><rect x="11.1451%" y="2005" width="0.2153%" height="15" fill="rgb(226,58,50)" fg:x="2329" fg:w="45"/><text x="11.3951%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForHeapObject&gt; (41 samples, 0.20%)</title><rect x="11.1643%" y="1989" width="0.1962%" height="15" fill="rgb(217,105,26)" fg:x="2333" fg:w="41"/><text x="11.4143%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadVariableRawData&lt;v8::internal::SlotAccessorForHeapObject&gt; (15 samples, 0.07%)</title><rect x="11.2887%" y="1973" width="0.0718%" height="15" fill="rgb(208,64,1)" fg:x="2359" fg:w="15"/><text x="11.5387%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::StartupDeserializer::DeserializeIntoIsolate (52 samples, 0.25%)</title><rect x="11.1451%" y="2133" width="0.2488%" height="15" fill="rgb(214,80,1)" fg:x="2329" fg:w="52"/><text x="11.3951%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::SerializerDeserializer::IterateStartupObjectCache (7 samples, 0.03%)</title><rect x="11.3605%" y="2117" width="0.0335%" height="15" fill="rgb(206,175,26)" fg:x="2374" fg:w="7"/><text x="11.6105%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::RootVisitor::VisitRootPointer (7 samples, 0.03%)</title><rect x="11.3605%" y="2101" width="0.0335%" height="15" fill="rgb(235,156,37)" fg:x="2374" fg:w="7"/><text x="11.6105%" y="2111.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::VisitRootPointers (7 samples, 0.03%)</title><rect x="11.3605%" y="2085" width="0.0335%" height="15" fill="rgb(213,100,9)" fg:x="2374" fg:w="7"/><text x="11.6105%" y="2095.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadSingleBytecodeData&lt;v8::internal::SlotAccessorForRootSlots&gt; (7 samples, 0.03%)</title><rect x="11.3605%" y="2069" width="0.0335%" height="15" fill="rgb(241,15,13)" fg:x="2374" fg:w="7"/><text x="11.6105%" y="2079.50"></text></g><g><title>deno.exe`v8::internal::Deserializer&lt;v8::internal::Isolate&gt;::ReadObject (7 samples, 0.03%)</title><rect x="11.3605%" y="2053" width="0.0335%" height="15" fill="rgb(205,97,43)" fg:x="2374" fg:w="7"/><text x="11.6105%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::new (140 samples, 0.67%)</title><rect x="10.7288%" y="2261" width="0.6700%" height="15" fill="rgb(216,106,32)" fg:x="2242" fg:w="140"/><text x="10.9788%" y="2271.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::new_inner (140 samples, 0.67%)</title><rect x="10.7288%" y="2245" width="0.6700%" height="15" fill="rgb(226,200,8)" fg:x="2242" fg:w="140"/><text x="10.9788%" y="2255.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::new (66 samples, 0.32%)</title><rect x="11.0829%" y="2229" width="0.3158%" height="15" fill="rgb(244,54,29)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2239.50"></text></g><g><title>deno.exe`v8::Isolate::New (66 samples, 0.32%)</title><rect x="11.0829%" y="2213" width="0.3158%" height="15" fill="rgb(252,169,12)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2223.50"></text></g><g><title>deno.exe`v8::Isolate::Initialize (66 samples, 0.32%)</title><rect x="11.0829%" y="2197" width="0.3158%" height="15" fill="rgb(231,199,11)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2207.50"></text></g><g><title>deno.exe`v8::internal::Snapshot::Initialize (66 samples, 0.32%)</title><rect x="11.0829%" y="2181" width="0.3158%" height="15" fill="rgb(233,191,18)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2191.50"></text></g><g><title>deno.exe`v8::internal::Isolate::InitWithSnapshot (66 samples, 0.32%)</title><rect x="11.0829%" y="2165" width="0.3158%" height="15" fill="rgb(215,83,47)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2175.50"></text></g><g><title>deno.exe`v8::internal::Isolate::Init (66 samples, 0.32%)</title><rect x="11.0829%" y="2149" width="0.3158%" height="15" fill="rgb(251,67,19)" fg:x="2316" fg:w="66"/><text x="11.3329%" y="2159.50"></text></g><g><title>deno.exe`deno_runtime::worker::MainWorker::from_options (142 samples, 0.68%)</title><rect x="10.7288%" y="2277" width="0.6795%" height="15" fill="rgb(240,7,20)" fg:x="2242" fg:w="142"/><text x="10.9788%" y="2287.50"></text></g><g><title>deno.exe`deno_runtime::worker::MainWorker::bootstrap_from_options (150 samples, 0.72%)</title><rect x="10.6953%" y="2293" width="0.7178%" height="15" fill="rgb(210,150,26)" fg:x="2235" fg:w="150"/><text x="10.9453%" y="2303.50"></text></g><g><title>deno.exe`deno::worker::impl$2::create_custom_worker::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (151 samples, 0.72%)</title><rect x="10.6953%" y="2309" width="0.7226%" height="15" fill="rgb(228,75,42)" fg:x="2235" fg:w="151"/><text x="10.9453%" y="2319.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::handle_scope (3 samples, 0.01%)</title><rect x="11.4227%" y="2229" width="0.0144%" height="15" fill="rgb(237,134,48)" fg:x="2387" fg:w="3"/><text x="11.6727%" y="2239.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (3 samples, 0.01%)</title><rect x="11.4562%" y="1797" width="0.0144%" height="15" fill="rgb(205,80,50)" fg:x="2394" fg:w="3"/><text x="11.7062%" y="1807.50"></text></g><g><title>deno.exe`deno_ffi::repr::op_ffi_cstr_read&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_fn_ptr&lt;deno_runtime::permissions::PermissionsContainer&gt; (3 samples, 0.01%)</title><rect x="11.4562%" y="1781" width="0.0144%" height="15" fill="rgb(217,74,48)" fg:x="2394" fg:w="3"/><text x="11.7062%" y="1791.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="11.4753%" y="1717" width="0.0144%" height="15" fill="rgb(205,82,50)" fg:x="2398" fg:w="3"/><text x="11.7253%" y="1727.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (5 samples, 0.02%)</title><rect x="11.4705%" y="1797" width="0.0239%" height="15" fill="rgb(228,1,33)" fg:x="2397" fg:w="5"/><text x="11.7205%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (5 samples, 0.02%)</title><rect x="11.4705%" y="1781" width="0.0239%" height="15" fill="rgb(214,50,23)" fg:x="2397" fg:w="5"/><text x="11.7205%" y="1791.50"></text></g><g><title>deno.exe`Builtins_PromiseConstructor (5 samples, 0.02%)</title><rect x="11.4705%" y="1765" width="0.0239%" height="15" fill="rgb(210,62,9)" fg:x="2397" fg:w="5"/><text x="11.7205%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="11.4705%" y="1749" width="0.0239%" height="15" fill="rgb(210,104,37)" fg:x="2397" fg:w="5"/><text x="11.7205%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="11.4705%" y="1733" width="0.0239%" height="15" fill="rgb(232,104,43)" fg:x="2397" fg:w="5"/><text x="11.7205%" y="1743.50"></text></g><g><title>deno.exe`Builtins_AsyncFunctionAwaitResolveClosure (13 samples, 0.06%)</title><rect x="11.4514%" y="1845" width="0.0622%" height="15" fill="rgb(244,52,6)" fg:x="2393" fg:w="13"/><text x="11.7014%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (13 samples, 0.06%)</title><rect x="11.4514%" y="1829" width="0.0622%" height="15" fill="rgb(211,174,52)" fg:x="2393" fg:w="13"/><text x="11.7014%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (12 samples, 0.06%)</title><rect x="11.4562%" y="1813" width="0.0574%" height="15" fill="rgb(229,48,4)" fg:x="2394" fg:w="12"/><text x="11.7062%" y="1823.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (4 samples, 0.02%)</title><rect x="11.4945%" y="1797" width="0.0191%" height="15" fill="rgb(205,155,16)" fg:x="2402" fg:w="4"/><text x="11.7445%" y="1807.50"></text></g><g><title>`0x7FF7E0047F28 (14 samples, 0.07%)</title><rect x="11.4514%" y="2053" width="0.0670%" height="15" fill="rgb(211,141,53)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="2063.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (14 samples, 0.07%)</title><rect x="11.4514%" y="2037" width="0.0670%" height="15" fill="rgb(240,148,11)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="2047.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (14 samples, 0.07%)</title><rect x="11.4514%" y="2021" width="0.0670%" height="15" fill="rgb(214,45,23)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="2031.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::call(v8::scope::HandleScope (14 samples, 0.07%)</title><rect x="11.4514%" y="2005" width="0.0670%" height="15" fill="rgb(248,74,26)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="2015.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::perform_microtask_checkpoint (14 samples, 0.07%)</title><rect x="11.4514%" y="1989" width="0.0670%" height="15" fill="rgb(218,121,16)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::PerformCheckpointInternal (14 samples, 0.07%)</title><rect x="11.4514%" y="1973" width="0.0670%" height="15" fill="rgb(218,10,47)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::RunMicrotasks (14 samples, 0.07%)</title><rect x="11.4514%" y="1957" width="0.0670%" height="15" fill="rgb(227,99,14)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Execution::TryRunMicrotasks (14 samples, 0.07%)</title><rect x="11.4514%" y="1941" width="0.0670%" height="15" fill="rgb(229,83,46)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::InvokeWithTryCatch (14 samples, 0.07%)</title><rect x="11.4514%" y="1925" width="0.0670%" height="15" fill="rgb(228,25,1)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (14 samples, 0.07%)</title><rect x="11.4514%" y="1909" width="0.0670%" height="15" fill="rgb(252,190,15)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1919.50"></text></g><g><title>deno.exe`Builtins_JSRunMicrotasksEntry (14 samples, 0.07%)</title><rect x="11.4514%" y="1893" width="0.0670%" height="15" fill="rgb(213,103,51)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1903.50"></text></g><g><title>deno.exe`Builtins_RunMicrotasks (14 samples, 0.07%)</title><rect x="11.4514%" y="1877" width="0.0670%" height="15" fill="rgb(220,38,44)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1887.50"></text></g><g><title>deno.exe`Builtins_PromiseFulfillReactionJob (14 samples, 0.07%)</title><rect x="11.4514%" y="1861" width="0.0670%" height="15" fill="rgb(210,45,26)" fg:x="2393" fg:w="14"/><text x="11.7014%" y="1871.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::end(enum2$ (3 samples, 0.01%)</title><rect x="11.5328%" y="1541" width="0.0144%" height="15" fill="rgb(205,95,48)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::end (3 samples, 0.01%)</title><rect x="11.5328%" y="1525" width="0.0144%" height="15" fill="rgb(225,179,37)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1535.50"></text></g><g><title>deno.exe`v8::data::Object::with_prototype_and_properties(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::Name&gt; &gt; &gt;, ref$&lt;slice2$&lt;v8::handle::Local (3 samples, 0.01%)</title><rect x="11.5328%" y="1509" width="0.0144%" height="15" fill="rgb(230,209,3)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1519.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="11.5328%" y="1493" width="0.0144%" height="15" fill="rgb(248,12,46)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1503.50"></text></g><g><title>deno.exe`v8::object::impl$0::with_prototype_and_properties::closure$0 (3 samples, 0.01%)</title><rect x="11.5328%" y="1477" width="0.0144%" height="15" fill="rgb(234,18,0)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1487.50"></text></g><g><title>deno.exe`v8__Object__New__with_prototype_and_properties(v8::Isolate*, v8::Value const&amp;, v8::Name const* const*, v8::Value const* const*, unsigned long long) (3 samples, 0.01%)</title><rect x="11.5328%" y="1461" width="0.0144%" height="15" fill="rgb(238,197,14)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1471.50"></text></g><g><title>deno.exe`v8::Object::New(v8::Isolate*, v8::Local&lt;v8::Value&gt;, v8::Local&lt;v8::Name&gt;*, v8::Local (3 samples, 0.01%)</title><rect x="11.5328%" y="1445" width="0.0144%" height="15" fill="rgb(251,162,48)" fg:x="2410" fg:w="3"/><text x="11.7828%" y="1455.50"></text></g><g><title>`0x7FF7E004FFAA (10 samples, 0.05%)</title><rect x="11.5280%" y="1813" width="0.0479%" height="15" fill="rgb(237,73,42)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1823.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (10 samples, 0.05%)</title><rect x="11.5280%" y="1797" width="0.0479%" height="15" fill="rgb(211,108,8)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1807.50"></text></g><g><title>deno.exe`deno_core::ops_builtin::op_metrics::v8_fn_ptr (10 samples, 0.05%)</title><rect x="11.5280%" y="1781" width="0.0479%" height="15" fill="rgb(213,45,22)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1791.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1765" width="0.0479%" height="15" fill="rgb(252,154,5)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1749" width="0.0479%" height="15" fill="rgb(221,79,52)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1759.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$91::serialize&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt;,serde_v8::ser::Serializer&gt;(tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1733" width="0.0479%" height="15" fill="rgb(229,220,36)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1743.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$5::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1717" width="0.0479%" height="15" fill="rgb(211,17,16)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1727.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1701" width="0.0479%" height="15" fill="rgb(222,55,31)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1711.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1685" width="0.0479%" height="15" fill="rgb(221,221,31)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1695.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1669" width="0.0479%" height="15" fill="rgb(227,168,26)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1679.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1653" width="0.0479%" height="15" fill="rgb(224,139,9)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1663.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1637" width="0.0479%" height="15" fill="rgb(254,172,0)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1647.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (10 samples, 0.05%)</title><rect x="11.5280%" y="1621" width="0.0479%" height="15" fill="rgb(235,203,1)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1631.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (10 samples, 0.05%)</title><rect x="11.5280%" y="1605" width="0.0479%" height="15" fill="rgb(216,205,24)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1615.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt; &gt; (10 samples, 0.05%)</title><rect x="11.5280%" y="1589" width="0.0479%" height="15" fill="rgb(233,24,6)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1599.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt; (10 samples, 0.05%)</title><rect x="11.5280%" y="1573" width="0.0479%" height="15" fill="rgb(244,110,9)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1583.50"></text></g><g><title>deno.exe`deno_core::ops_metrics::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (10 samples, 0.05%)</title><rect x="11.5280%" y="1557" width="0.0479%" height="15" fill="rgb(239,222,42)" fg:x="2409" fg:w="10"/><text x="11.7780%" y="1567.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::serialize_field&lt;u64&gt;(enum2$&lt;serde_v8::ser::StructSerializers&gt;*, ref$ (6 samples, 0.03%)</title><rect x="11.5471%" y="1541" width="0.0287%" height="15" fill="rgb(218,145,13)" fg:x="2413" fg:w="6"/><text x="11.7971%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::serialize_field&lt;u64&gt;(serde_v8::ser::ObjectSerializer*, ref$ (6 samples, 0.03%)</title><rect x="11.5471%" y="1525" width="0.0287%" height="15" fill="rgb(207,69,11)" fg:x="2413" fg:w="6"/><text x="11.7971%" y="1535.50"></text></g><g><title>deno.exe`serde_v8::keys::v8_struct_key(v8::scope::HandleScope&lt;v8::data::Context&gt;*, ref$ (4 samples, 0.02%)</title><rect x="11.5567%" y="1509" width="0.0191%" height="15" fill="rgb(220,223,22)" fg:x="2415" fg:w="4"/><text x="11.8067%" y="1519.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="11.5615%" y="1493" width="0.0144%" height="15" fill="rgb(245,102,5)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1503.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="11.5615%" y="1477" width="0.0144%" height="15" fill="rgb(211,148,2)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1487.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (3 samples, 0.01%)</title><rect x="11.5615%" y="1461" width="0.0144%" height="15" fill="rgb(241,13,44)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1471.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (3 samples, 0.01%)</title><rect x="11.5615%" y="1445" width="0.0144%" height="15" fill="rgb(219,137,21)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1455.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (3 samples, 0.01%)</title><rect x="11.5615%" y="1429" width="0.0144%" height="15" fill="rgb(242,206,5)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::Factory::InternalizeUtf8String(v8::base::Vector (3 samples, 0.01%)</title><rect x="11.5615%" y="1413" width="0.0144%" height="15" fill="rgb(217,114,22)" fg:x="2416" fg:w="3"/><text x="11.8115%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewSlowJSObjectWithPropertiesAndElements(v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="11.6380%" y="1429" width="0.0144%" height="15" fill="rgb(253,206,42)" fg:x="2432" fg:w="3"/><text x="11.8880%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::Map::TransitionToPrototype(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="11.6380%" y="1413" width="0.0144%" height="15" fill="rgb(236,102,18)" fg:x="2432" fg:w="3"/><text x="11.8880%" y="1423.50"></text></g><g><title>deno.exe`v8::internal::Map::CopyReplaceDescriptors(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::DescriptorArray&gt;, v8::internal::TransitionFlag, v8::internal::MaybeHandle (3 samples, 0.01%)</title><rect x="11.6380%" y="1397" width="0.0144%" height="15" fill="rgb(208,59,49)" fg:x="2432" fg:w="3"/><text x="11.8880%" y="1407.50"></text></g><g><title>deno.exe`v8::internal::Map::CopyDropDescriptors(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="11.6380%" y="1381" width="0.0144%" height="15" fill="rgb(215,194,28)" fg:x="2432" fg:w="3"/><text x="11.8880%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::Map::RawCopy(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="11.6380%" y="1365" width="0.0144%" height="15" fill="rgb(243,207,11)" fg:x="2432" fg:w="3"/><text x="11.8880%" y="1375.50"></text></g><g><title>deno.exe`v8::data::Object::with_prototype_and_properties(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::Name&gt; &gt; &gt;, ref$&lt;slice2$&lt;v8::handle::Local (11 samples, 0.05%)</title><rect x="11.6093%" y="1509" width="0.0526%" height="15" fill="rgb(254,179,35)" fg:x="2426" fg:w="11"/><text x="11.8593%" y="1519.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (11 samples, 0.05%)</title><rect x="11.6093%" y="1493" width="0.0526%" height="15" fill="rgb(235,97,3)" fg:x="2426" fg:w="11"/><text x="11.8593%" y="1503.50"></text></g><g><title>deno.exe`v8::object::impl$0::with_prototype_and_properties::closure$0 (10 samples, 0.05%)</title><rect x="11.6141%" y="1477" width="0.0479%" height="15" fill="rgb(215,155,33)" fg:x="2427" fg:w="10"/><text x="11.8641%" y="1487.50"></text></g><g><title>deno.exe`v8__Object__New__with_prototype_and_properties(v8::Isolate*, v8::Value const&amp;, v8::Name const* const*, v8::Value const* const*, unsigned long long) (10 samples, 0.05%)</title><rect x="11.6141%" y="1461" width="0.0479%" height="15" fill="rgb(223,128,12)" fg:x="2427" fg:w="10"/><text x="11.8641%" y="1471.50"></text></g><g><title>deno.exe`v8::Object::New(v8::Isolate*, v8::Local&lt;v8::Value&gt;, v8::Local&lt;v8::Name&gt;*, v8::Local (10 samples, 0.05%)</title><rect x="11.6141%" y="1445" width="0.0479%" height="15" fill="rgb(208,157,18)" fg:x="2427" fg:w="10"/><text x="11.8641%" y="1455.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::end(enum2$ (13 samples, 0.06%)</title><rect x="11.6045%" y="1541" width="0.0622%" height="15" fill="rgb(249,70,54)" fg:x="2425" fg:w="13"/><text x="11.8545%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::end (13 samples, 0.06%)</title><rect x="11.6045%" y="1525" width="0.0622%" height="15" fill="rgb(244,118,24)" fg:x="2425" fg:w="13"/><text x="11.8545%" y="1535.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$46::serialize&lt;serde_v8::ser::Serializer&gt; (11 samples, 0.05%)</title><rect x="11.6859%" y="1509" width="0.0526%" height="15" fill="rgb(211,54,0)" fg:x="2442" fg:w="11"/><text x="11.9359%" y="1519.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_u64 (11 samples, 0.05%)</title><rect x="11.6859%" y="1493" width="0.0526%" height="15" fill="rgb(245,137,45)" fg:x="2442" fg:w="11"/><text x="11.9359%" y="1503.50"></text></g><g><title>deno.exe`v8::data::Number::new(v8::scope::HandleScope&lt;tuple$ (8 samples, 0.04%)</title><rect x="11.7002%" y="1477" width="0.0383%" height="15" fill="rgb(232,154,31)" fg:x="2445" fg:w="8"/><text x="11.9502%" y="1487.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (7 samples, 0.03%)</title><rect x="11.7050%" y="1461" width="0.0335%" height="15" fill="rgb(253,6,39)" fg:x="2446" fg:w="7"/><text x="11.9550%" y="1471.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::get_mut(v8::scope::HandleScope&lt;tuple$ (6 samples, 0.03%)</title><rect x="11.7098%" y="1445" width="0.0287%" height="15" fill="rgb(234,183,24)" fg:x="2447" fg:w="6"/><text x="11.9598%" y="1455.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::try_activate_scope (6 samples, 0.03%)</title><rect x="11.7098%" y="1429" width="0.0287%" height="15" fill="rgb(252,84,40)" fg:x="2447" fg:w="6"/><text x="11.9598%" y="1439.50"></text></g><g><title>deno.exe`core::option::impl$14::eq&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt;(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (4 samples, 0.02%)</title><rect x="11.7672%" y="1429" width="0.0191%" height="15" fill="rgb(224,65,2)" fg:x="2459" fg:w="4"/><text x="12.0172%" y="1439.50"></text></g><g><title>deno.exe`core::option::impl$16::eq&lt;v8::scope::data::ScopeData&gt;(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (4 samples, 0.02%)</title><rect x="11.7672%" y="1413" width="0.0191%" height="15" fill="rgb(229,38,24)" fg:x="2459" fg:w="4"/><text x="12.0172%" y="1423.50"></text></g><g><title>deno.exe`enum2$&lt;core::option::Option&lt;ptr_mut$&lt;v8::scope::data::ScopeData&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;ptr_mut$&lt;v8::scope::data::ScopeData&gt; &gt; &gt;, core::option::impl$16::eq::closure_env$1 (3 samples, 0.01%)</title><rect x="11.7720%" y="1397" width="0.0144%" height="15" fill="rgb(218,131,50)" fg:x="2460" fg:w="3"/><text x="12.0220%" y="1407.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::get_mut(v8::scope::HandleScope&lt;tuple$ (9 samples, 0.04%)</title><rect x="11.7577%" y="1461" width="0.0431%" height="15" fill="rgb(233,106,18)" fg:x="2457" fg:w="9"/><text x="12.0077%" y="1471.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::try_activate_scope (9 samples, 0.04%)</title><rect x="11.7577%" y="1445" width="0.0431%" height="15" fill="rgb(220,216,11)" fg:x="2457" fg:w="9"/><text x="12.0077%" y="1455.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::get_current_scope_data (3 samples, 0.01%)</title><rect x="11.7864%" y="1429" width="0.0144%" height="15" fill="rgb(251,100,45)" fg:x="2463" fg:w="3"/><text x="12.0364%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (4 samples, 0.02%)</title><rect x="11.8199%" y="1381" width="0.0191%" height="15" fill="rgb(235,143,32)" fg:x="2470" fg:w="4"/><text x="12.0699%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::base::Vector (8 samples, 0.04%)</title><rect x="11.8199%" y="1397" width="0.0383%" height="15" fill="rgb(248,124,34)" fg:x="2470" fg:w="8"/><text x="12.0699%" y="1407.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;,v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (4 samples, 0.02%)</title><rect x="11.8390%" y="1381" width="0.0191%" height="15" fill="rgb(225,221,4)" fg:x="2474" fg:w="4"/><text x="12.0890%" y="1391.50"></text></g><g><title>deno.exe`v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate,v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (4 samples, 0.02%)</title><rect x="11.8390%" y="1365" width="0.0191%" height="15" fill="rgb(242,27,43)" fg:x="2474" fg:w="4"/><text x="12.0890%" y="1375.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::serialize_field&lt;u64&gt;(enum2$&lt;serde_v8::ser::StructSerializers&gt;*, ref$ (41 samples, 0.20%)</title><rect x="11.6667%" y="1541" width="0.1962%" height="15" fill="rgb(227,54,8)" fg:x="2438" fg:w="41"/><text x="11.9167%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::serialize_field&lt;u64&gt;(serde_v8::ser::ObjectSerializer*, ref$ (41 samples, 0.20%)</title><rect x="11.6667%" y="1525" width="0.1962%" height="15" fill="rgb(253,139,49)" fg:x="2438" fg:w="41"/><text x="11.9167%" y="1535.50"></text></g><g><title>deno.exe`serde_v8::keys::v8_struct_key(v8::scope::HandleScope&lt;v8::data::Context&gt;*, ref$ (26 samples, 0.12%)</title><rect x="11.7385%" y="1509" width="0.1244%" height="15" fill="rgb(231,26,43)" fg:x="2453" fg:w="26"/><text x="11.9885%" y="1519.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (25 samples, 0.12%)</title><rect x="11.7433%" y="1493" width="0.1196%" height="15" fill="rgb(207,121,39)" fg:x="2454" fg:w="25"/><text x="11.9933%" y="1503.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (24 samples, 0.11%)</title><rect x="11.7481%" y="1477" width="0.1148%" height="15" fill="rgb(223,101,35)" fg:x="2455" fg:w="24"/><text x="11.9981%" y="1487.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (13 samples, 0.06%)</title><rect x="11.8007%" y="1461" width="0.0622%" height="15" fill="rgb(232,87,23)" fg:x="2466" fg:w="13"/><text x="12.0507%" y="1471.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (12 samples, 0.06%)</title><rect x="11.8055%" y="1445" width="0.0574%" height="15" fill="rgb(225,180,29)" fg:x="2467" fg:w="12"/><text x="12.0555%" y="1455.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (12 samples, 0.06%)</title><rect x="11.8055%" y="1429" width="0.0574%" height="15" fill="rgb(225,25,17)" fg:x="2467" fg:w="12"/><text x="12.0555%" y="1439.50"></text></g><g><title>deno.exe`v8::internal::Factory::InternalizeUtf8String(v8::base::Vector (9 samples, 0.04%)</title><rect x="11.8199%" y="1413" width="0.0431%" height="15" fill="rgb(223,8,52)" fg:x="2470" fg:w="9"/><text x="12.0699%" y="1423.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$5::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (57 samples, 0.27%)</title><rect x="11.5950%" y="1717" width="0.2728%" height="15" fill="rgb(246,42,21)" fg:x="2423" fg:w="57"/><text x="11.8450%" y="1727.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (57 samples, 0.27%)</title><rect x="11.5950%" y="1701" width="0.2728%" height="15" fill="rgb(205,64,43)" fg:x="2423" fg:w="57"/><text x="11.8450%" y="1711.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (57 samples, 0.27%)</title><rect x="11.5950%" y="1685" width="0.2728%" height="15" fill="rgb(221,160,13)" fg:x="2423" fg:w="57"/><text x="11.8450%" y="1695.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (57 samples, 0.27%)</title><rect x="11.5950%" y="1669" width="0.2728%" height="15" fill="rgb(239,58,35)" fg:x="2423" fg:w="57"/><text x="11.8450%" y="1679.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (56 samples, 0.27%)</title><rect x="11.5998%" y="1653" width="0.2680%" height="15" fill="rgb(251,26,40)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1663.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (56 samples, 0.27%)</title><rect x="11.5998%" y="1637" width="0.2680%" height="15" fill="rgb(247,0,4)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1647.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (56 samples, 0.27%)</title><rect x="11.5998%" y="1621" width="0.2680%" height="15" fill="rgb(218,130,10)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1631.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (56 samples, 0.27%)</title><rect x="11.5998%" y="1605" width="0.2680%" height="15" fill="rgb(239,32,7)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1615.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt; &gt; (56 samples, 0.27%)</title><rect x="11.5998%" y="1589" width="0.2680%" height="15" fill="rgb(210,192,24)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1599.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt; (56 samples, 0.27%)</title><rect x="11.5998%" y="1573" width="0.2680%" height="15" fill="rgb(226,212,17)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1583.50"></text></g><g><title>deno.exe`deno_core::ops_metrics::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (56 samples, 0.27%)</title><rect x="11.5998%" y="1557" width="0.2680%" height="15" fill="rgb(219,201,28)" fg:x="2424" fg:w="56"/><text x="11.8498%" y="1567.50"></text></g><g><title>deno.exe`deno_core::ops_builtin::op_metrics::v8_fn_ptr (60 samples, 0.29%)</title><rect x="11.5854%" y="1781" width="0.2871%" height="15" fill="rgb(235,207,41)" fg:x="2421" fg:w="60"/><text x="11.8354%" y="1791.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (59 samples, 0.28%)</title><rect x="11.5902%" y="1765" width="0.2823%" height="15" fill="rgb(241,95,54)" fg:x="2422" fg:w="59"/><text x="11.8402%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (59 samples, 0.28%)</title><rect x="11.5902%" y="1749" width="0.2823%" height="15" fill="rgb(248,12,23)" fg:x="2422" fg:w="59"/><text x="11.8402%" y="1759.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$91::serialize&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt;,serde_v8::ser::Serializer&gt;(tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (58 samples, 0.28%)</title><rect x="11.5950%" y="1733" width="0.2776%" height="15" fill="rgb(228,173,4)" fg:x="2423" fg:w="58"/><text x="11.8450%" y="1743.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (63 samples, 0.30%)</title><rect x="11.5854%" y="1797" width="0.3015%" height="15" fill="rgb(254,99,5)" fg:x="2421" fg:w="63"/><text x="11.8354%" y="1807.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_op_names::v8_fn_ptr (3 samples, 0.01%)</title><rect x="11.8725%" y="1781" width="0.0144%" height="15" fill="rgb(212,184,17)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1791.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1765" width="0.0144%" height="15" fill="rgb(252,174,1)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1749" width="0.0144%" height="15" fill="rgb(241,118,51)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1759.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;alloc::string::String,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1733" width="0.0144%" height="15" fill="rgb(227,94,47)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1743.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1717" width="0.0144%" height="15" fill="rgb(229,104,2)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1727.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;alloc::string::String&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;alloc::string::String&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1701" width="0.0144%" height="15" fill="rgb(219,28,31)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1711.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;alloc::string::String&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;alloc::string::String&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (3 samples, 0.01%)</title><rect x="11.8725%" y="1685" width="0.0144%" height="15" fill="rgb(233,109,36)" fg:x="2481" fg:w="3"/><text x="12.1225%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::Start&lt;0&gt; (3 samples, 0.01%)</title><rect x="11.8964%" y="1733" width="0.0144%" height="15" fill="rgb(246,88,11)" fg:x="2486" fg:w="3"/><text x="12.1464%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::LookupInRegularHolder&lt;0&gt; (3 samples, 0.01%)</title><rect x="11.8964%" y="1717" width="0.0144%" height="15" fill="rgb(209,212,17)" fg:x="2486" fg:w="3"/><text x="12.1464%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::BinarySearch&lt;1,v8::internal::DescriptorArray&gt; (3 samples, 0.01%)</title><rect x="11.8964%" y="1701" width="0.0144%" height="15" fill="rgb(243,59,29)" fg:x="2486" fg:w="3"/><text x="12.1464%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long long, v8::internal::Handle (7 samples, 0.03%)</title><rect x="11.8964%" y="1749" width="0.0335%" height="15" fill="rgb(244,205,48)" fg:x="2486" fg:w="7"/><text x="12.1464%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupString(v8::internal::Isolate*, v8::internal::Handle (4 samples, 0.02%)</title><rect x="11.9108%" y="1733" width="0.0191%" height="15" fill="rgb(227,30,6)" fg:x="2489" fg:w="4"/><text x="12.1608%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupKey&lt;v8::internal::InternalizedStringKey,v8::internal::Isolate&gt; (3 samples, 0.01%)</title><rect x="11.9156%" y="1717" width="0.0144%" height="15" fill="rgb(220,205,48)" fg:x="2490" fg:w="3"/><text x="12.1656%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate,v8::internal::InternalizedStringKey&gt; (3 samples, 0.01%)</title><rect x="11.9156%" y="1701" width="0.0144%" height="15" fill="rgb(250,94,14)" fg:x="2490" fg:w="3"/><text x="12.1656%" y="1711.50"></text></g><g><title>`0x7FF7E0048062 (85 samples, 0.41%)</title><rect x="11.5280%" y="2053" width="0.4068%" height="15" fill="rgb(216,119,42)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="2063.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (85 samples, 0.41%)</title><rect x="11.5280%" y="2037" width="0.4068%" height="15" fill="rgb(232,155,0)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="2047.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (85 samples, 0.41%)</title><rect x="11.5280%" y="2021" width="0.4068%" height="15" fill="rgb(212,24,32)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="2031.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::call(v8::scope::HandleScope (85 samples, 0.41%)</title><rect x="11.5280%" y="2005" width="0.4068%" height="15" fill="rgb(216,69,20)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="2015.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::perform_microtask_checkpoint (85 samples, 0.41%)</title><rect x="11.5280%" y="1989" width="0.4068%" height="15" fill="rgb(229,73,31)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::PerformCheckpointInternal (85 samples, 0.41%)</title><rect x="11.5280%" y="1973" width="0.4068%" height="15" fill="rgb(224,219,20)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::RunMicrotasks (85 samples, 0.41%)</title><rect x="11.5280%" y="1957" width="0.4068%" height="15" fill="rgb(215,146,41)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Execution::TryRunMicrotasks (85 samples, 0.41%)</title><rect x="11.5280%" y="1941" width="0.4068%" height="15" fill="rgb(244,71,31)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::InvokeWithTryCatch (85 samples, 0.41%)</title><rect x="11.5280%" y="1925" width="0.4068%" height="15" fill="rgb(224,24,11)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (85 samples, 0.41%)</title><rect x="11.5280%" y="1909" width="0.4068%" height="15" fill="rgb(229,76,15)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1919.50"></text></g><g><title>deno.exe`Builtins_JSRunMicrotasksEntry (85 samples, 0.41%)</title><rect x="11.5280%" y="1893" width="0.4068%" height="15" fill="rgb(209,93,2)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1903.50"></text></g><g><title>deno.exe`Builtins_RunMicrotasks (85 samples, 0.41%)</title><rect x="11.5280%" y="1877" width="0.4068%" height="15" fill="rgb(216,200,50)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1887.50"></text></g><g><title>deno.exe`Builtins_PromiseFulfillReactionJob (85 samples, 0.41%)</title><rect x="11.5280%" y="1861" width="0.4068%" height="15" fill="rgb(211,67,34)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1871.50"></text></g><g><title>deno.exe`Builtins_AsyncFunctionAwaitResolveClosure (85 samples, 0.41%)</title><rect x="11.5280%" y="1845" width="0.4068%" height="15" fill="rgb(225,87,47)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (85 samples, 0.41%)</title><rect x="11.5280%" y="1829" width="0.4068%" height="15" fill="rgb(217,185,16)" fg:x="2409" fg:w="85"/><text x="11.7780%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (73 samples, 0.35%)</title><rect x="11.5854%" y="1813" width="0.3493%" height="15" fill="rgb(205,0,0)" fg:x="2421" fg:w="73"/><text x="11.8354%" y="1823.50"></text></g><g><title>deno.exe`Builtins_ObjectFromEntries (10 samples, 0.05%)</title><rect x="11.8869%" y="1797" width="0.0479%" height="15" fill="rgb(207,116,45)" fg:x="2484" fg:w="10"/><text x="12.1369%" y="1807.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (9 samples, 0.04%)</title><rect x="11.8917%" y="1781" width="0.0431%" height="15" fill="rgb(221,156,26)" fg:x="2485" fg:w="9"/><text x="12.1417%" y="1791.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CreateDataProperty (9 samples, 0.04%)</title><rect x="11.8917%" y="1765" width="0.0431%" height="15" fill="rgb(213,140,4)" fg:x="2485" fg:w="9"/><text x="12.1417%" y="1775.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="11.9682%" y="1493" width="0.0191%" height="15" fill="rgb(231,224,15)" fg:x="2501" fg:w="4"/><text x="12.2182%" y="1503.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="11.9730%" y="1477" width="0.0144%" height="15" fill="rgb(244,76,20)" fg:x="2502" fg:w="3"/><text x="12.2230%" y="1487.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (3 samples, 0.01%)</title><rect x="11.9730%" y="1461" width="0.0144%" height="15" fill="rgb(238,117,7)" fg:x="2502" fg:w="3"/><text x="12.2230%" y="1471.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (3 samples, 0.01%)</title><rect x="11.9730%" y="1445" width="0.0144%" height="15" fill="rgb(235,1,10)" fg:x="2502" fg:w="3"/><text x="12.2230%" y="1455.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (3 samples, 0.01%)</title><rect x="11.9730%" y="1429" width="0.0144%" height="15" fill="rgb(216,165,6)" fg:x="2502" fg:w="3"/><text x="12.2230%" y="1439.50"></text></g><g><title>deno.exe`deno_core::ops_builtin::op_metrics::v8_fn_ptr (11 samples, 0.05%)</title><rect x="11.9443%" y="1781" width="0.0526%" height="15" fill="rgb(246,91,35)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1791.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1765" width="0.0526%" height="15" fill="rgb(228,96,24)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1749" width="0.0526%" height="15" fill="rgb(254,217,53)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1759.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$91::serialize&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt;,serde_v8::ser::Serializer&gt;(tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1733" width="0.0526%" height="15" fill="rgb(209,60,0)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1743.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$5::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1717" width="0.0526%" height="15" fill="rgb(250,93,26)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1727.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1701" width="0.0526%" height="15" fill="rgb(211,9,40)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1711.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1685" width="0.0526%" height="15" fill="rgb(242,57,20)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1695.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1669" width="0.0526%" height="15" fill="rgb(248,85,48)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1679.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1653" width="0.0526%" height="15" fill="rgb(212,117,2)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1663.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1637" width="0.0526%" height="15" fill="rgb(243,19,3)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1647.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (11 samples, 0.05%)</title><rect x="11.9443%" y="1621" width="0.0526%" height="15" fill="rgb(232,217,24)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1631.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (11 samples, 0.05%)</title><rect x="11.9443%" y="1605" width="0.0526%" height="15" fill="rgb(224,175,40)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1615.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt; &gt; (11 samples, 0.05%)</title><rect x="11.9443%" y="1589" width="0.0526%" height="15" fill="rgb(212,162,32)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1599.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt; (11 samples, 0.05%)</title><rect x="11.9443%" y="1573" width="0.0526%" height="15" fill="rgb(215,9,4)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1583.50"></text></g><g><title>deno.exe`deno_core::ops_metrics::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (11 samples, 0.05%)</title><rect x="11.9443%" y="1557" width="0.0526%" height="15" fill="rgb(242,42,7)" fg:x="2496" fg:w="11"/><text x="12.1943%" y="1567.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::serialize_field&lt;u64&gt;(enum2$&lt;serde_v8::ser::StructSerializers&gt;*, ref$ (9 samples, 0.04%)</title><rect x="11.9539%" y="1541" width="0.0431%" height="15" fill="rgb(242,184,45)" fg:x="2498" fg:w="9"/><text x="12.2039%" y="1551.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::serialize_field&lt;u64&gt;(serde_v8::ser::ObjectSerializer*, ref$ (9 samples, 0.04%)</title><rect x="11.9539%" y="1525" width="0.0431%" height="15" fill="rgb(228,111,51)" fg:x="2498" fg:w="9"/><text x="12.2039%" y="1535.50"></text></g><g><title>deno.exe`serde_v8::keys::v8_struct_key(v8::scope::HandleScope&lt;v8::data::Context&gt;*, ref$ (6 samples, 0.03%)</title><rect x="11.9682%" y="1509" width="0.0287%" height="15" fill="rgb(236,147,17)" fg:x="2501" fg:w="6"/><text x="12.2182%" y="1519.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (12 samples, 0.06%)</title><rect x="11.9443%" y="1797" width="0.0574%" height="15" fill="rgb(210,75,22)" fg:x="2496" fg:w="12"/><text x="12.1943%" y="1807.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (3 samples, 0.01%)</title><rect x="12.0017%" y="1797" width="0.0144%" height="15" fill="rgb(217,159,45)" fg:x="2508" fg:w="3"/><text x="12.2517%" y="1807.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (3 samples, 0.01%)</title><rect x="12.0017%" y="1781" width="0.0144%" height="15" fill="rgb(245,165,53)" fg:x="2508" fg:w="3"/><text x="12.2517%" y="1791.50"></text></g><g><title>deno.exe`Builtins_PromiseConstructor (3 samples, 0.01%)</title><rect x="12.0017%" y="1765" width="0.0144%" height="15" fill="rgb(251,190,50)" fg:x="2508" fg:w="3"/><text x="12.2517%" y="1775.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="12.0017%" y="1749" width="0.0144%" height="15" fill="rgb(208,203,29)" fg:x="2508" fg:w="3"/><text x="12.2517%" y="1759.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="12.0017%" y="1733" width="0.0144%" height="15" fill="rgb(207,209,35)" fg:x="2508" fg:w="3"/><text x="12.2517%" y="1743.50"></text></g><g><title>deno.exe`Builtins_AsyncFunctionAwaitResolveClosure (20 samples, 0.10%)</title><rect x="11.9395%" y="1845" width="0.0957%" height="15" fill="rgb(230,144,49)" fg:x="2495" fg:w="20"/><text x="12.1895%" y="1855.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="11.9395%" y="1829" width="0.0957%" height="15" fill="rgb(229,31,6)" fg:x="2495" fg:w="20"/><text x="12.1895%" y="1839.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (20 samples, 0.10%)</title><rect x="11.9395%" y="1813" width="0.0957%" height="15" fill="rgb(251,129,24)" fg:x="2495" fg:w="20"/><text x="12.1895%" y="1823.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (21 samples, 0.10%)</title><rect x="11.9395%" y="2037" width="0.1005%" height="15" fill="rgb(235,105,15)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="2047.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::v8_fn_ptr (21 samples, 0.10%)</title><rect x="11.9395%" y="2021" width="0.1005%" height="15" fill="rgb(216,52,43)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="2031.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_run_microtasks::call(v8::scope::HandleScope (21 samples, 0.10%)</title><rect x="11.9395%" y="2005" width="0.1005%" height="15" fill="rgb(238,144,41)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="2015.50"></text></g><g><title>deno.exe`v8::isolate::Isolate::perform_microtask_checkpoint (21 samples, 0.10%)</title><rect x="11.9395%" y="1989" width="0.1005%" height="15" fill="rgb(243,63,9)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::PerformCheckpointInternal (21 samples, 0.10%)</title><rect x="11.9395%" y="1973" width="0.1005%" height="15" fill="rgb(246,208,1)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::MicrotaskQueue::RunMicrotasks (21 samples, 0.10%)</title><rect x="11.9395%" y="1957" width="0.1005%" height="15" fill="rgb(233,182,18)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Execution::TryRunMicrotasks (21 samples, 0.10%)</title><rect x="11.9395%" y="1941" width="0.1005%" height="15" fill="rgb(242,224,8)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::InvokeWithTryCatch (21 samples, 0.10%)</title><rect x="11.9395%" y="1925" width="0.1005%" height="15" fill="rgb(243,54,37)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (21 samples, 0.10%)</title><rect x="11.9395%" y="1909" width="0.1005%" height="15" fill="rgb(233,192,12)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1919.50"></text></g><g><title>deno.exe`Builtins_JSRunMicrotasksEntry (21 samples, 0.10%)</title><rect x="11.9395%" y="1893" width="0.1005%" height="15" fill="rgb(251,192,53)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1903.50"></text></g><g><title>deno.exe`Builtins_RunMicrotasks (21 samples, 0.10%)</title><rect x="11.9395%" y="1877" width="0.1005%" height="15" fill="rgb(246,141,26)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1887.50"></text></g><g><title>deno.exe`Builtins_PromiseFulfillReactionJob (21 samples, 0.10%)</title><rect x="11.9395%" y="1861" width="0.1005%" height="15" fill="rgb(239,195,19)" fg:x="2495" fg:w="21"/><text x="12.1895%" y="1871.50"></text></g><g><title>deno.exe`v8::data::Function::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local (125 samples, 0.60%)</title><rect x="11.4514%" y="2197" width="0.5982%" height="15" fill="rgb(241,16,39)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2207.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (125 samples, 0.60%)</title><rect x="11.4514%" y="2181" width="0.5982%" height="15" fill="rgb(223,13,53)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2191.50"></text></g><g><title>deno.exe`v8::function::impl$17::call::closure$0 (125 samples, 0.60%)</title><rect x="11.4514%" y="2165" width="0.5982%" height="15" fill="rgb(214,227,0)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2175.50"></text></g><g><title>deno.exe`v8__Function__Call(v8::Function const&amp;, v8::Context const&amp;, v8::Value const&amp;, int, v8::Value const* const*) (125 samples, 0.60%)</title><rect x="11.4514%" y="2149" width="0.5982%" height="15" fill="rgb(228,103,26)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2159.50"></text></g><g><title>deno.exe`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (125 samples, 0.60%)</title><rect x="11.4514%" y="2133" width="0.5982%" height="15" fill="rgb(254,177,53)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2143.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (125 samples, 0.60%)</title><rect x="11.4514%" y="2117" width="0.5982%" height="15" fill="rgb(208,201,34)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2127.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (125 samples, 0.60%)</title><rect x="11.4514%" y="2101" width="0.5982%" height="15" fill="rgb(212,39,5)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2111.50"></text></g><g><title>deno.exe`Builtins_JSEntry (125 samples, 0.60%)</title><rect x="11.4514%" y="2085" width="0.5982%" height="15" fill="rgb(246,117,3)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2095.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (125 samples, 0.60%)</title><rect x="11.4514%" y="2069" width="0.5982%" height="15" fill="rgb(244,118,39)" fg:x="2393" fg:w="125"/><text x="11.7014%" y="2079.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (23 samples, 0.11%)</title><rect x="11.9395%" y="2053" width="0.1101%" height="15" fill="rgb(241,64,10)" fg:x="2495" fg:w="23"/><text x="12.1895%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::do_js_event_loop_tick (128 samples, 0.61%)</title><rect x="11.4418%" y="2213" width="0.6125%" height="15" fill="rgb(229,39,44)" fg:x="2391" fg:w="128"/><text x="11.6918%" y="2223.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$13::resolve_value::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (136 samples, 0.65%)</title><rect x="11.4227%" y="2293" width="0.6508%" height="15" fill="rgb(230,226,3)" fg:x="2387" fg:w="136"/><text x="11.6727%" y="2303.50"></text></g><g><title>deno.exe`futures_util::future::poll_fn::impl$2::poll&lt;enum2$&lt;core::result::Result&lt;v8::handle::Global&lt;v8::data::Value&gt;,anyhow::Error&gt; &gt;,deno_core::runtime::jsruntime::impl$13::resolve_value::async_fn$0::closure_env$0&gt;(core::pin::Pin&lt;ref_mut$&lt;futures_util::future::poll_fn::PollFn (136 samples, 0.65%)</title><rect x="11.4227%" y="2277" width="0.6508%" height="15" fill="rgb(222,13,42)" fg:x="2387" fg:w="136"/><text x="11.6727%" y="2287.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$13::resolve_value::async_fn$0::closure$0 (136 samples, 0.65%)</title><rect x="11.4227%" y="2261" width="0.6508%" height="15" fill="rgb(247,180,54)" fg:x="2387" fg:w="136"/><text x="11.6727%" y="2271.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::poll_value(v8::handle::Global (136 samples, 0.65%)</title><rect x="11.4227%" y="2245" width="0.6508%" height="15" fill="rgb(205,96,16)" fg:x="2387" fg:w="136"/><text x="11.6727%" y="2255.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::JsRuntime::poll_event_loop (133 samples, 0.64%)</title><rect x="11.4370%" y="2229" width="0.6365%" height="15" fill="rgb(205,100,21)" fg:x="2390" fg:w="133"/><text x="11.6870%" y="2239.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::end(enum2$ (6 samples, 0.03%)</title><rect x="12.0831%" y="1813" width="0.0287%" height="15" fill="rgb(248,51,4)" fg:x="2525" fg:w="6"/><text x="12.3331%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::end (6 samples, 0.03%)</title><rect x="12.0831%" y="1797" width="0.0287%" height="15" fill="rgb(217,197,30)" fg:x="2525" fg:w="6"/><text x="12.3331%" y="1807.50"></text></g><g><title>deno.exe`v8::data::Object::with_prototype_and_properties(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::Name&gt; &gt; &gt;, ref$&lt;slice2$&lt;v8::handle::Local (4 samples, 0.02%)</title><rect x="12.0926%" y="1781" width="0.0191%" height="15" fill="rgb(240,179,40)" fg:x="2527" fg:w="4"/><text x="12.3426%" y="1791.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (4 samples, 0.02%)</title><rect x="12.0926%" y="1765" width="0.0191%" height="15" fill="rgb(212,185,35)" fg:x="2527" fg:w="4"/><text x="12.3426%" y="1775.50"></text></g><g><title>deno.exe`v8::object::impl$0::with_prototype_and_properties::closure$0 (3 samples, 0.01%)</title><rect x="12.0974%" y="1749" width="0.0144%" height="15" fill="rgb(251,222,31)" fg:x="2528" fg:w="3"/><text x="12.3474%" y="1759.50"></text></g><g><title>deno.exe`v8__Object__New__with_prototype_and_properties(v8::Isolate*, v8::Value const&amp;, v8::Name const* const*, v8::Value const* const*, unsigned long long) (3 samples, 0.01%)</title><rect x="12.0974%" y="1733" width="0.0144%" height="15" fill="rgb(208,140,36)" fg:x="2528" fg:w="3"/><text x="12.3474%" y="1743.50"></text></g><g><title>deno.exe`v8::Object::New(v8::Isolate*, v8::Local&lt;v8::Value&gt;, v8::Local&lt;v8::Name&gt;*, v8::Local (3 samples, 0.01%)</title><rect x="12.0974%" y="1717" width="0.0144%" height="15" fill="rgb(220,148,1)" fg:x="2528" fg:w="3"/><text x="12.3474%" y="1727.50"></text></g><g><title>deno.exe`v8::data::Number::new(v8::scope::HandleScope&lt;tuple$ (8 samples, 0.04%)</title><rect x="12.1357%" y="1749" width="0.0383%" height="15" fill="rgb(254,4,28)" fg:x="2536" fg:w="8"/><text x="12.3857%" y="1759.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (6 samples, 0.03%)</title><rect x="12.1453%" y="1733" width="0.0287%" height="15" fill="rgb(222,185,44)" fg:x="2538" fg:w="6"/><text x="12.3953%" y="1743.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::get_mut(v8::scope::HandleScope&lt;tuple$ (3 samples, 0.01%)</title><rect x="12.1596%" y="1717" width="0.0144%" height="15" fill="rgb(215,74,39)" fg:x="2541" fg:w="3"/><text x="12.4096%" y="1727.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::try_activate_scope (3 samples, 0.01%)</title><rect x="12.1596%" y="1701" width="0.0144%" height="15" fill="rgb(247,86,4)" fg:x="2541" fg:w="3"/><text x="12.4096%" y="1711.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$46::serialize&lt;serde_v8::ser::Serializer&gt; (11 samples, 0.05%)</title><rect x="12.1261%" y="1781" width="0.0526%" height="15" fill="rgb(231,105,32)" fg:x="2534" fg:w="11"/><text x="12.3761%" y="1791.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_u64 (11 samples, 0.05%)</title><rect x="12.1261%" y="1765" width="0.0526%" height="15" fill="rgb(222,65,35)" fg:x="2534" fg:w="11"/><text x="12.3761%" y="1775.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::get_mut(v8::scope::HandleScope&lt;tuple$ (3 samples, 0.01%)</title><rect x="12.1979%" y="1733" width="0.0144%" height="15" fill="rgb(218,145,35)" fg:x="2549" fg:w="3"/><text x="12.4479%" y="1743.50"></text></g><g><title>deno.exe`v8::scope::data::ScopeData::try_activate_scope (3 samples, 0.01%)</title><rect x="12.1979%" y="1717" width="0.0144%" height="15" fill="rgb(208,7,15)" fg:x="2549" fg:w="3"/><text x="12.4479%" y="1727.50"></text></g><g><title>deno.exe`core::option::impl$14::eq&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt;(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="12.1979%" y="1701" width="0.0144%" height="15" fill="rgb(209,83,13)" fg:x="2549" fg:w="3"/><text x="12.4479%" y="1711.50"></text></g><g><title>deno.exe`core::option::impl$16::eq&lt;v8::scope::data::ScopeData&gt;(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull&lt;v8::scope::data::ScopeData&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="12.1979%" y="1685" width="0.0144%" height="15" fill="rgb(218,3,10)" fg:x="2549" fg:w="3"/><text x="12.4479%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::base::Vector (5 samples, 0.02%)</title><rect x="12.2171%" y="1669" width="0.0239%" height="15" fill="rgb(211,219,4)" fg:x="2553" fg:w="5"/><text x="12.4671%" y="1679.50"></text></g><g><title>deno.exe`v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (5 samples, 0.02%)</title><rect x="12.2171%" y="1653" width="0.0239%" height="15" fill="rgb(228,194,12)" fg:x="2553" fg:w="5"/><text x="12.4671%" y="1663.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (14 samples, 0.07%)</title><rect x="12.1836%" y="1765" width="0.0670%" height="15" fill="rgb(210,175,7)" fg:x="2546" fg:w="14"/><text x="12.4336%" y="1775.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (12 samples, 0.06%)</title><rect x="12.1931%" y="1749" width="0.0574%" height="15" fill="rgb(243,132,6)" fg:x="2548" fg:w="12"/><text x="12.4431%" y="1759.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (8 samples, 0.04%)</title><rect x="12.2123%" y="1733" width="0.0383%" height="15" fill="rgb(207,72,18)" fg:x="2552" fg:w="8"/><text x="12.4623%" y="1743.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (8 samples, 0.04%)</title><rect x="12.2123%" y="1717" width="0.0383%" height="15" fill="rgb(236,1,18)" fg:x="2552" fg:w="8"/><text x="12.4623%" y="1727.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (8 samples, 0.04%)</title><rect x="12.2123%" y="1701" width="0.0383%" height="15" fill="rgb(227,0,18)" fg:x="2552" fg:w="8"/><text x="12.4623%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Factory::InternalizeUtf8String(v8::base::Vector (8 samples, 0.04%)</title><rect x="12.2123%" y="1685" width="0.0383%" height="15" fill="rgb(247,37,5)" fg:x="2552" fg:w="8"/><text x="12.4623%" y="1695.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::serialize_field&lt;u64&gt;(enum2$&lt;serde_v8::ser::StructSerializers&gt;*, ref$ (30 samples, 0.14%)</title><rect x="12.1118%" y="1813" width="0.1436%" height="15" fill="rgb(237,179,24)" fg:x="2531" fg:w="30"/><text x="12.3618%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::serialize_field&lt;u64&gt;(serde_v8::ser::ObjectSerializer*, ref$ (30 samples, 0.14%)</title><rect x="12.1118%" y="1797" width="0.1436%" height="15" fill="rgb(226,53,20)" fg:x="2531" fg:w="30"/><text x="12.3618%" y="1807.50"></text></g><g><title>deno.exe`serde_v8::keys::v8_struct_key(v8::scope::HandleScope&lt;v8::data::Context&gt;*, ref$ (16 samples, 0.08%)</title><rect x="12.1788%" y="1781" width="0.0766%" height="15" fill="rgb(247,75,7)" fg:x="2545" fg:w="16"/><text x="12.4288%" y="1791.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (40 samples, 0.19%)</title><rect x="12.0783%" y="1893" width="0.1914%" height="15" fill="rgb(233,96,12)" fg:x="2524" fg:w="40"/><text x="12.3283%" y="1903.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (40 samples, 0.19%)</title><rect x="12.0783%" y="1877" width="0.1914%" height="15" fill="rgb(224,125,0)" fg:x="2524" fg:w="40"/><text x="12.3283%" y="1887.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt; &gt; (40 samples, 0.19%)</title><rect x="12.0783%" y="1861" width="0.1914%" height="15" fill="rgb(224,92,25)" fg:x="2524" fg:w="40"/><text x="12.3283%" y="1871.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt; (40 samples, 0.19%)</title><rect x="12.0783%" y="1845" width="0.1914%" height="15" fill="rgb(224,42,24)" fg:x="2524" fg:w="40"/><text x="12.3283%" y="1855.50"></text></g><g><title>deno.exe`deno_core::ops_metrics::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (40 samples, 0.19%)</title><rect x="12.0783%" y="1829" width="0.1914%" height="15" fill="rgb(234,132,49)" fg:x="2524" fg:w="40"/><text x="12.3283%" y="1839.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_struct(serde_v8::ser::Serializer, ref$ (3 samples, 0.01%)</title><rect x="12.2553%" y="1813" width="0.0144%" height="15" fill="rgb(248,100,35)" fg:x="2561" fg:w="3"/><text x="12.5053%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$5::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1989" width="0.1962%" height="15" fill="rgb(239,94,40)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1999.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1973" width="0.1962%" height="15" fill="rgb(235,139,28)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1983.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1957" width="0.1962%" height="15" fill="rgb(217,144,7)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1967.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1941" width="0.1962%" height="15" fill="rgb(227,55,4)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1951.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1925" width="0.1962%" height="15" fill="rgb(252,82,54)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1935.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (41 samples, 0.20%)</title><rect x="12.0783%" y="1909" width="0.1962%" height="15" fill="rgb(245,172,4)" fg:x="2524" fg:w="41"/><text x="12.3283%" y="1919.50"></text></g><g><title>deno.exe`deno_core::ops_builtin::op_metrics::v8_fn_ptr (42 samples, 0.20%)</title><rect x="12.0783%" y="2053" width="0.2010%" height="15" fill="rgb(207,26,27)" fg:x="2524" fg:w="42"/><text x="12.3283%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (42 samples, 0.20%)</title><rect x="12.0783%" y="2037" width="0.2010%" height="15" fill="rgb(252,98,18)" fg:x="2524" fg:w="42"/><text x="12.3283%" y="2047.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (42 samples, 0.20%)</title><rect x="12.0783%" y="2021" width="0.2010%" height="15" fill="rgb(244,8,26)" fg:x="2524" fg:w="42"/><text x="12.3283%" y="2031.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$91::serialize&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt;,serde_v8::ser::Serializer&gt;(tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (42 samples, 0.20%)</title><rect x="12.0783%" y="2005" width="0.2010%" height="15" fill="rgb(237,173,45)" fg:x="2524" fg:w="42"/><text x="12.3283%" y="2015.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (45 samples, 0.22%)</title><rect x="12.0783%" y="2069" width="0.2153%" height="15" fill="rgb(208,213,49)" fg:x="2524" fg:w="45"/><text x="12.3283%" y="2079.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_op_names::v8_fn_ptr (3 samples, 0.01%)</title><rect x="12.2793%" y="2053" width="0.0144%" height="15" fill="rgb(212,122,37)" fg:x="2566" fg:w="3"/><text x="12.5293%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="12.2793%" y="2037" width="0.0144%" height="15" fill="rgb(213,80,17)" fg:x="2566" fg:w="3"/><text x="12.5293%" y="2047.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (3 samples, 0.01%)</title><rect x="12.2793%" y="2021" width="0.0144%" height="15" fill="rgb(206,210,43)" fg:x="2566" fg:w="3"/><text x="12.5293%" y="2031.50"></text></g><g><title>`0x7FFAA21A0AEE (3 samples, 0.01%)</title><rect x="12.3128%" y="1749" width="0.0144%" height="15" fill="rgb(229,214,3)" fg:x="2573" fg:w="3"/><text x="12.5628%" y="1759.50"></text></g><g><title>`0x7FFAA21BDB41 (3 samples, 0.01%)</title><rect x="12.3128%" y="1733" width="0.0144%" height="15" fill="rgb(235,213,29)" fg:x="2573" fg:w="3"/><text x="12.5628%" y="1743.50"></text></g><g><title>`0x7FFAA21BA3F7 (3 samples, 0.01%)</title><rect x="12.3128%" y="1717" width="0.0144%" height="15" fill="rgb(248,135,26)" fg:x="2573" fg:w="3"/><text x="12.5628%" y="1727.50"></text></g><g><title>`0x7FFAA21BAC39 (3 samples, 0.01%)</title><rect x="12.3128%" y="1701" width="0.0144%" height="15" fill="rgb(242,188,12)" fg:x="2573" fg:w="3"/><text x="12.5628%" y="1711.50"></text></g><g><title>`0x7FFAA222F4F4 (3 samples, 0.01%)</title><rect x="12.3128%" y="1685" width="0.0144%" height="15" fill="rgb(245,38,12)" fg:x="2573" fg:w="3"/><text x="12.5628%" y="1695.50"></text></g><g><title>`0x7FFAA21B88C4 (7 samples, 0.03%)</title><rect x="12.3128%" y="1781" width="0.0335%" height="15" fill="rgb(218,42,13)" fg:x="2573" fg:w="7"/><text x="12.5628%" y="1791.50"></text></g><g><title>`0x7FFAA21A0F80 (7 samples, 0.03%)</title><rect x="12.3128%" y="1765" width="0.0335%" height="15" fill="rgb(238,132,49)" fg:x="2573" fg:w="7"/><text x="12.5628%" y="1775.50"></text></g><g><title>`0x7FFAA21A0BB8 (4 samples, 0.02%)</title><rect x="12.3271%" y="1749" width="0.0191%" height="15" fill="rgb(209,196,19)" fg:x="2576" fg:w="4"/><text x="12.5771%" y="1759.50"></text></g><g><title>`0x7FFAA21A06FF (3 samples, 0.01%)</title><rect x="12.3319%" y="1733" width="0.0144%" height="15" fill="rgb(244,131,22)" fg:x="2577" fg:w="3"/><text x="12.5819%" y="1743.50"></text></g><g><title>`0x7FFAA21A0E7B (3 samples, 0.01%)</title><rect x="12.3463%" y="1749" width="0.0144%" height="15" fill="rgb(223,18,34)" fg:x="2580" fg:w="3"/><text x="12.5963%" y="1759.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::call&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (13 samples, 0.06%)</title><rect x="12.3032%" y="1877" width="0.0622%" height="15" fill="rgb(252,124,54)" fg:x="2571" fg:w="13"/><text x="12.5532%" y="1887.50"></text></g><g><title>deno.exe`dlopen::raw::common::Library::open&lt;ref$&lt;alloc::string::String&gt; &gt; (12 samples, 0.06%)</title><rect x="12.3080%" y="1861" width="0.0574%" height="15" fill="rgb(229,106,42)" fg:x="2572" fg:w="12"/><text x="12.5580%" y="1871.50"></text></g><g><title>deno.exe`dlopen::raw::windows::open_lib(ref$ (12 samples, 0.06%)</title><rect x="12.3080%" y="1845" width="0.0574%" height="15" fill="rgb(221,129,1)" fg:x="2572" fg:w="12"/><text x="12.5580%" y="1855.50"></text></g><g><title>`0x7FFA9F7D5EF2 (12 samples, 0.06%)</title><rect x="12.3080%" y="1829" width="0.0574%" height="15" fill="rgb(229,74,15)" fg:x="2572" fg:w="12"/><text x="12.5580%" y="1839.50"></text></g><g><title>`0x7FFAA21BA24A (11 samples, 0.05%)</title><rect x="12.3128%" y="1813" width="0.0526%" height="15" fill="rgb(210,206,50)" fg:x="2573" fg:w="11"/><text x="12.5628%" y="1823.50"></text></g><g><title>`0x7FFAA21A8C9C (11 samples, 0.05%)</title><rect x="12.3128%" y="1797" width="0.0526%" height="15" fill="rgb(251,114,31)" fg:x="2573" fg:w="11"/><text x="12.5628%" y="1807.50"></text></g><g><title>`0x7FFAA21B88D0 (4 samples, 0.02%)</title><rect x="12.3463%" y="1781" width="0.0191%" height="15" fill="rgb(215,225,28)" fg:x="2580" fg:w="4"/><text x="12.5963%" y="1791.50"></text></g><g><title>`0x7FFAA21BA090 (4 samples, 0.02%)</title><rect x="12.3463%" y="1765" width="0.0191%" height="15" fill="rgb(237,109,14)" fg:x="2580" fg:w="4"/><text x="12.5963%" y="1775.50"></text></g><g><title>`0x7FF7E004CA8E (18 samples, 0.09%)</title><rect x="12.3032%" y="1941" width="0.0861%" height="15" fill="rgb(230,13,37)" fg:x="2571" fg:w="18"/><text x="12.5532%" y="1951.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (18 samples, 0.09%)</title><rect x="12.3032%" y="1925" width="0.0861%" height="15" fill="rgb(231,40,28)" fg:x="2571" fg:w="18"/><text x="12.5532%" y="1935.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_fn_ptr&lt;deno_runtime::permissions::PermissionsContainer&gt; (18 samples, 0.09%)</title><rect x="12.3032%" y="1909" width="0.0861%" height="15" fill="rgb(231,202,18)" fg:x="2571" fg:w="18"/><text x="12.5532%" y="1919.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_func&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (18 samples, 0.09%)</title><rect x="12.3032%" y="1893" width="0.0861%" height="15" fill="rgb(225,33,18)" fg:x="2571" fg:w="18"/><text x="12.5532%" y="1903.50"></text></g><g><title>deno.exe`serde_v8::de::from_v8&lt;deno_ffi::dlfcn::FfiLoadArgs&gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (5 samples, 0.02%)</title><rect x="12.3654%" y="1877" width="0.0239%" height="15" fill="rgb(223,64,47)" fg:x="2584" fg:w="5"/><text x="12.6154%" y="1887.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::_::impl$0::deserialize&lt;ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (5 samples, 0.02%)</title><rect x="12.3654%" y="1861" width="0.0239%" height="15" fill="rgb(234,114,13)" fg:x="2584" fg:w="5"/><text x="12.6154%" y="1871.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_struct&lt;deno_ffi::dlfcn::_::impl$0::deserialize::__Visitor&gt;(serde_v8::de::Deserializer*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (5 samples, 0.02%)</title><rect x="12.3654%" y="1845" width="0.0239%" height="15" fill="rgb(248,56,40)" fg:x="2584" fg:w="5"/><text x="12.6154%" y="1855.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::_::impl$0::deserialize::impl$2::visit_map&lt;serde_v8::de::StructAccess&gt; (4 samples, 0.02%)</title><rect x="12.3702%" y="1829" width="0.0191%" height="15" fill="rgb(221,194,21)" fg:x="2585" fg:w="4"/><text x="12.6202%" y="1839.50"></text></g><g><title>deno.exe`serde::de::MapAccess::next_value&lt;serde_v8::de::StructAccess,std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt; (3 samples, 0.01%)</title><rect x="12.3750%" y="1813" width="0.0144%" height="15" fill="rgb(242,108,46)" fg:x="2586" fg:w="3"/><text x="12.6250%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::de::impl$5::next_value_seed&lt;core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt; &gt;(serde_v8::de::StructAccess*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="12.3750%" y="1797" width="0.0144%" height="15" fill="rgb(220,106,10)" fg:x="2586" fg:w="3"/><text x="12.6250%" y="1807.50"></text></g><g><title>deno.exe`serde::de::impl$5::deserialize&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt;,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt;(core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="12.3750%" y="1781" width="0.0144%" height="15" fill="rgb(211,88,4)" fg:x="2586" fg:w="3"/><text x="12.6250%" y="1791.50"></text></g><g><title>deno.exe`serde::de::impls::impl$192::deserialize&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (3 samples, 0.01%)</title><rect x="12.3750%" y="1765" width="0.0144%" height="15" fill="rgb(214,95,34)" fg:x="2586" fg:w="3"/><text x="12.6250%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_map&lt;serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt;(serde_v8::de::Deserializer*, serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="12.3750%" y="1749" width="0.0144%" height="15" fill="rgb(250,160,33)" fg:x="2586" fg:w="3"/><text x="12.6250%" y="1759.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (19 samples, 0.09%)</title><rect x="12.3032%" y="2053" width="0.0909%" height="15" fill="rgb(225,29,10)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (19 samples, 0.09%)</title><rect x="12.3032%" y="2037" width="0.0909%" height="15" fill="rgb(224,28,30)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (19 samples, 0.09%)</title><rect x="12.3032%" y="2021" width="0.0909%" height="15" fill="rgb(231,77,4)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (19 samples, 0.09%)</title><rect x="12.3032%" y="2005" width="0.0909%" height="15" fill="rgb(209,63,21)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (19 samples, 0.09%)</title><rect x="12.3032%" y="1989" width="0.0909%" height="15" fill="rgb(226,22,11)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="1999.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (19 samples, 0.09%)</title><rect x="12.3032%" y="1973" width="0.0909%" height="15" fill="rgb(216,82,30)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (19 samples, 0.09%)</title><rect x="12.3032%" y="1957" width="0.0909%" height="15" fill="rgb(246,227,38)" fg:x="2571" fg:w="19"/><text x="12.5532%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (24 samples, 0.11%)</title><rect x="12.2936%" y="2069" width="0.1148%" height="15" fill="rgb(251,203,53)" fg:x="2569" fg:w="24"/><text x="12.5436%" y="2079.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="12.3941%" y="2053" width="0.0144%" height="15" fill="rgb(254,101,1)" fg:x="2590" fg:w="3"/><text x="12.6441%" y="2063.50"></text></g><g><title>`0x7FF7E004E5E5 (74 samples, 0.35%)</title><rect x="12.0783%" y="2117" width="0.3541%" height="15" fill="rgb(241,180,5)" fg:x="2524" fg:w="74"/><text x="12.3283%" y="2127.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (74 samples, 0.35%)</title><rect x="12.0783%" y="2101" width="0.3541%" height="15" fill="rgb(218,168,4)" fg:x="2524" fg:w="74"/><text x="12.3283%" y="2111.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (74 samples, 0.35%)</title><rect x="12.0783%" y="2085" width="0.3541%" height="15" fill="rgb(224,223,32)" fg:x="2524" fg:w="74"/><text x="12.3283%" y="2095.50"></text></g><g><title>deno.exe`Builtins_ObjectFromEntries (5 samples, 0.02%)</title><rect x="12.4085%" y="2069" width="0.0239%" height="15" fill="rgb(236,106,22)" fg:x="2593" fg:w="5"/><text x="12.6585%" y="2079.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (5 samples, 0.02%)</title><rect x="12.4085%" y="2053" width="0.0239%" height="15" fill="rgb(206,121,5)" fg:x="2593" fg:w="5"/><text x="12.6585%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CreateDataProperty (5 samples, 0.02%)</title><rect x="12.4085%" y="2037" width="0.0239%" height="15" fill="rgb(233,87,28)" fg:x="2593" fg:w="5"/><text x="12.6585%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::LookupIterator(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, unsigned long long, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.4085%" y="2021" width="0.0239%" height="15" fill="rgb(236,137,17)" fg:x="2593" fg:w="5"/><text x="12.6585%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::StringTable::LookupString(v8::internal::Isolate*, v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.4181%" y="2005" width="0.0144%" height="15" fill="rgb(209,183,38)" fg:x="2595" fg:w="3"/><text x="12.6681%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::SetInternalizedReference (3 samples, 0.01%)</title><rect x="12.4181%" y="1989" width="0.0144%" height="15" fill="rgb(206,162,44)" fg:x="2595" fg:w="3"/><text x="12.6681%" y="1999.50"></text></g><g><title>deno.exe`v8::object::impl$0::with_prototype_and_properties::closure$0 (8 samples, 0.04%)</title><rect x="12.4468%" y="1749" width="0.0383%" height="15" fill="rgb(237,70,39)" fg:x="2601" fg:w="8"/><text x="12.6968%" y="1759.50"></text></g><g><title>deno.exe`v8__Object__New__with_prototype_and_properties(v8::Isolate*, v8::Value const&amp;, v8::Name const* const*, v8::Value const* const*, unsigned long long) (8 samples, 0.04%)</title><rect x="12.4468%" y="1733" width="0.0383%" height="15" fill="rgb(212,176,5)" fg:x="2601" fg:w="8"/><text x="12.6968%" y="1743.50"></text></g><g><title>deno.exe`v8::Object::New(v8::Isolate*, v8::Local&lt;v8::Value&gt;, v8::Local&lt;v8::Name&gt;*, v8::Local (8 samples, 0.04%)</title><rect x="12.4468%" y="1717" width="0.0383%" height="15" fill="rgb(232,95,16)" fg:x="2601" fg:w="8"/><text x="12.6968%" y="1727.50"></text></g><g><title>deno.exe`v8::internal::NameDictionary::New&lt;v8::internal::Isolate&gt; (3 samples, 0.01%)</title><rect x="12.4707%" y="1701" width="0.0144%" height="15" fill="rgb(219,115,35)" fg:x="2606" fg:w="3"/><text x="12.7207%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithMap(v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.4707%" y="1685" width="0.0144%" height="15" fill="rgb(251,67,27)" fg:x="2606" fg:w="3"/><text x="12.7207%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.4707%" y="1669" width="0.0144%" height="15" fill="rgb(222,95,40)" fg:x="2606" fg:w="3"/><text x="12.7207%" y="1679.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::end(enum2$ (11 samples, 0.05%)</title><rect x="12.4420%" y="1813" width="0.0526%" height="15" fill="rgb(250,35,16)" fg:x="2600" fg:w="11"/><text x="12.6920%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::end (11 samples, 0.05%)</title><rect x="12.4420%" y="1797" width="0.0526%" height="15" fill="rgb(224,86,44)" fg:x="2600" fg:w="11"/><text x="12.6920%" y="1807.50"></text></g><g><title>deno.exe`v8::data::Object::with_prototype_and_properties(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local&lt;v8::data::Name&gt; &gt; &gt;, ref$&lt;slice2$&lt;v8::handle::Local (10 samples, 0.05%)</title><rect x="12.4468%" y="1781" width="0.0479%" height="15" fill="rgb(237,53,53)" fg:x="2601" fg:w="10"/><text x="12.6968%" y="1791.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (10 samples, 0.05%)</title><rect x="12.4468%" y="1765" width="0.0479%" height="15" fill="rgb(208,171,33)" fg:x="2601" fg:w="10"/><text x="12.6968%" y="1775.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$46::serialize&lt;serde_v8::ser::Serializer&gt; (5 samples, 0.02%)</title><rect x="12.4994%" y="1781" width="0.0239%" height="15" fill="rgb(222,64,27)" fg:x="2612" fg:w="5"/><text x="12.7494%" y="1791.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_u64 (4 samples, 0.02%)</title><rect x="12.5042%" y="1765" width="0.0191%" height="15" fill="rgb(221,121,35)" fg:x="2613" fg:w="4"/><text x="12.7542%" y="1775.50"></text></g><g><title>deno.exe`v8::data::Number::new(v8::scope::HandleScope&lt;tuple$ (3 samples, 0.01%)</title><rect x="12.5090%" y="1749" width="0.0144%" height="15" fill="rgb(228,137,42)" fg:x="2614" fg:w="3"/><text x="12.7590%" y="1759.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (3 samples, 0.01%)</title><rect x="12.5090%" y="1733" width="0.0144%" height="15" fill="rgb(227,54,21)" fg:x="2614" fg:w="3"/><text x="12.7590%" y="1743.50"></text></g><g><title>deno.exe`v8::internal::StringHasher::HashSequentialString&lt;unsigned char&gt; (3 samples, 0.01%)</title><rect x="12.5473%" y="1653" width="0.0144%" height="15" fill="rgb(240,168,33)" fg:x="2622" fg:w="3"/><text x="12.7973%" y="1663.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$11::serialize_field&lt;u64&gt;(enum2$&lt;serde_v8::ser::StructSerializers&gt;*, ref$ (15 samples, 0.07%)</title><rect x="12.4946%" y="1813" width="0.0718%" height="15" fill="rgb(243,159,6)" fg:x="2611" fg:w="15"/><text x="12.7446%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$8::serialize_field&lt;u64&gt;(serde_v8::ser::ObjectSerializer*, ref$ (15 samples, 0.07%)</title><rect x="12.4946%" y="1797" width="0.0718%" height="15" fill="rgb(205,211,41)" fg:x="2611" fg:w="15"/><text x="12.7446%" y="1807.50"></text></g><g><title>deno.exe`serde_v8::keys::v8_struct_key(v8::scope::HandleScope&lt;v8::data::Context&gt;*, ref$ (9 samples, 0.04%)</title><rect x="12.5233%" y="1781" width="0.0431%" height="15" fill="rgb(253,30,1)" fg:x="2617" fg:w="9"/><text x="12.7733%" y="1791.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (9 samples, 0.04%)</title><rect x="12.5233%" y="1765" width="0.0431%" height="15" fill="rgb(226,80,18)" fg:x="2617" fg:w="9"/><text x="12.7733%" y="1775.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (7 samples, 0.03%)</title><rect x="12.5329%" y="1749" width="0.0335%" height="15" fill="rgb(253,156,46)" fg:x="2619" fg:w="7"/><text x="12.7829%" y="1759.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (6 samples, 0.03%)</title><rect x="12.5377%" y="1733" width="0.0287%" height="15" fill="rgb(248,87,27)" fg:x="2620" fg:w="6"/><text x="12.7877%" y="1743.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (5 samples, 0.02%)</title><rect x="12.5425%" y="1717" width="0.0239%" height="15" fill="rgb(227,122,2)" fg:x="2621" fg:w="5"/><text x="12.7925%" y="1727.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (5 samples, 0.02%)</title><rect x="12.5425%" y="1701" width="0.0239%" height="15" fill="rgb(229,94,39)" fg:x="2621" fg:w="5"/><text x="12.7925%" y="1711.50"></text></g><g><title>deno.exe`v8::internal::Factory::InternalizeUtf8String(v8::base::Vector (5 samples, 0.02%)</title><rect x="12.5425%" y="1685" width="0.0239%" height="15" fill="rgb(225,173,31)" fg:x="2621" fg:w="5"/><text x="12.7925%" y="1695.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::InternalizeString(v8::base::Vector (4 samples, 0.02%)</title><rect x="12.5473%" y="1669" width="0.0191%" height="15" fill="rgb(239,176,30)" fg:x="2622" fg:w="4"/><text x="12.7973%" y="1679.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$5::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1989" width="0.1436%" height="15" fill="rgb(212,104,21)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1999.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt;(serde_v8::ser::ArraySerializer*, alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1973" width="0.1436%" height="15" fill="rgb(240,209,40)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1983.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1957" width="0.1436%" height="15" fill="rgb(234,195,5)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1967.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1941" width="0.1436%" height="15" fill="rgb(238,213,1)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1951.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1925" width="0.1436%" height="15" fill="rgb(235,182,54)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1935.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;deno_core::ops_metrics::OpMetrics&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1909" width="0.1436%" height="15" fill="rgb(229,50,46)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1919.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (30 samples, 0.14%)</title><rect x="12.4420%" y="1893" width="0.1436%" height="15" fill="rgb(219,145,13)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1903.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (30 samples, 0.14%)</title><rect x="12.4420%" y="1877" width="0.1436%" height="15" fill="rgb(220,226,10)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1887.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;deno_core::ops_metrics::OpMetrics&gt; &gt; (30 samples, 0.14%)</title><rect x="12.4420%" y="1861" width="0.1436%" height="15" fill="rgb(248,47,30)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1871.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;deno_core::ops_metrics::OpMetrics,serde_v8::ser::Serializer&gt; (30 samples, 0.14%)</title><rect x="12.4420%" y="1845" width="0.1436%" height="15" fill="rgb(231,209,44)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1855.50"></text></g><g><title>deno.exe`deno_core::ops_metrics::_::impl$0::serialize&lt;serde_v8::ser::Serializer&gt; (30 samples, 0.14%)</title><rect x="12.4420%" y="1829" width="0.1436%" height="15" fill="rgb(209,80,30)" fg:x="2600" fg:w="30"/><text x="12.6920%" y="1839.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_struct(serde_v8::ser::Serializer, ref$ (4 samples, 0.02%)</title><rect x="12.5664%" y="1813" width="0.0191%" height="15" fill="rgb(232,9,14)" fg:x="2626" fg:w="4"/><text x="12.8164%" y="1823.50"></text></g><g><title>deno.exe`deno_core::ops_builtin::op_metrics::v8_fn_ptr (31 samples, 0.15%)</title><rect x="12.4420%" y="2053" width="0.1483%" height="15" fill="rgb(243,91,43)" fg:x="2600" fg:w="31"/><text x="12.6920%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (31 samples, 0.15%)</title><rect x="12.4420%" y="2037" width="0.1483%" height="15" fill="rgb(231,90,52)" fg:x="2600" fg:w="31"/><text x="12.6920%" y="2047.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt; &gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (31 samples, 0.15%)</title><rect x="12.4420%" y="2021" width="0.1483%" height="15" fill="rgb(253,192,44)" fg:x="2600" fg:w="31"/><text x="12.6920%" y="2031.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$91::serialize&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec&lt;deno_core::ops_metrics::OpMetrics,alloc::alloc::Global&gt;,serde_v8::ser::Serializer&gt;(tuple$&lt;deno_core::ops_metrics::OpMetrics,alloc::vec::Vec (31 samples, 0.15%)</title><rect x="12.4420%" y="2005" width="0.1483%" height="15" fill="rgb(241,66,31)" fg:x="2600" fg:w="31"/><text x="12.6920%" y="2015.50"></text></g><g><title>deno.exe`v8::data::String::new(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$ (4 samples, 0.02%)</title><rect x="12.5951%" y="1845" width="0.0191%" height="15" fill="rgb(235,81,37)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1855.50"></text></g><g><title>deno.exe`v8::data::String::new_from_utf8(v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;*, ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="12.5951%" y="1829" width="0.0191%" height="15" fill="rgb(223,221,9)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1839.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (4 samples, 0.02%)</title><rect x="12.5951%" y="1813" width="0.0191%" height="15" fill="rgb(242,180,7)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1823.50"></text></g><g><title>deno.exe`v8::string::impl$1::new_from_utf8::closure$0 (4 samples, 0.02%)</title><rect x="12.5951%" y="1797" width="0.0191%" height="15" fill="rgb(243,78,19)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1807.50"></text></g><g><title>deno.exe`v8__String__NewFromUtf8(v8::Isolate*, char const*, v8::NewStringType, int) (4 samples, 0.02%)</title><rect x="12.5951%" y="1781" width="0.0191%" height="15" fill="rgb(233,23,17)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1791.50"></text></g><g><title>deno.exe`v8::String::NewFromUtf8 (4 samples, 0.02%)</title><rect x="12.5951%" y="1765" width="0.0191%" height="15" fill="rgb(252,122,45)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1775.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewStringFromUtf8(v8::base::Vector (4 samples, 0.02%)</title><rect x="12.5951%" y="1749" width="0.0191%" height="15" fill="rgb(247,108,20)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1759.50"></text></g><g><title>deno.exe`v8::internal::Factory::NewStringFromUtf8(v8::base::Vector (4 samples, 0.02%)</title><rect x="12.5951%" y="1733" width="0.0191%" height="15" fill="rgb(235,84,21)" fg:x="2632" fg:w="4"/><text x="12.8451%" y="1743.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (37 samples, 0.18%)</title><rect x="12.4420%" y="2069" width="0.1771%" height="15" fill="rgb(247,129,10)" fg:x="2600" fg:w="37"/><text x="12.6920%" y="2079.50"></text></g><g><title>deno.exe`deno_core::ops_builtin_v8::op_op_names::v8_fn_ptr (6 samples, 0.03%)</title><rect x="12.5903%" y="2053" width="0.0287%" height="15" fill="rgb(208,173,14)" fg:x="2631" fg:w="6"/><text x="12.8403%" y="2063.50"></text></g><g><title>deno.exe`deno_core::runtime::ops::serde_rust_to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="2037" width="0.0239%" height="15" fill="rgb(236,31,38)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="2047.50"></text></g><g><title>deno.exe`serde_v8::ser::to_v8&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="2021" width="0.0239%" height="15" fill="rgb(232,65,17)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="2031.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$88::serialize&lt;alloc::string::String,serde_v8::ser::Serializer&gt;(alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="2005" width="0.0239%" height="15" fill="rgb(224,45,49)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="2015.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;(serde_v8::ser::Serializer, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="1989" width="0.0239%" height="15" fill="rgb(225,2,53)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1999.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each&lt;core::slice::iter::Iter&lt;alloc::string::String&gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;alloc::string::String&gt;*, serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="1973" width="0.0239%" height="15" fill="rgb(248,210,53)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1983.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::slice::iter::Iter&lt;alloc::string::String&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt; &gt;(core::slice::iter::Iter&lt;alloc::string::String&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="1957" width="0.0239%" height="15" fill="rgb(211,1,30)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1967.50"></text></g><g><title>deno.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt; &gt;(core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;serde_v8::error::Error&gt; &gt; &gt;,serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt; &gt;*, tuple$ (5 samples, 0.02%)</title><rect x="12.5951%" y="1941" width="0.0239%" height="15" fill="rgb(224,96,15)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1951.50"></text></g><g><title>deno.exe`serde::ser::Serializer::collect_seq::closure$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;(serde::ser::Serializer::collect_seq::closure_env$0&lt;serde_v8::ser::Serializer,ref$&lt;alloc::vec::Vec (5 samples, 0.02%)</title><rect x="12.5951%" y="1925" width="0.0239%" height="15" fill="rgb(252,45,11)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1935.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$4::serialize_element&lt;ref$&lt;alloc::string::String&gt; &gt; (5 samples, 0.02%)</title><rect x="12.5951%" y="1909" width="0.0239%" height="15" fill="rgb(220,125,38)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1919.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$108::serialize&lt;alloc::string::String,serde_v8::ser::Serializer&gt; (5 samples, 0.02%)</title><rect x="12.5951%" y="1893" width="0.0239%" height="15" fill="rgb(243,161,33)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1903.50"></text></g><g><title>deno.exe`serde::ser::impls::impl$1::serialize&lt;serde_v8::ser::Serializer&gt; (5 samples, 0.02%)</title><rect x="12.5951%" y="1877" width="0.0239%" height="15" fill="rgb(248,197,34)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1887.50"></text></g><g><title>deno.exe`serde_v8::ser::impl$15::serialize_str(serde_v8::ser::Serializer, ref$ (5 samples, 0.02%)</title><rect x="12.5951%" y="1861" width="0.0239%" height="15" fill="rgb(228,165,23)" fg:x="2632" fg:w="5"/><text x="12.8451%" y="1871.50"></text></g><g><title>`0x7FFA9F7D5EF2 (3 samples, 0.01%)</title><rect x="12.6382%" y="1829" width="0.0144%" height="15" fill="rgb(236,94,38)" fg:x="2641" fg:w="3"/><text x="12.8882%" y="1839.50"></text></g><g><title>`0x7FFAA21BA24A (3 samples, 0.01%)</title><rect x="12.6382%" y="1813" width="0.0144%" height="15" fill="rgb(220,13,23)" fg:x="2641" fg:w="3"/><text x="12.8882%" y="1823.50"></text></g><g><title>`0x7FFAA21A8C9C (3 samples, 0.01%)</title><rect x="12.6382%" y="1797" width="0.0144%" height="15" fill="rgb(234,26,39)" fg:x="2641" fg:w="3"/><text x="12.8882%" y="1807.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::call&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (4 samples, 0.02%)</title><rect x="12.6382%" y="1877" width="0.0191%" height="15" fill="rgb(205,117,44)" fg:x="2641" fg:w="4"/><text x="12.8882%" y="1887.50"></text></g><g><title>deno.exe`dlopen::raw::common::Library::open&lt;ref$&lt;alloc::string::String&gt; &gt; (4 samples, 0.02%)</title><rect x="12.6382%" y="1861" width="0.0191%" height="15" fill="rgb(250,42,2)" fg:x="2641" fg:w="4"/><text x="12.8882%" y="1871.50"></text></g><g><title>deno.exe`dlopen::raw::windows::open_lib(ref$ (4 samples, 0.02%)</title><rect x="12.6382%" y="1845" width="0.0191%" height="15" fill="rgb(223,83,14)" fg:x="2641" fg:w="4"/><text x="12.8882%" y="1855.50"></text></g><g><title>`0x7FF7E004CA8E (5 samples, 0.02%)</title><rect x="12.6382%" y="1941" width="0.0239%" height="15" fill="rgb(241,147,50)" fg:x="2641" fg:w="5"/><text x="12.8882%" y="1951.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (5 samples, 0.02%)</title><rect x="12.6382%" y="1925" width="0.0239%" height="15" fill="rgb(218,90,6)" fg:x="2641" fg:w="5"/><text x="12.8882%" y="1935.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_fn_ptr&lt;deno_runtime::permissions::PermissionsContainer&gt; (5 samples, 0.02%)</title><rect x="12.6382%" y="1909" width="0.0239%" height="15" fill="rgb(210,191,5)" fg:x="2641" fg:w="5"/><text x="12.8882%" y="1919.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_func&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (5 samples, 0.02%)</title><rect x="12.6382%" y="1893" width="0.0239%" height="15" fill="rgb(225,139,19)" fg:x="2641" fg:w="5"/><text x="12.8882%" y="1903.50"></text></g><g><title>`0x7FFAA21A0AEE (3 samples, 0.01%)</title><rect x="12.6669%" y="1749" width="0.0144%" height="15" fill="rgb(210,1,33)" fg:x="2647" fg:w="3"/><text x="12.9169%" y="1759.50"></text></g><g><title>`0x7FFAA21BDB41 (3 samples, 0.01%)</title><rect x="12.6669%" y="1733" width="0.0144%" height="15" fill="rgb(213,50,3)" fg:x="2647" fg:w="3"/><text x="12.9169%" y="1743.50"></text></g><g><title>`0x7FFAA21BA3F7 (3 samples, 0.01%)</title><rect x="12.6669%" y="1717" width="0.0144%" height="15" fill="rgb(234,227,4)" fg:x="2647" fg:w="3"/><text x="12.9169%" y="1727.50"></text></g><g><title>`0x7FFAA21BAC39 (3 samples, 0.01%)</title><rect x="12.6669%" y="1701" width="0.0144%" height="15" fill="rgb(246,63,5)" fg:x="2647" fg:w="3"/><text x="12.9169%" y="1711.50"></text></g><g><title>`0x7FFAA222F4F4 (3 samples, 0.01%)</title><rect x="12.6669%" y="1685" width="0.0144%" height="15" fill="rgb(245,136,27)" fg:x="2647" fg:w="3"/><text x="12.9169%" y="1695.50"></text></g><g><title>`0x7FFAA21B88C4 (7 samples, 0.03%)</title><rect x="12.6669%" y="1781" width="0.0335%" height="15" fill="rgb(247,199,27)" fg:x="2647" fg:w="7"/><text x="12.9169%" y="1791.50"></text></g><g><title>`0x7FFAA21A0F80 (7 samples, 0.03%)</title><rect x="12.6669%" y="1765" width="0.0335%" height="15" fill="rgb(252,158,49)" fg:x="2647" fg:w="7"/><text x="12.9169%" y="1775.50"></text></g><g><title>`0x7FFAA21A0BB8 (4 samples, 0.02%)</title><rect x="12.6812%" y="1749" width="0.0191%" height="15" fill="rgb(254,73,1)" fg:x="2650" fg:w="4"/><text x="12.9312%" y="1759.50"></text></g><g><title>`0x7FFAA21B88D0 (3 samples, 0.01%)</title><rect x="12.7004%" y="1781" width="0.0144%" height="15" fill="rgb(248,93,19)" fg:x="2654" fg:w="3"/><text x="12.9504%" y="1791.50"></text></g><g><title>`0x7FFAA21BA090 (3 samples, 0.01%)</title><rect x="12.7004%" y="1765" width="0.0144%" height="15" fill="rgb(206,67,5)" fg:x="2654" fg:w="3"/><text x="12.9504%" y="1775.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::call&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (12 samples, 0.06%)</title><rect x="12.6621%" y="1877" width="0.0574%" height="15" fill="rgb(209,210,4)" fg:x="2646" fg:w="12"/><text x="12.9121%" y="1887.50"></text></g><g><title>deno.exe`dlopen::raw::common::Library::open&lt;ref$&lt;alloc::string::String&gt; &gt; (11 samples, 0.05%)</title><rect x="12.6669%" y="1861" width="0.0526%" height="15" fill="rgb(214,185,36)" fg:x="2647" fg:w="11"/><text x="12.9169%" y="1871.50"></text></g><g><title>deno.exe`dlopen::raw::windows::open_lib(ref$ (11 samples, 0.05%)</title><rect x="12.6669%" y="1845" width="0.0526%" height="15" fill="rgb(233,191,26)" fg:x="2647" fg:w="11"/><text x="12.9169%" y="1855.50"></text></g><g><title>`0x7FFA9F7D5EF2 (11 samples, 0.05%)</title><rect x="12.6669%" y="1829" width="0.0526%" height="15" fill="rgb(248,94,17)" fg:x="2647" fg:w="11"/><text x="12.9169%" y="1839.50"></text></g><g><title>`0x7FFAA21BA24A (11 samples, 0.05%)</title><rect x="12.6669%" y="1813" width="0.0526%" height="15" fill="rgb(250,64,4)" fg:x="2647" fg:w="11"/><text x="12.9169%" y="1823.50"></text></g><g><title>`0x7FFAA21A8C9C (11 samples, 0.05%)</title><rect x="12.6669%" y="1797" width="0.0526%" height="15" fill="rgb(218,41,53)" fg:x="2647" fg:w="11"/><text x="12.9169%" y="1807.50"></text></g><g><title>deno.exe`Builtins_CallApiCallbackGeneric (16 samples, 0.08%)</title><rect x="12.6621%" y="1925" width="0.0766%" height="15" fill="rgb(251,176,28)" fg:x="2646" fg:w="16"/><text x="12.9121%" y="1935.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_fn_ptr&lt;deno_runtime::permissions::PermissionsContainer&gt; (16 samples, 0.08%)</title><rect x="12.6621%" y="1909" width="0.0766%" height="15" fill="rgb(247,22,9)" fg:x="2646" fg:w="16"/><text x="12.9121%" y="1919.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::op_ffi_load&lt;deno_runtime::permissions::PermissionsContainer&gt;::v8_func&lt;deno_runtime::permissions::PermissionsContainer&gt;(v8::scope::HandleScope (16 samples, 0.08%)</title><rect x="12.6621%" y="1893" width="0.0766%" height="15" fill="rgb(218,201,14)" fg:x="2646" fg:w="16"/><text x="12.9121%" y="1903.50"></text></g><g><title>deno.exe`serde_v8::de::from_v8&lt;deno_ffi::dlfcn::FfiLoadArgs&gt;(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local (4 samples, 0.02%)</title><rect x="12.7195%" y="1877" width="0.0191%" height="15" fill="rgb(218,94,10)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1887.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::_::impl$0::deserialize&lt;ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (4 samples, 0.02%)</title><rect x="12.7195%" y="1861" width="0.0191%" height="15" fill="rgb(222,183,52)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1871.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_struct&lt;deno_ffi::dlfcn::_::impl$0::deserialize::__Visitor&gt;(serde_v8::de::Deserializer*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (4 samples, 0.02%)</title><rect x="12.7195%" y="1845" width="0.0191%" height="15" fill="rgb(242,140,25)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1855.50"></text></g><g><title>deno.exe`deno_ffi::dlfcn::_::impl$0::deserialize::impl$2::visit_map&lt;serde_v8::de::StructAccess&gt; (4 samples, 0.02%)</title><rect x="12.7195%" y="1829" width="0.0191%" height="15" fill="rgb(235,197,38)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1839.50"></text></g><g><title>deno.exe`serde::de::MapAccess::next_value&lt;serde_v8::de::StructAccess,std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt; (4 samples, 0.02%)</title><rect x="12.7195%" y="1813" width="0.0191%" height="15" fill="rgb(237,136,15)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1823.50"></text></g><g><title>deno.exe`serde_v8::de::impl$5::next_value_seed&lt;core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt; &gt;(serde_v8::de::StructAccess*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (4 samples, 0.02%)</title><rect x="12.7195%" y="1797" width="0.0191%" height="15" fill="rgb(223,44,49)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1807.50"></text></g><g><title>deno.exe`serde::de::impl$5::deserialize&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt;,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt;(core::marker::PhantomData&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (4 samples, 0.02%)</title><rect x="12.7195%" y="1781" width="0.0191%" height="15" fill="rgb(227,71,15)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1791.50"></text></g><g><title>deno.exe`serde::de::impls::impl$192::deserialize&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState,ref_mut$&lt;serde_v8::de::Deserializer&gt; &gt; (4 samples, 0.02%)</title><rect x="12.7195%" y="1765" width="0.0191%" height="15" fill="rgb(225,153,20)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1775.50"></text></g><g><title>deno.exe`serde_v8::de::impl$1::deserialize_map&lt;serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState&gt; &gt;(serde_v8::de::Deserializer*, serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,enum2$ (4 samples, 0.02%)</title><rect x="12.7195%" y="1749" width="0.0191%" height="15" fill="rgb(210,190,26)" fg:x="2658" fg:w="4"/><text x="12.9695%" y="1759.50"></text></g><g><title>deno.exe`serde::de::impls::impl$192::deserialize::impl$0::visit_map&lt;alloc::string::String,enum2$&lt;deno_ffi::dlfcn::ForeignSymbol&gt;,std::collections::hash::map::RandomState,serde_v8::de::MapObjectAccess&gt;(serde::de::impls::impl$192::deserialize::MapVisitor&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="12.7243%" y="1733" width="0.0144%" height="15" fill="rgb(223,147,5)" fg:x="2659" fg:w="3"/><text x="12.9743%" y="1743.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (22 samples, 0.11%)</title><rect x="12.6382%" y="2053" width="0.1053%" height="15" fill="rgb(207,14,23)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (22 samples, 0.11%)</title><rect x="12.6382%" y="2037" width="0.1053%" height="15" fill="rgb(211,195,53)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="2047.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="12.6382%" y="2021" width="0.1053%" height="15" fill="rgb(237,75,46)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="2031.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="12.6382%" y="2005" width="0.1053%" height="15" fill="rgb(254,55,14)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="2015.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (22 samples, 0.11%)</title><rect x="12.6382%" y="1989" width="0.1053%" height="15" fill="rgb(230,185,30)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="1999.50"></text></g><g><title>deno.exe`Builtins_ConstructHandler (22 samples, 0.11%)</title><rect x="12.6382%" y="1973" width="0.1053%" height="15" fill="rgb(220,14,11)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="1983.50"></text></g><g><title>deno.exe`Builtins_InterpreterPushArgsThenFastConstructFunction (22 samples, 0.11%)</title><rect x="12.6382%" y="1957" width="0.1053%" height="15" fill="rgb(215,169,44)" fg:x="2641" fg:w="22"/><text x="12.8882%" y="1967.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (17 samples, 0.08%)</title><rect x="12.6621%" y="1941" width="0.0814%" height="15" fill="rgb(253,203,20)" fg:x="2646" fg:w="17"/><text x="12.9121%" y="1951.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (29 samples, 0.14%)</title><rect x="12.6286%" y="2069" width="0.1388%" height="15" fill="rgb(229,225,17)" fg:x="2639" fg:w="29"/><text x="12.8786%" y="2079.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (5 samples, 0.02%)</title><rect x="12.7435%" y="2053" width="0.0239%" height="15" fill="rgb(236,76,26)" fg:x="2663" fg:w="5"/><text x="12.9935%" y="2063.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (3 samples, 0.01%)</title><rect x="12.7530%" y="2037" width="0.0144%" height="15" fill="rgb(234,15,30)" fg:x="2665" fg:w="3"/><text x="13.0030%" y="2047.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::ApplyTransitionToDataProperty(v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7722%" y="1957" width="0.0144%" height="15" fill="rgb(211,113,48)" fg:x="2669" fg:w="3"/><text x="13.0222%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::JSObject::MigrateToMap(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSObject&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7722%" y="1941" width="0.0144%" height="15" fill="rgb(221,31,36)" fg:x="2669" fg:w="3"/><text x="13.0222%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Factory::CopyPropertyArrayAndGrow(v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7722%" y="1925" width="0.0144%" height="15" fill="rgb(215,118,52)" fg:x="2669" fg:w="3"/><text x="13.0222%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Factory::CopyArrayAndGrow&lt;v8::internal::PropertyArray&gt;(v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7722%" y="1909" width="0.0144%" height="15" fill="rgb(241,151,27)" fg:x="2669" fg:w="3"/><text x="13.0222%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Map::ConnectTransition(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7913%" y="1877" width="0.0144%" height="15" fill="rgb(253,51,3)" fg:x="2673" fg:w="3"/><text x="13.0413%" y="1887.50"></text></g><g><title>deno.exe`v8::internal::TransitionsAccessor::Insert(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (3 samples, 0.01%)</title><rect x="12.7913%" y="1861" width="0.0144%" height="15" fill="rgb(216,201,24)" fg:x="2673" fg:w="3"/><text x="13.0413%" y="1871.50"></text></g><g><title>deno.exe`v8::internal::Map::SetBackPointer (3 samples, 0.01%)</title><rect x="12.7913%" y="1845" width="0.0144%" height="15" fill="rgb(231,107,4)" fg:x="2673" fg:w="3"/><text x="13.0413%" y="1855.50"></text></g><g><title>deno.exe`v8::internal::JSReceiver::CreateDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::Maybe (8 samples, 0.04%)</title><rect x="12.7722%" y="2021" width="0.0383%" height="15" fill="rgb(243,97,54)" fg:x="2669" fg:w="8"/><text x="13.0222%" y="2031.50"></text></g><g><title>deno.exe`v8::internal::JSObject::DefineOwnPropertyIgnoreAttributes(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (8 samples, 0.04%)</title><rect x="12.7722%" y="2005" width="0.0383%" height="15" fill="rgb(221,32,51)" fg:x="2669" fg:w="8"/><text x="13.0222%" y="2015.50"></text></g><g><title>deno.exe`v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (8 samples, 0.04%)</title><rect x="12.7722%" y="1989" width="0.0383%" height="15" fill="rgb(218,171,35)" fg:x="2669" fg:w="8"/><text x="13.0222%" y="1999.50"></text></g><g><title>deno.exe`v8::internal::Object::TransitionAndWriteDataProperty(v8::internal::LookupIterator*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyAttributes, v8::Maybe (8 samples, 0.04%)</title><rect x="12.7722%" y="1973" width="0.0383%" height="15" fill="rgb(214,20,53)" fg:x="2669" fg:w="8"/><text x="13.0222%" y="1983.50"></text></g><g><title>deno.exe`v8::internal::LookupIterator::PrepareTransitionToDataProperty(v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.7865%" y="1957" width="0.0239%" height="15" fill="rgb(239,9,52)" fg:x="2672" fg:w="5"/><text x="13.0365%" y="1967.50"></text></g><g><title>deno.exe`v8::internal::Map::TransitionToDataProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.7865%" y="1941" width="0.0239%" height="15" fill="rgb(215,114,45)" fg:x="2672" fg:w="5"/><text x="13.0365%" y="1951.50"></text></g><g><title>deno.exe`v8::internal::Map::CopyWithField(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle&lt;v8::internal::Name&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.7865%" y="1925" width="0.0239%" height="15" fill="rgb(208,118,9)" fg:x="2672" fg:w="5"/><text x="13.0365%" y="1935.50"></text></g><g><title>deno.exe`v8::internal::Map::CopyAddDescriptor(v8::internal::Isolate*, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.7865%" y="1909" width="0.0239%" height="15" fill="rgb(235,7,39)" fg:x="2672" fg:w="5"/><text x="13.0365%" y="1919.50"></text></g><g><title>deno.exe`v8::internal::Map::ShareDescriptor(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Map&gt;, v8::internal::Handle (5 samples, 0.02%)</title><rect x="12.7865%" y="1893" width="0.0239%" height="15" fill="rgb(243,225,15)" fg:x="2672" fg:w="5"/><text x="13.0365%" y="1903.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (79 samples, 0.38%)</title><rect x="12.4420%" y="2101" width="0.3780%" height="15" fill="rgb(225,216,18)" fg:x="2600" fg:w="79"/><text x="12.6920%" y="2111.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (79 samples, 0.38%)</title><rect x="12.4420%" y="2085" width="0.3780%" height="15" fill="rgb(233,36,38)" fg:x="2600" fg:w="79"/><text x="12.6920%" y="2095.50"></text></g><g><title>deno.exe`Builtins_ObjectFromEntries (11 samples, 0.05%)</title><rect x="12.7674%" y="2069" width="0.0526%" height="15" fill="rgb(239,88,23)" fg:x="2668" fg:w="11"/><text x="13.0174%" y="2079.50"></text></g><g><title>deno.exe`Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit (10 samples, 0.05%)</title><rect x="12.7722%" y="2053" width="0.0479%" height="15" fill="rgb(219,181,35)" fg:x="2669" fg:w="10"/><text x="13.0222%" y="2063.50"></text></g><g><title>deno.exe`v8::internal::Runtime_CreateDataProperty (10 samples, 0.05%)</title><rect x="12.7722%" y="2037" width="0.0479%" height="15" fill="rgb(215,18,46)" fg:x="2669" fg:w="10"/><text x="13.0222%" y="2047.50"></text></g><g><title>deno.exe`deno_core::runtime::jsruntime::impl$13::call_and_await::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (293 samples, 1.40%)</title><rect x="11.4227%" y="2309" width="1.4021%" height="15" fill="rgb(241,38,11)" fg:x="2387" fg:w="293"/><text x="11.6727%" y="2319.50"></text></g><g><title>deno.exe`v8::data::Function::call(v8::scope::HandleScope&lt;v8::data::Context&gt;*, v8::handle::Local&lt;v8::data::Value&gt;, ref$&lt;slice2$&lt;v8::handle::Local (157 samples, 0.75%)</title><rect x="12.0735%" y="2293" width="0.7513%" height="15" fill="rgb(248,169,45)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2303.50"></text></g><g><title>deno.exe`v8::scope::HandleScope&lt;tuple$&lt;&gt; &gt;::cast_local (157 samples, 0.75%)</title><rect x="12.0735%" y="2277" width="0.7513%" height="15" fill="rgb(239,50,49)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2287.50"></text></g><g><title>deno.exe`v8::function::impl$17::call::closure$0 (157 samples, 0.75%)</title><rect x="12.0735%" y="2261" width="0.7513%" height="15" fill="rgb(231,96,31)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2271.50"></text></g><g><title>deno.exe`v8__Function__Call(v8::Function const&amp;, v8::Context const&amp;, v8::Value const&amp;, int, v8::Value const* const*) (157 samples, 0.75%)</title><rect x="12.0735%" y="2245" width="0.7513%" height="15" fill="rgb(224,193,37)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2255.50"></text></g><g><title>deno.exe`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (157 samples, 0.75%)</title><rect x="12.0735%" y="2229" width="0.7513%" height="15" fill="rgb(227,153,50)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2239.50"></text></g><g><title>deno.exe`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (157 samples, 0.75%)</title><rect x="12.0735%" y="2213" width="0.7513%" height="15" fill="rgb(249,228,3)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2223.50"></text></g><g><title>deno.exe`v8::internal::`anonymous namespace&apos;::Invoke (157 samples, 0.75%)</title><rect x="12.0735%" y="2197" width="0.7513%" height="15" fill="rgb(219,164,43)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2207.50"></text></g><g><title>deno.exe`Builtins_JSEntry (157 samples, 0.75%)</title><rect x="12.0735%" y="2181" width="0.7513%" height="15" fill="rgb(216,45,41)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2191.50"></text></g><g><title>deno.exe`Builtins_JSEntryTrampoline (157 samples, 0.75%)</title><rect x="12.0735%" y="2165" width="0.7513%" height="15" fill="rgb(210,226,51)" fg:x="2523" fg:w="157"/><text x="12.3235%" y="2175.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (156 samples, 0.75%)</title><rect x="12.0783%" y="2149" width="0.7465%" height="15" fill="rgb(209,117,49)" fg:x="2524" fg:w="156"/><text x="12.3283%" y="2159.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (156 samples, 0.75%)</title><rect x="12.0783%" y="2133" width="0.7465%" height="15" fill="rgb(206,196,24)" fg:x="2524" fg:w="156"/><text x="12.3283%" y="2143.50"></text></g><g><title>deno.exe`Builtins_InterpreterEntryTrampoline (81 samples, 0.39%)</title><rect x="12.4372%" y="2117" width="0.3876%" height="15" fill="rgb(253,218,3)" fg:x="2599" fg:w="81"/><text x="12.6872%" y="2127.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(core::ptr::non_null::NonNull (829 samples, 3.97%)</title><rect x="8.8769%" y="2565" width="3.9671%" height="15" fill="rgb(252,166,2)" fg:x="1855" fg:w="829"/><text x="9.1269%" y="2575.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2549" width="3.9623%" height="15" fill="rgb(236,218,26)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2559.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll_inner&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (828 samples, 3.96%)</title><rect x="8.8817%" y="2533" width="3.9623%" height="15" fill="rgb(254,84,19)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2543.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2517" width="3.9623%" height="15" fill="rgb(219,137,29)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2527.50">deno..</text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2501" width="3.9623%" height="15" fill="rgb(227,47,52)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2511.50">deno..</text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2485" width="3.9623%" height="15" fill="rgb(229,167,24)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2495.50">deno..</text></g><g><title>deno.exe`Unknown (828 samples, 3.96%)</title><rect x="8.8817%" y="2469" width="3.9623%" height="15" fill="rgb(233,164,1)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2479.50">deno..</text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (828 samples, 3.96%)</title><rect x="8.8817%" y="2453" width="3.9623%" height="15" fill="rgb(218,88,48)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2463.50">deno..</text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2437" width="3.9623%" height="15" fill="rgb(226,214,24)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2447.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2421" width="3.9623%" height="15" fill="rgb(233,29,12)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2431.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; (828 samples, 3.96%)</title><rect x="8.8817%" y="2405" width="3.9623%" height="15" fill="rgb(219,120,34)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2415.50">deno..</text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc (828 samples, 3.96%)</title><rect x="8.8817%" y="2389" width="3.9623%" height="15" fill="rgb(226,78,44)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2399.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (828 samples, 3.96%)</title><rect x="8.8817%" y="2373" width="3.9623%" height="15" fill="rgb(240,15,48)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2383.50">deno..</text></g><g><title>deno.exe`core::future::future::impl$1::poll&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;,alloc::alloc::Global&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (828 samples, 3.96%)</title><rect x="8.8817%" y="2357" width="3.9623%" height="15" fill="rgb(253,176,7)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2367.50">deno..</text></g><g><title>deno.exe`deno_core::task::impl$6::poll&lt;enum2$&lt;deno::tools::test::test_specifier::async_fn_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;deno_core::task::MaskFutureAsSend&lt;enum2$ (828 samples, 3.96%)</title><rect x="8.8817%" y="2341" width="3.9623%" height="15" fill="rgb(206,166,28)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2351.50">deno..</text></g><g><title>deno.exe`deno::tools::test::test_specifier::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (828 samples, 3.96%)</title><rect x="8.8817%" y="2325" width="3.9623%" height="15" fill="rgb(241,53,51)" fg:x="1856" fg:w="828"/><text x="9.1317%" y="2335.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::run_task&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2693" width="3.9862%" height="15" fill="rgb(249,112,30)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2703.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::Context::enter&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Core*, tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2677" width="3.9862%" height="15" fill="rgb(217,85,30)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2687.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$3::run_task::closure$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$3::run_task::closure_env$0&lt;tuple$&lt;&gt;,tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2661" width="3.9862%" height="15" fill="rgb(233,49,7)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2671.50">deno..</text></g><g><title>deno.exe`tokio::runtime::coop::budget(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2645" width="3.9862%" height="15" fill="rgb(234,109,9)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2655.50">deno..</text></g><g><title>deno.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2629" width="3.9862%" height="15" fill="rgb(253,95,22)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2639.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0::closure_env$3&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (833 samples, 3.99%)</title><rect x="8.8769%" y="2613" width="3.9862%" height="15" fill="rgb(233,176,25)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2623.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::LocalNotified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::run&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::LocalNotified&lt;alloc::sync::Arc (833 samples, 3.99%)</title><rect x="8.8769%" y="2597" width="3.9862%" height="15" fill="rgb(236,33,39)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2607.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::raw::RawTask::poll (833 samples, 3.99%)</title><rect x="8.8769%" y="2581" width="3.9862%" height="15" fill="rgb(223,226,42)" fg:x="1855" fg:w="833"/><text x="9.1269%" y="2591.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;deno_core::task::MaskFutureAsSend&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;i32,u16,enum2$&lt;deno_core::ops::OpResult&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(core::ptr::non_null::NonNull (4 samples, 0.02%)</title><rect x="12.8439%" y="2565" width="0.0191%" height="15" fill="rgb(216,99,33)" fg:x="2684" fg:w="4"/><text x="13.0939%" y="2575.50"></text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;deno_core::task::MaskFutureAsSend&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;i32,u16,enum2$&lt;deno_core::ops::OpResult&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;::poll&lt;deno_core::task::MaskFutureAsSend&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;i32,u16,enum2$&lt;deno_core::ops::OpResult&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt; &gt;(tokio::runtime::task::harness::Harness&lt;deno_core::task::MaskFutureAsSend&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn$&lt;core::future::future::Future&lt;assoc$&lt;Output,tuple$&lt;i32,u16,enum2$&lt;deno_core::ops::OpResult&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;,alloc::sync::Arc (4 samples, 0.02%)</title><rect x="12.8439%" y="2549" width="0.0191%" height="15" fill="rgb(235,84,23)" fg:x="2684" fg:w="4"/><text x="13.0939%" y="2559.50"></text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(core::ptr::non_null::NonNull (839 samples, 4.01%)</title><rect x="8.8529%" y="3093" width="4.0149%" height="15" fill="rgb(232,2,27)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3103.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="3077" width="4.0149%" height="15" fill="rgb(241,23,22)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3087.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (839 samples, 4.01%)</title><rect x="8.8529%" y="3061" width="4.0149%" height="15" fill="rgb(211,73,27)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3071.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="3045" width="4.0149%" height="15" fill="rgb(235,109,49)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3055.50">deno..</text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="3029" width="4.0149%" height="15" fill="rgb(230,99,29)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3039.50">deno..</text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="3013" width="4.0149%" height="15" fill="rgb(245,199,7)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3023.50">deno..</text></g><g><title>deno.exe`Unknown (839 samples, 4.01%)</title><rect x="8.8529%" y="2997" width="4.0149%" height="15" fill="rgb(217,179,10)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="3007.50">deno..</text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (839 samples, 4.01%)</title><rect x="8.8529%" y="2981" width="4.0149%" height="15" fill="rgb(254,99,47)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2991.50">deno..</text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2965" width="4.0149%" height="15" fill="rgb(251,121,7)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2975.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2949" width="4.0149%" height="15" fill="rgb(250,177,26)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2959.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (839 samples, 4.01%)</title><rect x="8.8529%" y="2933" width="4.0149%" height="15" fill="rgb(232,88,15)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2943.50">deno..</text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2917" width="4.0149%" height="15" fill="rgb(251,54,54)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2927.50">deno..</text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2901" width="4.0149%" height="15" fill="rgb(208,177,15)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2911.50">deno..</text></g><g><title>deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2885" width="4.0149%" height="15" fill="rgb(205,97,32)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2895.50">deno..</text></g><g><title>deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;(deno_core::task::spawn_blocking::closure_env$0&lt;deno::tools::test::test_specifiers::async_fn$0::closure$1::closure_env$0,enum2$&lt;core::result::Result&lt;tuple$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2869" width="4.0149%" height="15" fill="rgb(217,192,13)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2879.50">deno..</text></g><g><title>deno.exe`deno::tools::test::test_specifiers::async_fn$0::closure$1::closure$0 (839 samples, 4.01%)</title><rect x="8.8529%" y="2853" width="4.0149%" height="15" fill="rgb(215,163,41)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2863.50">deno..</text></g><g><title>deno.exe`deno_runtime::tokio_util::create_and_run_current_thread(enum2$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2837" width="4.0149%" height="15" fill="rgb(246,83,29)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2847.50">deno..</text></g><g><title>deno.exe`deno_runtime::tokio_util::create_and_run_current_thread_inner(enum2$ (839 samples, 4.01%)</title><rect x="8.8529%" y="2821" width="4.0149%" height="15" fill="rgb(219,2,45)" fg:x="1850" fg:w="839"/><text x="9.1029%" y="2831.50">deno..</text></g><g><title>deno.exe`tokio::runtime::runtime::Runtime::block_on&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;(tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2805" width="4.0054%" height="15" fill="rgb(242,215,33)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2815.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CurrentThread::block_on&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2789" width="4.0054%" height="15" fill="rgb(217,1,6)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2799.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CoreGuard::block_on&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::CoreGuard, core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2773" width="4.0054%" height="15" fill="rgb(207,85,52)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2783.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::CoreGuard::enter&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::CoreGuard, tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2757" width="4.0054%" height="15" fill="rgb(231,171,19)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2767.50">deno..</text></g><g><title>deno.exe`tokio::macros::scoped_tls::ScopedKey&lt;tokio::runtime::scheduler::current_thread::Context&gt;::set&lt;tokio::runtime::scheduler::current_thread::Context,tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;,tuple$&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::current_thread::Core,alloc::alloc::Global&gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::Context*, tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2741" width="4.0054%" height="15" fill="rgb(207,128,4)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2751.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::enter::closure$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,tokio::runtime::task::error::JoinError&gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::enter::closure_env$0&lt;tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2725" width="4.0054%" height="15" fill="rgb(219,208,4)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2735.50">deno..</text></g><g><title>deno.exe`tokio::runtime::scheduler::current_thread::impl$8::block_on::closure$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;(tokio::runtime::scheduler::current_thread::impl$8::block_on::closure_env$0&lt;core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::task::join::JoinHandle&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;tuple$ (837 samples, 4.01%)</title><rect x="8.8625%" y="2709" width="4.0054%" height="15" fill="rgb(235,161,42)" fg:x="1852" fg:w="837"/><text x="9.1125%" y="2719.50">deno..</text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::round_function&lt;enum2$&lt;byteorder::BigEndian&gt; &gt; (3,812 samples, 18.24%)</title><rect x="27.5973%" y="2597" width="18.2419%" height="15" fill="rgb(247,218,18)" fg:x="5767" fg:w="3812"/><text x="27.8473%" y="2607.50">tfm.dll`blowfish::Blowfish&lt;e..</text></g><g><title>tfm.dll`core::num::impl$8::wrapping_add (209 samples, 1.00%)</title><rect x="44.8390%" y="2581" width="1.0001%" height="15" fill="rgb(232,114,51)" fg:x="9370" fg:w="209"/><text x="45.0890%" y="2591.50"></text></g><g><title>tfm.dll`core::clone::impls::impl$5::clone (7 samples, 0.03%)</title><rect x="50.1747%" y="2565" width="0.0335%" height="15" fill="rgb(222,95,3)" fg:x="10485" fg:w="7"/><text x="50.4247%" y="2575.50"></text></g><g><title>tfm.dll`core::cmp::impls::impl$54::lt (158 samples, 0.76%)</title><rect x="50.2082%" y="2565" width="0.7561%" height="15" fill="rgb(240,65,29)" fg:x="10492" fg:w="158"/><text x="50.4582%" y="2575.50"></text></g><g><title>tfm.dll`core::iter::range::impl$37::forward_unchecked (175 samples, 0.84%)</title><rect x="50.9643%" y="2565" width="0.8374%" height="15" fill="rgb(249,209,20)" fg:x="10650" fg:w="175"/><text x="51.2143%" y="2575.50"></text></g><g><title>tfm.dll`core::ptr::read (14 samples, 0.07%)</title><rect x="52.4094%" y="2549" width="0.0670%" height="15" fill="rgb(241,48,37)" fg:x="10952" fg:w="14"/><text x="52.6594%" y="2559.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (1,388 samples, 6.64%)</title><rect x="45.8391%" y="2597" width="6.6421%" height="15" fill="rgb(230,140,42)" fg:x="9579" fg:w="1388"/><text x="46.0891%" y="2607.50">tfm.dll`c..</text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (1,117 samples, 5.35%)</title><rect x="47.1360%" y="2581" width="5.3453%" height="15" fill="rgb(230,176,45)" fg:x="9850" fg:w="1117"/><text x="47.3860%" y="2591.50">tfm.dll..</text></g><g><title>tfm.dll`core::mem::replace (142 samples, 0.68%)</title><rect x="51.8017%" y="2565" width="0.6795%" height="15" fill="rgb(245,112,21)" fg:x="10825" fg:w="142"/><text x="52.0517%" y="2575.50"></text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::encrypt&lt;enum2$&lt;byteorder::BigEndian&gt; &gt; (8,078 samples, 38.66%)</title><rect x="13.8919%" y="2613" width="38.6563%" height="15" fill="rgb(207,183,35)" fg:x="2903" fg:w="8078"/><text x="14.1419%" y="2623.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::encr..</text></g><g><title>tfm.dll`core::iter::traits::collect::impl$0::into_iter&lt;core::ops::range::Range&lt;usize&gt; &gt;(core::ops::range::Range (14 samples, 0.07%)</title><rect x="52.4812%" y="2597" width="0.0670%" height="15" fill="rgb(227,44,33)" fg:x="10967" fg:w="14"/><text x="52.7312%" y="2607.50"></text></g><g><title>tfm.dll`core::cmp::impls::impl$72::lt (4 samples, 0.02%)</title><rect x="52.7157%" y="2565" width="0.0191%" height="15" fill="rgb(246,120,21)" fg:x="11016" fg:w="4"/><text x="52.9657%" y="2575.50"></text></g><g><title>tfm.dll`core::iter::range::impl$34::forward_unchecked (4 samples, 0.02%)</title><rect x="52.7348%" y="2565" width="0.0191%" height="15" fill="rgb(235,57,52)" fg:x="11020" fg:w="4"/><text x="52.9848%" y="2575.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;i32&gt;(core::ops::range::Range (26 samples, 0.12%)</title><rect x="52.6439%" y="2597" width="0.1244%" height="15" fill="rgb(238,84,10)" fg:x="11001" fg:w="26"/><text x="52.8939%" y="2607.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;i32&gt;(core::ops::range::Range (19 samples, 0.09%)</title><rect x="52.6774%" y="2581" width="0.0909%" height="15" fill="rgb(251,200,32)" fg:x="11008" fg:w="19"/><text x="52.9274%" y="2591.50"></text></g><g><title>tfm.dll`core::mem::replace (3 samples, 0.01%)</title><rect x="52.7540%" y="2565" width="0.0144%" height="15" fill="rgb(247,159,13)" fg:x="11024" fg:w="3"/><text x="53.0040%" y="2575.50"></text></g><g><title>tfm.dll`core::ptr::read (3 samples, 0.01%)</title><rect x="52.7540%" y="2549" width="0.0144%" height="15" fill="rgb(238,64,4)" fg:x="11024" fg:w="3"/><text x="53.0040%" y="2559.50"></text></g><g><title>tfm.dll`blowfish::next_u32_wrap(ref$&lt;slice2$ (72 samples, 0.34%)</title><rect x="52.5482%" y="2613" width="0.3445%" height="15" fill="rgb(221,131,51)" fg:x="10981" fg:w="72"/><text x="52.7982%" y="2623.50"></text></g><g><title>tfm.dll`core::iter::traits::collect::impl$0::into_iter&lt;core::ops::range::Range&lt;i32&gt; &gt;(core::ops::range::Range (26 samples, 0.12%)</title><rect x="52.7683%" y="2597" width="0.1244%" height="15" fill="rgb(242,5,29)" fg:x="11027" fg:w="26"/><text x="53.0183%" y="2607.50"></text></g><g><title>tfm.dll`core::clone::impls::impl$5::clone (3 samples, 0.01%)</title><rect x="53.3043%" y="2581" width="0.0144%" height="15" fill="rgb(214,130,32)" fg:x="11139" fg:w="3"/><text x="53.5543%" y="2591.50"></text></g><g><title>tfm.dll`core::cmp::impls::impl$54::lt (26 samples, 0.12%)</title><rect x="53.3187%" y="2581" width="0.1244%" height="15" fill="rgb(244,210,16)" fg:x="11142" fg:w="26"/><text x="53.5687%" y="2591.50"></text></g><g><title>tfm.dll`core::iter::range::impl$37::forward_unchecked (33 samples, 0.16%)</title><rect x="53.4431%" y="2581" width="0.1579%" height="15" fill="rgb(234,48,26)" fg:x="11168" fg:w="33"/><text x="53.6931%" y="2591.50"></text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::bc_expand_key(ref$&lt;slice2$ (8,525 samples, 40.80%)</title><rect x="12.8870%" y="2645" width="40.7953%" height="15" fill="rgb(231,82,38)" fg:x="2693" fg:w="8525"/><text x="13.1370%" y="2655.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::bc_expan..</text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::expand_key&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;(ref$&lt;slice2$ (8,525 samples, 40.80%)</title><rect x="12.8870%" y="2629" width="40.7953%" height="15" fill="rgb(254,128,41)" fg:x="2693" fg:w="8525"/><text x="13.1370%" y="2639.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::expand_k..</text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (165 samples, 0.79%)</title><rect x="52.8928%" y="2613" width="0.7896%" height="15" fill="rgb(212,73,49)" fg:x="11053" fg:w="165"/><text x="53.1428%" y="2623.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (130 samples, 0.62%)</title><rect x="53.0602%" y="2597" width="0.6221%" height="15" fill="rgb(205,62,54)" fg:x="11088" fg:w="130"/><text x="53.3102%" y="2607.50"></text></g><g><title>tfm.dll`core::mem::replace (17 samples, 0.08%)</title><rect x="53.6010%" y="2581" width="0.0814%" height="15" fill="rgb(228,0,8)" fg:x="11201" fg:w="17"/><text x="53.8510%" y="2591.50"></text></g><g><title>tfm.dll`bcrypt::bcrypt::setup(unsigned int, ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (8,530 samples, 40.82%)</title><rect x="12.8774%" y="2661" width="40.8193%" height="15" fill="rgb(251,28,17)" fg:x="2691" fg:w="8530"/><text x="13.1274%" y="2671.50">tfm.dll`bcrypt::bcrypt::setup(unsigned int, ref$&lt;slice2$&lt;u8&gt; &gt;, ref..</text></g><g><title>deno.exe`libffi::middle::Cif::call&lt;bool&gt;(libffi::low::CodePtr, ref$&lt;slice2$ (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2805" width="40.8288%" height="15" fill="rgb(238,105,27)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2815.50">deno.exe`libffi::middle::Cif::call&lt;bool&gt;(libffi::low::CodePtr, ref$..</text></g><g><title>deno.exe`libffi::low::call&lt;bool&gt; (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2789" width="40.8288%" height="15" fill="rgb(237,216,33)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2799.50">deno.exe`libffi::low::call&lt;bool&gt;</text></g><g><title>deno.exe`ffi_call(ffi_cif*, void (*)(), void*, void**) (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2773" width="40.8288%" height="15" fill="rgb(229,228,25)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2783.50">deno.exe`ffi_call(ffi_cif*, void (*)(), void*, void**)</text></g><g><title>deno.exe`ffi_call_int(ffi_cif*, void (*)(), void*, void**, void*) (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2757" width="40.8288%" height="15" fill="rgb(233,75,23)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2767.50">deno.exe`ffi_call_int(ffi_cif*, void (*)(), void*, void**, void*)</text></g><g><title>deno.exe`ffi_call_win64() (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2741" width="40.8288%" height="15" fill="rgb(231,207,16)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2751.50">deno.exe`ffi_call_win64()</text></g><g><title>tfm.dll`tfm::verify (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2725" width="40.8288%" height="15" fill="rgb(231,191,45)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2735.50">tfm.dll`tfm::verify</text></g><g><title>tfm.dll`bcrypt::verify&lt;ref$&lt;str$&gt; &gt;(ref$&lt;str$&gt;, ref$ (8,532 samples, 40.83%)</title><rect x="12.8727%" y="2709" width="40.8288%" height="15" fill="rgb(224,133,17)" fg:x="2690" fg:w="8532"/><text x="13.1227%" y="2719.50">tfm.dll`bcrypt::verify&lt;ref$&lt;str$&gt; &gt;(ref$&lt;str$&gt;, ref$</text></g><g><title>tfm.dll`bcrypt::_hash_password(ref$&lt;slice2$ (8,531 samples, 40.82%)</title><rect x="12.8774%" y="2693" width="40.8240%" height="15" fill="rgb(209,178,27)" fg:x="2691" fg:w="8531"/><text x="13.1274%" y="2703.50">tfm.dll`bcrypt::_hash_password(ref$&lt;slice2$</text></g><g><title>tfm.dll`bcrypt::bcrypt::bcrypt(unsigned int, unsigned char*, ref$&lt;slice2$ (8,531 samples, 40.82%)</title><rect x="12.8774%" y="2677" width="40.8240%" height="15" fill="rgb(218,37,11)" fg:x="2691" fg:w="8531"/><text x="13.1274%" y="2687.50">tfm.dll`bcrypt::bcrypt::bcrypt(unsigned int, unsigned char*, ref$&lt;s..</text></g><g><title>tfm.dll`core::iter::range::impl$37::forward_unchecked (4 samples, 0.02%)</title><rect x="53.8785%" y="2613" width="0.0191%" height="15" fill="rgb(251,226,25)" fg:x="11259" fg:w="4"/><text x="54.1285%" y="2623.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (14 samples, 0.07%)</title><rect x="53.8355%" y="2645" width="0.0670%" height="15" fill="rgb(209,222,27)" fg:x="11250" fg:w="14"/><text x="54.0855%" y="2655.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (12 samples, 0.06%)</title><rect x="53.8450%" y="2629" width="0.0574%" height="15" fill="rgb(238,22,21)" fg:x="11252" fg:w="12"/><text x="54.0950%" y="2639.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (41 samples, 0.20%)</title><rect x="53.7206%" y="2661" width="0.1962%" height="15" fill="rgb(233,161,25)" fg:x="11226" fg:w="41"/><text x="53.9706%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::car25519 (3 samples, 0.01%)</title><rect x="53.9025%" y="2645" width="0.0144%" height="15" fill="rgb(226,122,53)" fg:x="11264" fg:w="3"/><text x="54.1525%" y="2655.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (13 samples, 0.06%)</title><rect x="53.9886%" y="2629" width="0.0622%" height="15" fill="rgb(220,123,17)" fg:x="11282" fg:w="13"/><text x="54.2386%" y="2639.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (10 samples, 0.05%)</title><rect x="54.0030%" y="2613" width="0.0479%" height="15" fill="rgb(230,224,35)" fg:x="11285" fg:w="10"/><text x="54.2530%" y="2623.50"></text></g><g><title>tfm.dll`core::mem::replace (3 samples, 0.01%)</title><rect x="54.0365%" y="2597" width="0.0144%" height="15" fill="rgb(246,83,8)" fg:x="11292" fg:w="3"/><text x="54.2865%" y="2607.50"></text></g><g><title>tfm.dll`sodalite::gf_square (32 samples, 0.15%)</title><rect x="53.9168%" y="2661" width="0.1531%" height="15" fill="rgb(230,214,17)" fg:x="11267" fg:w="32"/><text x="54.1668%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (32 samples, 0.15%)</title><rect x="53.9168%" y="2645" width="0.1531%" height="15" fill="rgb(222,97,18)" fg:x="11267" fg:w="32"/><text x="54.1668%" y="2655.50"></text></g><g><title>tfm.dll`sodalite::car25519 (4 samples, 0.02%)</title><rect x="54.0508%" y="2629" width="0.0191%" height="15" fill="rgb(206,79,1)" fg:x="11295" fg:w="4"/><text x="54.3008%" y="2639.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (5 samples, 0.02%)</title><rect x="54.0795%" y="2645" width="0.0239%" height="15" fill="rgb(214,121,34)" fg:x="11301" fg:w="5"/><text x="54.3295%" y="2655.50"></text></g><g><title>tfm.dll`tfm::_box (93 samples, 0.45%)</title><rect x="53.7015%" y="2725" width="0.4450%" height="15" fill="rgb(249,199,46)" fg:x="11222" fg:w="93"/><text x="53.9515%" y="2735.50"></text></g><g><title>tfm.dll`sodalite::box_(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (91 samples, 0.44%)</title><rect x="53.7111%" y="2709" width="0.4355%" height="15" fill="rgb(214,222,46)" fg:x="11224" fg:w="91"/><text x="53.9611%" y="2719.50"></text></g><g><title>tfm.dll`sodalite::box_beforenm (90 samples, 0.43%)</title><rect x="53.7158%" y="2693" width="0.4307%" height="15" fill="rgb(248,168,30)" fg:x="11225" fg:w="90"/><text x="53.9658%" y="2703.50"></text></g><g><title>tfm.dll`sodalite::scalarmult (90 samples, 0.43%)</title><rect x="53.7158%" y="2677" width="0.4307%" height="15" fill="rgb(226,14,28)" fg:x="11225" fg:w="90"/><text x="53.9658%" y="2687.50"></text></g><g><title>tfm.dll`sodalite::inv25519 (14 samples, 0.07%)</title><rect x="54.0795%" y="2661" width="0.0670%" height="15" fill="rgb(253,123,1)" fg:x="11301" fg:w="14"/><text x="54.3295%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::gf_square (9 samples, 0.04%)</title><rect x="54.1035%" y="2645" width="0.0431%" height="15" fill="rgb(225,24,42)" fg:x="11306" fg:w="9"/><text x="54.3535%" y="2655.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (9 samples, 0.04%)</title><rect x="54.1035%" y="2629" width="0.0431%" height="15" fill="rgb(216,161,37)" fg:x="11306" fg:w="9"/><text x="54.3535%" y="2639.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (4 samples, 0.02%)</title><rect x="54.1274%" y="2613" width="0.0191%" height="15" fill="rgb(251,164,26)" fg:x="11311" fg:w="4"/><text x="54.3774%" y="2623.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (4 samples, 0.02%)</title><rect x="54.1274%" y="2597" width="0.0191%" height="15" fill="rgb(219,177,3)" fg:x="11311" fg:w="4"/><text x="54.3774%" y="2607.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (9 samples, 0.04%)</title><rect x="54.2327%" y="2645" width="0.0431%" height="15" fill="rgb(222,65,0)" fg:x="11333" fg:w="9"/><text x="54.4827%" y="2655.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (8 samples, 0.04%)</title><rect x="54.2375%" y="2629" width="0.0383%" height="15" fill="rgb(223,69,54)" fg:x="11334" fg:w="8"/><text x="54.4875%" y="2639.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (28 samples, 0.13%)</title><rect x="54.1609%" y="2661" width="0.1340%" height="15" fill="rgb(235,30,27)" fg:x="11318" fg:w="28"/><text x="54.4109%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::car25519 (3 samples, 0.01%)</title><rect x="54.2805%" y="2645" width="0.0144%" height="15" fill="rgb(220,183,50)" fg:x="11343" fg:w="3"/><text x="54.5305%" y="2655.50"></text></g><g><title>tfm.dll`sodalite::gf_square (7 samples, 0.03%)</title><rect x="54.2949%" y="2661" width="0.0335%" height="15" fill="rgb(248,198,15)" fg:x="11346" fg:w="7"/><text x="54.5449%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (7 samples, 0.03%)</title><rect x="54.2949%" y="2645" width="0.0335%" height="15" fill="rgb(222,211,4)" fg:x="11346" fg:w="7"/><text x="54.5449%" y="2655.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (4 samples, 0.02%)</title><rect x="54.3092%" y="2629" width="0.0191%" height="15" fill="rgb(214,102,34)" fg:x="11349" fg:w="4"/><text x="54.5592%" y="2639.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (4 samples, 0.02%)</title><rect x="54.3092%" y="2613" width="0.0191%" height="15" fill="rgb(245,92,5)" fg:x="11349" fg:w="4"/><text x="54.5592%" y="2623.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (3 samples, 0.01%)</title><rect x="54.3332%" y="2629" width="0.0144%" height="15" fill="rgb(252,72,51)" fg:x="11354" fg:w="3"/><text x="54.5832%" y="2639.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (3 samples, 0.01%)</title><rect x="54.3332%" y="2613" width="0.0144%" height="15" fill="rgb(252,208,19)" fg:x="11354" fg:w="3"/><text x="54.5832%" y="2623.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (5 samples, 0.02%)</title><rect x="54.3284%" y="2645" width="0.0239%" height="15" fill="rgb(211,69,7)" fg:x="11353" fg:w="5"/><text x="54.5784%" y="2655.50"></text></g><g><title>tfm.dll`tfm::_unbox (45 samples, 0.22%)</title><rect x="54.1513%" y="2725" width="0.2153%" height="15" fill="rgb(211,27,16)" fg:x="11316" fg:w="45"/><text x="54.4013%" y="2735.50"></text></g><g><title>tfm.dll`sodalite::box_open(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (45 samples, 0.22%)</title><rect x="54.1513%" y="2709" width="0.2153%" height="15" fill="rgb(219,216,14)" fg:x="11316" fg:w="45"/><text x="54.4013%" y="2719.50"></text></g><g><title>tfm.dll`sodalite::box_beforenm (45 samples, 0.22%)</title><rect x="54.1513%" y="2693" width="0.2153%" height="15" fill="rgb(219,71,8)" fg:x="11316" fg:w="45"/><text x="54.4013%" y="2703.50"></text></g><g><title>tfm.dll`sodalite::scalarmult (45 samples, 0.22%)</title><rect x="54.1513%" y="2677" width="0.2153%" height="15" fill="rgb(223,170,53)" fg:x="11316" fg:w="45"/><text x="54.4013%" y="2687.50"></text></g><g><title>tfm.dll`sodalite::inv25519 (8 samples, 0.04%)</title><rect x="54.3284%" y="2661" width="0.0383%" height="15" fill="rgb(246,21,26)" fg:x="11353" fg:w="8"/><text x="54.5784%" y="2671.50"></text></g><g><title>tfm.dll`sodalite::gf_square (3 samples, 0.01%)</title><rect x="54.3523%" y="2645" width="0.0144%" height="15" fill="rgb(248,20,46)" fg:x="11358" fg:w="3"/><text x="54.6023%" y="2655.50"></text></g><g><title>tfm.dll`sodalite::gf_mult (3 samples, 0.01%)</title><rect x="54.3523%" y="2629" width="0.0144%" height="15" fill="rgb(252,94,11)" fg:x="11358" fg:w="3"/><text x="54.6023%" y="2639.50"></text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::round_function&lt;enum2$&lt;byteorder::BigEndian&gt; &gt; (3,773 samples, 18.06%)</title><rect x="68.4548%" y="2581" width="18.0552%" height="15" fill="rgb(236,163,8)" fg:x="14305" fg:w="3773"/><text x="68.7048%" y="2591.50">tfm.dll`blowfish::Blowfish&lt;e..</text></g><g><title>tfm.dll`core::num::impl$8::wrapping_add (212 samples, 1.01%)</title><rect x="85.4955%" y="2565" width="1.0145%" height="15" fill="rgb(217,221,45)" fg:x="17866" fg:w="212"/><text x="85.7455%" y="2575.50"></text></g><g><title>tfm.dll`core::clone::impls::impl$5::clone (7 samples, 0.03%)</title><rect x="90.5967%" y="2549" width="0.0335%" height="15" fill="rgb(238,38,17)" fg:x="18932" fg:w="7"/><text x="90.8467%" y="2559.50"></text></g><g><title>tfm.dll`core::cmp::impls::impl$54::lt (173 samples, 0.83%)</title><rect x="90.6302%" y="2549" width="0.8279%" height="15" fill="rgb(242,210,23)" fg:x="18939" fg:w="173"/><text x="90.8802%" y="2559.50"></text></g><g><title>tfm.dll`core::iter::range::impl$37::forward_unchecked (211 samples, 1.01%)</title><rect x="91.4581%" y="2549" width="1.0097%" height="15" fill="rgb(250,86,53)" fg:x="19112" fg:w="211"/><text x="91.7081%" y="2559.50"></text></g><g><title>tfm.dll`core::ptr::read (16 samples, 0.08%)</title><rect x="93.0612%" y="2533" width="0.0766%" height="15" fill="rgb(223,168,25)" fg:x="19447" fg:w="16"/><text x="93.3112%" y="2543.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (1,388 samples, 6.64%)</title><rect x="86.5100%" y="2581" width="6.6421%" height="15" fill="rgb(251,189,4)" fg:x="18078" fg:w="1388"/><text x="86.7600%" y="2591.50">tfm.dll`c..</text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (1,137 samples, 5.44%)</title><rect x="87.7112%" y="2565" width="5.4410%" height="15" fill="rgb(245,19,28)" fg:x="18329" fg:w="1137"/><text x="87.9612%" y="2575.50">tfm.dll..</text></g><g><title>tfm.dll`core::mem::replace (143 samples, 0.68%)</title><rect x="92.4678%" y="2549" width="0.6843%" height="15" fill="rgb(207,10,34)" fg:x="19323" fg:w="143"/><text x="92.7178%" y="2559.50"></text></g><g><title>tfm.dll`core::ptr::write (3 samples, 0.01%)</title><rect x="93.1378%" y="2533" width="0.0144%" height="15" fill="rgb(235,153,31)" fg:x="19463" fg:w="3"/><text x="93.3878%" y="2543.50"></text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::encrypt&lt;enum2$&lt;byteorder::BigEndian&gt; &gt; (7,875 samples, 37.68%)</title><rect x="55.5439%" y="2597" width="37.6848%" height="15" fill="rgb(228,72,37)" fg:x="11607" fg:w="7875"/><text x="55.7939%" y="2607.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::en..</text></g><g><title>tfm.dll`core::iter::traits::collect::impl$0::into_iter&lt;core::ops::range::Range&lt;usize&gt; &gt;(core::ops::range::Range (16 samples, 0.08%)</title><rect x="93.1521%" y="2581" width="0.0766%" height="15" fill="rgb(215,15,16)" fg:x="19466" fg:w="16"/><text x="93.4021%" y="2591.50"></text></g><g><title>tfm.dll`core::iter::range::impl$34::forward_unchecked (8 samples, 0.04%)</title><rect x="93.4201%" y="2549" width="0.0383%" height="15" fill="rgb(250,119,29)" fg:x="19522" fg:w="8"/><text x="93.6701%" y="2559.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;i32&gt;(core::ops::range::Range (29 samples, 0.14%)</title><rect x="93.3340%" y="2581" width="0.1388%" height="15" fill="rgb(214,59,1)" fg:x="19504" fg:w="29"/><text x="93.5840%" y="2591.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;i32&gt;(core::ops::range::Range (23 samples, 0.11%)</title><rect x="93.3627%" y="2565" width="0.1101%" height="15" fill="rgb(223,109,25)" fg:x="19510" fg:w="23"/><text x="93.6127%" y="2575.50"></text></g><g><title>tfm.dll`core::mem::replace (3 samples, 0.01%)</title><rect x="93.4584%" y="2549" width="0.0144%" height="15" fill="rgb(230,198,22)" fg:x="19530" fg:w="3"/><text x="93.7084%" y="2559.50"></text></g><g><title>tfm.dll`core::ptr::read (3 samples, 0.01%)</title><rect x="93.4584%" y="2533" width="0.0144%" height="15" fill="rgb(245,184,46)" fg:x="19530" fg:w="3"/><text x="93.7084%" y="2543.50"></text></g><g><title>tfm.dll`blowfish::next_u32_wrap(ref$&lt;slice2$ (74 samples, 0.35%)</title><rect x="93.2287%" y="2597" width="0.3541%" height="15" fill="rgb(253,73,16)" fg:x="19482" fg:w="74"/><text x="93.4787%" y="2607.50"></text></g><g><title>tfm.dll`core::iter::traits::collect::impl$0::into_iter&lt;core::ops::range::Range&lt;i32&gt; &gt;(core::ops::range::Range (23 samples, 0.11%)</title><rect x="93.4727%" y="2581" width="0.1101%" height="15" fill="rgb(206,94,45)" fg:x="19533" fg:w="23"/><text x="93.7227%" y="2591.50"></text></g><g><title>tfm.dll`core::clone::impls::impl$5::clone (3 samples, 0.01%)</title><rect x="93.9991%" y="2565" width="0.0144%" height="15" fill="rgb(236,83,27)" fg:x="19643" fg:w="3"/><text x="94.2491%" y="2575.50"></text></g><g><title>tfm.dll`core::cmp::impls::impl$54::lt (36 samples, 0.17%)</title><rect x="94.0135%" y="2565" width="0.1723%" height="15" fill="rgb(220,196,8)" fg:x="19646" fg:w="36"/><text x="94.2635%" y="2575.50"></text></g><g><title>tfm.dll`core::iter::range::impl$37::forward_unchecked (22 samples, 0.11%)</title><rect x="94.1858%" y="2565" width="0.1053%" height="15" fill="rgb(254,185,14)" fg:x="19682" fg:w="22"/><text x="94.4358%" y="2575.50"></text></g><g><title>tfm.dll`core::iter::range::impl$3::next&lt;usize&gt;(core::ops::range::Range (170 samples, 0.81%)</title><rect x="93.5828%" y="2597" width="0.8135%" height="15" fill="rgb(226,50,22)" fg:x="19556" fg:w="170"/><text x="93.8328%" y="2607.50"></text></g><g><title>tfm.dll`core::iter::range::impl$2::spec_next&lt;usize&gt;(core::ops::range::Range (131 samples, 0.63%)</title><rect x="93.7694%" y="2581" width="0.6269%" height="15" fill="rgb(253,147,0)" fg:x="19595" fg:w="131"/><text x="94.0194%" y="2591.50"></text></g><g><title>tfm.dll`core::mem::replace (22 samples, 0.11%)</title><rect x="94.2910%" y="2565" width="0.1053%" height="15" fill="rgb(252,46,33)" fg:x="19704" fg:w="22"/><text x="94.5410%" y="2575.50"></text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::bc_expand_key(ref$&lt;slice2$ (8,365 samples, 40.03%)</title><rect x="54.3762%" y="2629" width="40.0297%" height="15" fill="rgb(242,22,54)" fg:x="11363" fg:w="8365"/><text x="54.6262%" y="2639.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::bc_exp..</text></g><g><title>tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::expand_key&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;(ref$&lt;slice2$ (8,365 samples, 40.03%)</title><rect x="54.3762%" y="2613" width="40.0297%" height="15" fill="rgb(223,178,32)" fg:x="11363" fg:w="8365"/><text x="54.6262%" y="2623.50">tfm.dll`blowfish::Blowfish&lt;enum2$&lt;byteorder::BigEndian&gt; &gt;::expand..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,041 samples, 81.55%)</title><rect x="12.8679%" y="3045" width="81.5476%" height="15" fill="rgb(214,106,53)" fg:x="2689" fg:w="17041"/><text x="13.1179%" y="3055.50">deno.exe`tokio::runtime::task::harness::poll_future&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closur..</text></g><g><title>deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,041 samples, 81.55%)</title><rect x="12.8679%" y="3029" width="81.5476%" height="15" fill="rgb(232,65,50)" fg:x="2689" fg:w="17041"/><text x="13.1179%" y="3039.50">deno.exe`std::panic::catch_unwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;t..</text></g><g><title>deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,041 samples, 81.55%)</title><rect x="12.8679%" y="3013" width="81.5476%" height="15" fill="rgb(231,110,28)" fg:x="2689" fg:w="17041"/><text x="13.1179%" y="3023.50">deno.exe`std::panicking::try&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi..</text></g><g><title>deno.exe`Unknown (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2997" width="81.5428%" height="15" fill="rgb(216,71,40)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="3007.50">deno.exe`Unknown</text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2981" width="81.5428%" height="15" fill="rgb(229,89,53)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2991.50">deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env..</text></g><g><title>deno.exe`core::mem::manually_drop::ManuallyDrop&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;::new(enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2965" width="81.5428%" height="15" fill="rgb(210,124,14)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2975.50">deno.exe`core::mem::manually_drop::ManuallyDrop&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Res..</text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2949" width="81.5428%" height="15" fill="rgb(236,213,6)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2959.50">deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::resul..</text></g><g><title>deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::poll_future::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2933" width="81.5428%" height="15" fill="rgb(228,41,5)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2943.50">deno.exe`tokio::runtime::task::harness::poll_future::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_block..</text></g><g><title>deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2917" width="81.5428%" height="15" fill="rgb(221,167,25)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2927.50">deno.exe`tokio::runtime::task::core::Core&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;de..</text></g><g><title>deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt; &gt;::with_mut&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::task::poll::Poll&lt;deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt; &gt;,tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; &gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2901" width="81.5428%" height="15" fill="rgb(228,144,37)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2911.50">deno.exe`tokio::loom::std::unsafe_cell::UnsafeCell&lt;enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask..</text></g><g><title>deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::core::impl$6::poll::closure_env$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;, enum2$&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2885" width="81.5428%" height="15" fill="rgb(227,189,38)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2895.50">deno.exe`tokio::runtime::task::core::impl$6::poll::closure$0&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blockin..</text></g><g><title>deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt;,deno_core::task::MaskResultAsSend&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2869" width="81.5428%" height="15" fill="rgb(218,8,2)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2879.50">deno.exe`tokio::runtime::blocking::task::impl$2::poll&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closu..</text></g><g><title>deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt;(deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2853" width="81.5428%" height="15" fill="rgb(209,61,28)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2863.50">deno.exe`deno_core::task::spawn_blocking::closure$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_..</text></g><g><title>deno.exe`deno_ffi::call::impl$3::call::closure$2 (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2837" width="81.5428%" height="15" fill="rgb(233,140,39)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2847.50">deno.exe`deno_ffi::call::impl$3::call::closure$2</text></g><g><title>deno.exe`deno_ffi::call::ffi_call(alloc::vec::Vec&lt;deno_ffi::ir::NativeValue,alloc::alloc::Global&gt;, libffi::middle::Cif*, libffi::low::CodePtr, ref$&lt;slice2$&lt;enum2$&lt;deno_ffi::symbol::NativeType&gt; &gt; &gt;, enum2$&lt;deno_ffi::symbol::NativeType&gt;, enum2$&lt;core::option::Option (17,040 samples, 81.54%)</title><rect x="12.8727%" y="2821" width="81.5428%" height="15" fill="rgb(251,66,48)" fg:x="2690" fg:w="17040"/><text x="13.1227%" y="2831.50">deno.exe`deno_ffi::call::ffi_call(alloc::vec::Vec&lt;deno_ffi::ir::NativeValue,alloc::alloc::Global&gt;, libffi::middle::Cif*, libffi::low::Co..</text></g><g><title>deno.exe`libffi::middle::Cif::call&lt;ptr_mut$&lt;core::ffi::c_void&gt; &gt;(libffi::low::CodePtr, ref$&lt;slice2$ (8,508 samples, 40.71%)</title><rect x="53.7015%" y="2805" width="40.7140%" height="15" fill="rgb(210,44,45)" fg:x="11222" fg:w="8508"/><text x="53.9515%" y="2815.50">deno.exe`libffi::middle::Cif::call&lt;ptr_mut$&lt;core::ffi::c_void&gt; &gt;(li..</text></g><g><title>deno.exe`libffi::low::call&lt;ptr_mut$&lt;core::ffi::c_void&gt; &gt; (8,508 samples, 40.71%)</title><rect x="53.7015%" y="2789" width="40.7140%" height="15" fill="rgb(214,136,46)" fg:x="11222" fg:w="8508"/><text x="53.9515%" y="2799.50">deno.exe`libffi::low::call&lt;ptr_mut$&lt;core::ffi::c_void&gt; &gt;</text></g><g><title>deno.exe`ffi_call(ffi_cif*, void (*)(), void*, void**) (8,508 samples, 40.71%)</title><rect x="53.7015%" y="2773" width="40.7140%" height="15" fill="rgb(207,130,50)" fg:x="11222" fg:w="8508"/><text x="53.9515%" y="2783.50">deno.exe`ffi_call(ffi_cif*, void (*)(), void*, void**)</text></g><g><title>deno.exe`ffi_call_int(ffi_cif*, void (*)(), void*, void**, void*) (8,508 samples, 40.71%)</title><rect x="53.7015%" y="2757" width="40.7140%" height="15" fill="rgb(228,102,49)" fg:x="11222" fg:w="8508"/><text x="53.9515%" y="2767.50">deno.exe`ffi_call_int(ffi_cif*, void (*)(), void*, void**, void*)</text></g><g><title>deno.exe`ffi_call_win64() (8,508 samples, 40.71%)</title><rect x="53.7015%" y="2741" width="40.7140%" height="15" fill="rgb(253,55,1)" fg:x="11222" fg:w="8508"/><text x="53.9515%" y="2751.50">deno.exe`ffi_call_win64()</text></g><g><title>tfm.dll`tfm::hash (8,368 samples, 40.04%)</title><rect x="54.3714%" y="2725" width="40.0440%" height="15" fill="rgb(238,222,9)" fg:x="11362" fg:w="8368"/><text x="54.6214%" y="2735.50">tfm.dll`tfm::hash</text></g><g><title>tfm.dll`bcrypt::hash&lt;ref$&lt;str$&gt; &gt;(ref$ (8,368 samples, 40.04%)</title><rect x="54.3714%" y="2709" width="40.0440%" height="15" fill="rgb(246,99,6)" fg:x="11362" fg:w="8368"/><text x="54.6214%" y="2719.50">tfm.dll`bcrypt::hash&lt;ref$&lt;str$&gt; &gt;(ref$</text></g><g><title>tfm.dll`bcrypt::hash_with_result&lt;ref$&lt;str$&gt; &gt;(ref$ (8,368 samples, 40.04%)</title><rect x="54.3714%" y="2693" width="40.0440%" height="15" fill="rgb(219,110,26)" fg:x="11362" fg:w="8368"/><text x="54.6214%" y="2703.50">tfm.dll`bcrypt::hash_with_result&lt;ref$&lt;str$&gt; &gt;(ref$</text></g><g><title>tfm.dll`bcrypt::_hash_password(ref$&lt;slice2$ (8,368 samples, 40.04%)</title><rect x="54.3714%" y="2677" width="40.0440%" height="15" fill="rgb(239,160,33)" fg:x="11362" fg:w="8368"/><text x="54.6214%" y="2687.50">tfm.dll`bcrypt::_hash_password(ref$&lt;slice2$</text></g><g><title>tfm.dll`bcrypt::bcrypt::bcrypt(unsigned int, unsigned char*, ref$&lt;slice2$ (8,367 samples, 40.04%)</title><rect x="54.3762%" y="2661" width="40.0392%" height="15" fill="rgb(220,202,23)" fg:x="11363" fg:w="8367"/><text x="54.6262%" y="2671.50">tfm.dll`bcrypt::bcrypt::bcrypt(unsigned int, unsigned char*, ref$..</text></g><g><title>tfm.dll`bcrypt::bcrypt::setup(unsigned int, ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (8,367 samples, 40.04%)</title><rect x="54.3762%" y="2645" width="40.0392%" height="15" fill="rgb(208,80,26)" fg:x="11363" fg:w="8367"/><text x="54.6262%" y="2655.50">tfm.dll`bcrypt::bcrypt::setup(unsigned int, ref$&lt;slice2$&lt;u8&gt; &gt;, r..</text></g><g><title>deno.exe`std::sys::windows::thread::impl$0::new::thread_start (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3365" width="85.8018%" height="15" fill="rgb(243,85,7)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3375.50">deno.exe`std::sys::windows::thread::impl$0::new::thread_start</text></g><g><title>deno.exe`alloc::boxed::impl$47::call_once (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3349" width="85.8018%" height="15" fill="rgb(228,77,47)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3359.50">deno.exe`alloc::boxed::impl$47::call_once</text></g><g><title>deno.exe`alloc::boxed::impl$47::call_once (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3333" width="85.8018%" height="15" fill="rgb(212,226,8)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3343.50">deno.exe`alloc::boxed::impl$47::call_once</text></g><g><title>deno.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3317" width="85.8018%" height="15" fill="rgb(241,120,54)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3327.50">deno.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::sp..</text></g><g><title>deno.exe`std::thread::impl$0::spawn_unchecked_::closure$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3301" width="85.8018%" height="15" fill="rgb(226,80,16)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3311.50">deno.exe`std::thread::impl$0::spawn_unchecked_::closure$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;(std::t..</text></g><g><title>deno.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3285" width="85.8018%" height="15" fill="rgb(240,76,13)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3295.50">deno.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;to..</text></g><g><title>deno.exe`std::panicking::try&lt;tuple$&lt;&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3269" width="85.8018%" height="15" fill="rgb(252,74,8)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3279.50">deno.exe`std::panicking::try&lt;tuple$&lt;&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$..</text></g><g><title>deno.exe`Unknown (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3253" width="85.8018%" height="15" fill="rgb(244,155,2)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3263.50">deno.exe`Unknown</text></g><g><title>deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3237" width="85.8018%" height="15" fill="rgb(215,81,35)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3247.50">deno.exe`std::panicking::try::do_call&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$..</text></g><g><title>deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;tuple$&lt;&gt;,std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3221" width="85.8018%" height="15" fill="rgb(206,55,2)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3231.50">deno.exe`core::panic::unwind_safe::impl$23::call_once&lt;tuple$&lt;&gt;,std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::..</text></g><g><title>deno.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3205" width="85.8018%" height="15" fill="rgb(231,2,34)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3215.50">deno.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$..</text></g><g><title>deno.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3189" width="85.8018%" height="15" fill="rgb(242,176,48)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3199.50">deno.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>deno.exe`tokio::runtime::blocking::pool::impl$6::spawn_thread::closure$0 (17,930 samples, 85.80%)</title><rect x="8.6185%" y="3173" width="85.8018%" height="15" fill="rgb(249,31,36)" fg:x="1801" fg:w="17930"/><text x="8.8685%" y="3183.50">deno.exe`tokio::runtime::blocking::pool::impl$6::spawn_thread::closure$0</text></g><g><title>deno.exe`tokio::runtime::blocking::pool::Inner::run (17,929 samples, 85.80%)</title><rect x="8.6232%" y="3157" width="85.7970%" height="15" fill="rgb(205,18,17)" fg:x="1802" fg:w="17929"/><text x="8.8732%" y="3167.50">deno.exe`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>deno.exe`tokio::runtime::blocking::pool::Task::run (17,926 samples, 85.78%)</title><rect x="8.6376%" y="3141" width="85.7826%" height="15" fill="rgb(254,130,5)" fg:x="1805" fg:w="17926"/><text x="8.8876%" y="3151.50">deno.exe`tokio::runtime::blocking::pool::Task::run</text></g><g><title>deno.exe`tokio::runtime::task::UnownedTask&lt;tokio::runtime::blocking::schedule::BlockingSchedule&gt;::run&lt;tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::UnownedTask (17,926 samples, 85.78%)</title><rect x="8.6376%" y="3125" width="85.7826%" height="15" fill="rgb(229,42,45)" fg:x="1805" fg:w="17926"/><text x="8.8876%" y="3135.50">deno.exe`tokio::runtime::task::UnownedTask&lt;tokio::runtime::blocking::schedule::BlockingSchedule&gt;::run&lt;tokio::runtime::blocking::schedule::Block..</text></g><g><title>deno.exe`tokio::runtime::task::raw::RawTask::poll (17,926 samples, 85.78%)</title><rect x="8.6376%" y="3109" width="85.7826%" height="15" fill="rgb(245,95,25)" fg:x="1805" fg:w="17926"/><text x="8.8876%" y="3119.50">deno.exe`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(core::ptr::non_null::NonNull (17,042 samples, 81.55%)</title><rect x="12.8679%" y="3093" width="81.5524%" height="15" fill="rgb(249,193,38)" fg:x="2689" fg:w="17042"/><text x="13.1179%" y="3103.50">deno.exe`tokio::runtime::task::raw::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;den..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;(tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$ (17,042 samples, 81.55%)</title><rect x="12.8679%" y="3077" width="81.5524%" height="15" fill="rgb(241,140,43)" fg:x="2689" fg:w="17042"/><text x="13.1179%" y="3087.50">deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_en..</text></g><g><title>deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt;::poll_inner&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_env$0&lt;deno_ffi::call::impl$3::call::closure_env$2,enum2$&lt;core::result::Result&lt;enum2$&lt;deno_ffi::call::FfiValue&gt;,anyhow::Error&gt; &gt; &gt; &gt;,tokio::runtime::blocking::schedule::BlockingSchedule&gt; (17,042 samples, 81.55%)</title><rect x="12.8679%" y="3061" width="81.5524%" height="15" fill="rgb(245,78,48)" fg:x="2689" fg:w="17042"/><text x="13.1179%" y="3071.50">deno.exe`tokio::runtime::task::harness::Harness&lt;tokio::runtime::blocking::task::BlockingTask&lt;deno_core::task::spawn_blocking::closure_en..</text></g><g><title>`0x7FFAA21F91D3 (7 samples, 0.03%)</title><rect x="94.4346%" y="3301" width="0.0335%" height="15" fill="rgb(214,92,39)" fg:x="19734" fg:w="7"/><text x="94.6846%" y="3311.50"></text></g><g><title>`0x7FFAA21F91FB (5 samples, 0.02%)</title><rect x="94.4729%" y="3301" width="0.0239%" height="15" fill="rgb(211,189,14)" fg:x="19742" fg:w="5"/><text x="94.7229%" y="3311.50"></text></g><g><title>`0x7FFAA2232944 (4 samples, 0.02%)</title><rect x="94.4777%" y="3285" width="0.0191%" height="15" fill="rgb(218,7,24)" fg:x="19743" fg:w="4"/><text x="94.7277%" y="3295.50"></text></g><g><title>`0x7FFA9F822409 (14 samples, 0.07%)</title><rect x="94.4346%" y="3317" width="0.0670%" height="15" fill="rgb(224,200,49)" fg:x="19734" fg:w="14"/><text x="94.6846%" y="3327.50"></text></g><g><title>deno.exe`v8::internal::compiler::CodeGenerator::AssembleArchInstruction (3 samples, 0.01%)</title><rect x="94.5064%" y="3173" width="0.0144%" height="15" fill="rgb(218,210,14)" fg:x="19749" fg:w="3"/><text x="94.7564%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AssembleCodePhase&gt; (8 samples, 0.04%)</title><rect x="94.5016%" y="3221" width="0.0383%" height="15" fill="rgb(234,142,31)" fg:x="19748" fg:w="8"/><text x="94.7516%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::CodeGenerator::AssembleCode (8 samples, 0.04%)</title><rect x="94.5016%" y="3205" width="0.0383%" height="15" fill="rgb(227,165,2)" fg:x="19748" fg:w="8"/><text x="94.7516%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::CodeGenerator::AssembleInstruction (8 samples, 0.04%)</title><rect x="94.5016%" y="3189" width="0.0383%" height="15" fill="rgb(232,44,46)" fg:x="19748" fg:w="8"/><text x="94.7516%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::AssembleCode (9 samples, 0.04%)</title><rect x="94.5016%" y="3237" width="0.0431%" height="15" fill="rgb(236,149,47)" fg:x="19748" fg:w="9"/><text x="94.7516%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeGraphBuilder::BytecodeGraphBuilder(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::NativeContextRef, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::FeedbackCellRef, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, v8::internal::compiler::NodeOriginTable*, int, v8::internal::CodeKind, v8::base::Flags (5 samples, 0.02%)</title><rect x="94.5447%" y="3173" width="0.0239%" height="15" fill="rgb(227,45,31)" fg:x="19757" fg:w="5"/><text x="94.7947%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis(v8::internal::Handle (5 samples, 0.02%)</title><rect x="94.5447%" y="3157" width="0.0239%" height="15" fill="rgb(240,176,51)" fg:x="19757" fg:w="5"/><text x="94.7947%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::Analyze (4 samples, 0.02%)</title><rect x="94.5495%" y="3141" width="0.0191%" height="15" fill="rgb(249,146,41)" fg:x="19758" fg:w="4"/><text x="94.7995%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::FeedbackCellRef, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, v8::internal::compiler::NodeOriginTable*, int, v8::internal::CodeKind, v8::base::Flags (13 samples, 0.06%)</title><rect x="94.5447%" y="3189" width="0.0622%" height="15" fill="rgb(213,208,4)" fg:x="19757" fg:w="13"/><text x="94.7947%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (8 samples, 0.04%)</title><rect x="94.5686%" y="3173" width="0.0383%" height="15" fill="rgb(245,84,36)" fg:x="19762" fg:w="8"/><text x="94.8186%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (8 samples, 0.04%)</title><rect x="94.5686%" y="3157" width="0.0383%" height="15" fill="rgb(254,84,18)" fg:x="19762" fg:w="8"/><text x="94.8186%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (14 samples, 0.07%)</title><rect x="94.5447%" y="3221" width="0.0670%" height="15" fill="rgb(225,38,54)" fg:x="19757" fg:w="14"/><text x="94.7947%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphBuilderPhase::Run (14 samples, 0.07%)</title><rect x="94.5447%" y="3205" width="0.0670%" height="15" fill="rgb(246,50,30)" fg:x="19757" fg:w="14"/><text x="94.7947%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSCallReducer::Reduce (3 samples, 0.01%)</title><rect x="94.6595%" y="3141" width="0.0144%" height="15" fill="rgb(246,148,9)" fg:x="19781" fg:w="3"/><text x="94.9095%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliningHeuristic::Reduce (3 samples, 0.01%)</title><rect x="94.6787%" y="3141" width="0.0144%" height="15" fill="rgb(223,75,4)" fg:x="19785" fg:w="3"/><text x="94.9287%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliningHeuristic::InlineCandidate (3 samples, 0.01%)</title><rect x="94.6787%" y="3125" width="0.0144%" height="15" fill="rgb(239,148,41)" fg:x="19785" fg:w="3"/><text x="94.9287%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliner::ReduceJSCall (3 samples, 0.01%)</title><rect x="94.6787%" y="3109" width="0.0144%" height="15" fill="rgb(205,195,3)" fg:x="19785" fg:w="3"/><text x="94.9287%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (21 samples, 0.10%)</title><rect x="94.6165%" y="3173" width="0.1005%" height="15" fill="rgb(254,161,1)" fg:x="19772" fg:w="21"/><text x="94.8665%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (18 samples, 0.09%)</title><rect x="94.6308%" y="3157" width="0.0861%" height="15" fill="rgb(211,229,8)" fg:x="19775" fg:w="18"/><text x="94.8808%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSNativeContextSpecialization::Reduce (5 samples, 0.02%)</title><rect x="94.6930%" y="3141" width="0.0239%" height="15" fill="rgb(220,97,9)" fg:x="19788" fg:w="5"/><text x="94.9430%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::FeedbackCellRef, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, v8::internal::compiler::NodeOriginTable*, int, v8::internal::CodeKind, v8::base::Flags (3 samples, 0.01%)</title><rect x="94.7217%" y="3125" width="0.0144%" height="15" fill="rgb(240,218,8)" fg:x="19794" fg:w="3"/><text x="94.9717%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeGraphBuilder::CreateGraph (3 samples, 0.01%)</title><rect x="94.7217%" y="3109" width="0.0144%" height="15" fill="rgb(250,44,0)" fg:x="19794" fg:w="3"/><text x="94.9717%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeGraphBuilder::VisitBytecodes (3 samples, 0.01%)</title><rect x="94.7217%" y="3093" width="0.0144%" height="15" fill="rgb(236,41,53)" fg:x="19794" fg:w="3"/><text x="94.9717%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (27 samples, 0.13%)</title><rect x="94.6165%" y="3189" width="0.1292%" height="15" fill="rgb(218,227,13)" fg:x="19772" fg:w="27"/><text x="94.8665%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliningHeuristic::Finalize (6 samples, 0.03%)</title><rect x="94.7169%" y="3173" width="0.0287%" height="15" fill="rgb(217,94,32)" fg:x="19793" fg:w="6"/><text x="94.9669%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliningHeuristic::InlineCandidate (5 samples, 0.02%)</title><rect x="94.7217%" y="3157" width="0.0239%" height="15" fill="rgb(213,217,12)" fg:x="19794" fg:w="5"/><text x="94.9717%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSInliner::ReduceJSCall (5 samples, 0.02%)</title><rect x="94.7217%" y="3141" width="0.0239%" height="15" fill="rgb(229,13,46)" fg:x="19794" fg:w="5"/><text x="94.9717%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::CreateGraph (44 samples, 0.21%)</title><rect x="94.5447%" y="3237" width="0.2106%" height="15" fill="rgb(243,139,5)" fg:x="19757" fg:w="44"/><text x="94.7947%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (30 samples, 0.14%)</title><rect x="94.6117%" y="3221" width="0.1436%" height="15" fill="rgb(249,38,45)" fg:x="19771" fg:w="30"/><text x="94.8617%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::InliningPhase::Run (30 samples, 0.14%)</title><rect x="94.6117%" y="3205" width="0.1436%" height="15" fill="rgb(216,70,11)" fg:x="19771" fg:w="30"/><text x="94.8617%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::BranchConditionDuplicationPhase&gt; (3 samples, 0.01%)</title><rect x="94.7552%" y="3221" width="0.0144%" height="15" fill="rgb(253,101,25)" fg:x="19801" fg:w="3"/><text x="95.0052%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::Schedule::AddNode (3 samples, 0.01%)</title><rect x="94.7983%" y="3109" width="0.0144%" height="15" fill="rgb(207,197,30)" fg:x="19810" fg:w="3"/><text x="95.0483%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::CFGBuilder::BuildBlockForNode (4 samples, 0.02%)</title><rect x="94.7983%" y="3125" width="0.0191%" height="15" fill="rgb(238,87,13)" fg:x="19810" fg:w="4"/><text x="95.0483%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::BuildCFG (11 samples, 0.05%)</title><rect x="94.7696%" y="3189" width="0.0526%" height="15" fill="rgb(215,155,8)" fg:x="19804" fg:w="11"/><text x="95.0196%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::CFGBuilder::Run (10 samples, 0.05%)</title><rect x="94.7744%" y="3173" width="0.0479%" height="15" fill="rgb(239,166,38)" fg:x="19805" fg:w="10"/><text x="95.0244%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::CFGBuilder::Queue (6 samples, 0.03%)</title><rect x="94.7935%" y="3157" width="0.0287%" height="15" fill="rgb(240,194,35)" fg:x="19809" fg:w="6"/><text x="95.0435%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::CFGBuilder::BuildBlocksForSuccessors (5 samples, 0.02%)</title><rect x="94.7983%" y="3141" width="0.0239%" height="15" fill="rgb(219,10,44)" fg:x="19810" fg:w="5"/><text x="95.0483%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::PrepareUses (5 samples, 0.02%)</title><rect x="94.8222%" y="3189" width="0.0239%" height="15" fill="rgb(251,220,35)" fg:x="19815" fg:w="5"/><text x="95.0722%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PrepareUsesVisitor::Run (5 samples, 0.02%)</title><rect x="94.8222%" y="3173" width="0.0239%" height="15" fill="rgb(218,117,13)" fg:x="19815" fg:w="5"/><text x="95.0722%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PrepareUsesVisitor::VisitInputs (5 samples, 0.02%)</title><rect x="94.8222%" y="3157" width="0.0239%" height="15" fill="rgb(221,213,40)" fg:x="19815" fg:w="5"/><text x="95.0722%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::ScheduleEarly (3 samples, 0.01%)</title><rect x="94.8462%" y="3189" width="0.0144%" height="15" fill="rgb(251,224,35)" fg:x="19820" fg:w="3"/><text x="95.0962%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleEarlyNodeVisitor::Run(v8::internal::ZoneVector (3 samples, 0.01%)</title><rect x="94.8462%" y="3173" width="0.0144%" height="15" fill="rgb(241,33,39)" fg:x="19820" fg:w="3"/><text x="95.0962%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleLateNodeVisitor::SplitNode (9 samples, 0.04%)</title><rect x="94.8749%" y="3141" width="0.0431%" height="15" fill="rgb(222,74,17)" fg:x="19826" fg:w="9"/><text x="95.1249%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::FuseFloatingControl (5 samples, 0.02%)</title><rect x="94.9179%" y="3141" width="0.0239%" height="15" fill="rgb(225,103,0)" fg:x="19835" fg:w="5"/><text x="95.1679%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::ScheduleLate (25 samples, 0.12%)</title><rect x="94.8605%" y="3189" width="0.1196%" height="15" fill="rgb(240,0,12)" fg:x="19823" fg:w="25"/><text x="95.1105%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (25 samples, 0.12%)</title><rect x="94.8605%" y="3173" width="0.1196%" height="15" fill="rgb(233,213,37)" fg:x="19823" fg:w="25"/><text x="95.1105%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleLateNodeVisitor::VisitNode (25 samples, 0.12%)</title><rect x="94.8605%" y="3157" width="0.1196%" height="15" fill="rgb(225,84,52)" fg:x="19823" fg:w="25"/><text x="95.1105%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::UpdatePlacement (6 samples, 0.03%)</title><rect x="94.9514%" y="3141" width="0.0287%" height="15" fill="rgb(247,160,51)" fg:x="19842" fg:w="6"/><text x="95.2014%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::DecrementUnscheduledUseCount (4 samples, 0.02%)</title><rect x="94.9610%" y="3125" width="0.0191%" height="15" fill="rgb(244,60,51)" fg:x="19844" fg:w="4"/><text x="95.2110%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (45 samples, 0.22%)</title><rect x="94.7696%" y="3205" width="0.2153%" height="15" fill="rgb(233,114,7)" fg:x="19804" fg:w="45"/><text x="95.0196%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (48 samples, 0.23%)</title><rect x="94.7696%" y="3221" width="0.2297%" height="15" fill="rgb(246,136,16)" fg:x="19804" fg:w="48"/><text x="95.0196%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::ZoneStats::ReturnZone (3 samples, 0.01%)</title><rect x="94.9849%" y="3205" width="0.0144%" height="15" fill="rgb(243,114,45)" fg:x="19849" fg:w="3"/><text x="95.2349%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::Zone::~Zone (3 samples, 0.01%)</title><rect x="94.9849%" y="3189" width="0.0144%" height="15" fill="rgb(247,183,43)" fg:x="19849" fg:w="3"/><text x="95.2349%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::DecompressionOptimizationPhase&gt; (3 samples, 0.01%)</title><rect x="95.0089%" y="3221" width="0.0144%" height="15" fill="rgb(251,210,42)" fg:x="19854" fg:w="3"/><text x="95.2589%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::DecompressionOptimizationPhase::Run (3 samples, 0.01%)</title><rect x="95.0089%" y="3205" width="0.0144%" height="15" fill="rgb(221,88,35)" fg:x="19854" fg:w="3"/><text x="95.2589%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::DecompressionOptimizer::Reduce (3 samples, 0.01%)</title><rect x="95.0089%" y="3189" width="0.0144%" height="15" fill="rgb(242,21,20)" fg:x="19854" fg:w="3"/><text x="95.2589%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::DecompressionOptimizer::MarkNodes (3 samples, 0.01%)</title><rect x="95.0089%" y="3173" width="0.0144%" height="15" fill="rgb(233,226,36)" fg:x="19854" fg:w="3"/><text x="95.2589%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::DecompressionOptimizer::MarkNodeInputs (3 samples, 0.01%)</title><rect x="95.0089%" y="3157" width="0.0144%" height="15" fill="rgb(243,189,34)" fg:x="19854" fg:w="3"/><text x="95.2589%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EarlyGraphTrimmingPhase&gt; (4 samples, 0.02%)</title><rect x="95.0232%" y="3221" width="0.0191%" height="15" fill="rgb(207,145,50)" fg:x="19857" fg:w="4"/><text x="95.2732%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::EarlyGraphTrimmingPhase::Run (4 samples, 0.02%)</title><rect x="95.0232%" y="3205" width="0.0191%" height="15" fill="rgb(242,1,50)" fg:x="19857" fg:w="4"/><text x="95.2732%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphTrimmer::TrimGraph (4 samples, 0.02%)</title><rect x="95.0232%" y="3189" width="0.0191%" height="15" fill="rgb(231,65,32)" fg:x="19857" fg:w="4"/><text x="95.2732%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EarlyOptimizationPhase&gt; (18 samples, 0.09%)</title><rect x="95.0424%" y="3221" width="0.0861%" height="15" fill="rgb(208,68,49)" fg:x="19861" fg:w="18"/><text x="95.2924%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::EarlyOptimizationPhase::Run (18 samples, 0.09%)</title><rect x="95.0424%" y="3205" width="0.0861%" height="15" fill="rgb(253,54,49)" fg:x="19861" fg:w="18"/><text x="95.2924%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (18 samples, 0.09%)</title><rect x="95.0424%" y="3189" width="0.0861%" height="15" fill="rgb(245,186,24)" fg:x="19861" fg:w="18"/><text x="95.2924%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (18 samples, 0.09%)</title><rect x="95.0424%" y="3173" width="0.0861%" height="15" fill="rgb(209,2,41)" fg:x="19861" fg:w="18"/><text x="95.2924%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (11 samples, 0.05%)</title><rect x="95.0758%" y="3157" width="0.0526%" height="15" fill="rgb(242,208,54)" fg:x="19868" fg:w="11"/><text x="95.3258%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::ValueNumberingReducer::Reduce (3 samples, 0.01%)</title><rect x="95.1141%" y="3141" width="0.0144%" height="15" fill="rgb(225,9,51)" fg:x="19876" fg:w="3"/><text x="95.3641%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (10 samples, 0.05%)</title><rect x="95.1285%" y="3189" width="0.0479%" height="15" fill="rgb(207,207,25)" fg:x="19879" fg:w="10"/><text x="95.3785%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (10 samples, 0.05%)</title><rect x="95.1285%" y="3173" width="0.0479%" height="15" fill="rgb(253,96,18)" fg:x="19879" fg:w="10"/><text x="95.3785%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (4 samples, 0.02%)</title><rect x="95.1572%" y="3157" width="0.0191%" height="15" fill="rgb(252,215,20)" fg:x="19885" fg:w="4"/><text x="95.4072%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphTrimmer::TrimGraph (3 samples, 0.01%)</title><rect x="95.1763%" y="3189" width="0.0144%" height="15" fill="rgb(245,227,26)" fg:x="19889" fg:w="3"/><text x="95.4263%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectControlLinearizer::StringCharCodeAt (3 samples, 0.01%)</title><rect x="95.2146%" y="3125" width="0.0144%" height="15" fill="rgb(241,208,0)" fg:x="19897" fg:w="3"/><text x="95.4646%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectControlLinearizer::ProcessNode (8 samples, 0.04%)</title><rect x="95.1955%" y="3157" width="0.0383%" height="15" fill="rgb(224,130,10)" fg:x="19893" fg:w="8"/><text x="95.4455%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectControlLinearizer::TryWireInStateEffect (8 samples, 0.04%)</title><rect x="95.1955%" y="3141" width="0.0383%" height="15" fill="rgb(237,29,0)" fg:x="19893" fg:w="8"/><text x="95.4455%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectControlLinearizer::Run (14 samples, 0.07%)</title><rect x="95.1955%" y="3173" width="0.0670%" height="15" fill="rgb(219,27,41)" fg:x="19893" fg:w="14"/><text x="95.4455%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::`anonymous namespace&apos;::BlockEffectControlMap::For (3 samples, 0.01%)</title><rect x="95.2481%" y="3157" width="0.0144%" height="15" fill="rgb(245,101,19)" fg:x="19904" fg:w="3"/><text x="95.4981%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearizeEffectControl (16 samples, 0.08%)</title><rect x="95.1907%" y="3189" width="0.0766%" height="15" fill="rgb(243,44,37)" fg:x="19892" fg:w="16"/><text x="95.4407%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PrepareUsesVisitor::InitializePlacement (3 samples, 0.01%)</title><rect x="95.2816%" y="3125" width="0.0144%" height="15" fill="rgb(228,213,43)" fg:x="19911" fg:w="3"/><text x="95.5316%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::PrepareUses (4 samples, 0.02%)</title><rect x="95.2816%" y="3173" width="0.0191%" height="15" fill="rgb(219,163,21)" fg:x="19911" fg:w="4"/><text x="95.5316%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PrepareUsesVisitor::Run (4 samples, 0.02%)</title><rect x="95.2816%" y="3157" width="0.0191%" height="15" fill="rgb(234,86,24)" fg:x="19911" fg:w="4"/><text x="95.5316%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PrepareUsesVisitor::VisitInputs (4 samples, 0.02%)</title><rect x="95.2816%" y="3141" width="0.0191%" height="15" fill="rgb(225,10,24)" fg:x="19911" fg:w="4"/><text x="95.5316%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (43 samples, 0.21%)</title><rect x="95.1285%" y="3221" width="0.2058%" height="15" fill="rgb(218,109,7)" fg:x="19879" fg:w="43"/><text x="95.3785%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectControlLinearizationPhase::Run (43 samples, 0.21%)</title><rect x="95.1285%" y="3205" width="0.2058%" height="15" fill="rgb(210,20,26)" fg:x="19879" fg:w="43"/><text x="95.3785%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (14 samples, 0.07%)</title><rect x="95.2673%" y="3189" width="0.0670%" height="15" fill="rgb(216,18,1)" fg:x="19908" fg:w="14"/><text x="95.5173%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::Scheduler::ScheduleLate (4 samples, 0.02%)</title><rect x="95.3151%" y="3173" width="0.0191%" height="15" fill="rgb(206,163,23)" fg:x="19918" fg:w="4"/><text x="95.5651%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleLateNodeVisitor::ProcessQueue (4 samples, 0.02%)</title><rect x="95.3151%" y="3157" width="0.0191%" height="15" fill="rgb(229,150,31)" fg:x="19918" fg:w="4"/><text x="95.5651%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::ScheduleLateNodeVisitor::VisitNode (4 samples, 0.02%)</title><rect x="95.3151%" y="3141" width="0.0191%" height="15" fill="rgb(231,10,5)" fg:x="19918" fg:w="4"/><text x="95.5651%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::EscapeAnalysis::Reduce (5 samples, 0.02%)</title><rect x="95.3486%" y="3173" width="0.0239%" height="15" fill="rgb(250,40,50)" fg:x="19925" fg:w="5"/><text x="95.5986%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::EffectGraphReducer::ReduceFrom (10 samples, 0.05%)</title><rect x="95.3343%" y="3189" width="0.0479%" height="15" fill="rgb(217,119,7)" fg:x="19922" fg:w="10"/><text x="95.5843%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (15 samples, 0.07%)</title><rect x="95.3343%" y="3221" width="0.0718%" height="15" fill="rgb(245,214,40)" fg:x="19922" fg:w="15"/><text x="95.5843%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::EscapeAnalysisPhase::Run (15 samples, 0.07%)</title><rect x="95.3343%" y="3205" width="0.0718%" height="15" fill="rgb(216,187,1)" fg:x="19922" fg:w="15"/><text x="95.5843%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (4 samples, 0.02%)</title><rect x="95.3869%" y="3189" width="0.0191%" height="15" fill="rgb(237,146,21)" fg:x="19933" fg:w="4"/><text x="95.6369%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (4 samples, 0.02%)</title><rect x="95.3869%" y="3173" width="0.0191%" height="15" fill="rgb(210,174,47)" fg:x="19933" fg:w="4"/><text x="95.6369%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (3 samples, 0.01%)</title><rect x="95.3917%" y="3157" width="0.0144%" height="15" fill="rgb(218,111,39)" fg:x="19934" fg:w="3"/><text x="95.6417%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::EscapeAnalysisReducer::Reduce (3 samples, 0.01%)</title><rect x="95.3917%" y="3141" width="0.0144%" height="15" fill="rgb(224,95,19)" fg:x="19934" fg:w="3"/><text x="95.6417%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::EscapeAnalysisReducer::ReduceFrameStateInputs (3 samples, 0.01%)</title><rect x="95.3917%" y="3125" width="0.0144%" height="15" fill="rgb(234,15,38)" fg:x="19934" fg:w="3"/><text x="95.6417%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::EscapeAnalysisReducer::ReduceDeoptState (3 samples, 0.01%)</title><rect x="95.3917%" y="3109" width="0.0144%" height="15" fill="rgb(246,56,12)" fg:x="19934" fg:w="3"/><text x="95.6417%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSGenericLowering::ReplaceWithRuntimeCall (3 samples, 0.01%)</title><rect x="95.4252%" y="3109" width="0.0144%" height="15" fill="rgb(247,16,17)" fg:x="19941" fg:w="3"/><text x="95.6752%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GenericLoweringPhase&gt; (8 samples, 0.04%)</title><rect x="95.4060%" y="3221" width="0.0383%" height="15" fill="rgb(215,151,11)" fg:x="19937" fg:w="8"/><text x="95.6560%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::GenericLoweringPhase::Run (8 samples, 0.04%)</title><rect x="95.4060%" y="3205" width="0.0383%" height="15" fill="rgb(225,16,24)" fg:x="19937" fg:w="8"/><text x="95.6560%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (7 samples, 0.03%)</title><rect x="95.4108%" y="3189" width="0.0335%" height="15" fill="rgb(217,117,5)" fg:x="19938" fg:w="7"/><text x="95.6608%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (7 samples, 0.03%)</title><rect x="95.4108%" y="3173" width="0.0335%" height="15" fill="rgb(246,187,53)" fg:x="19938" fg:w="7"/><text x="95.6608%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (4 samples, 0.02%)</title><rect x="95.4252%" y="3157" width="0.0191%" height="15" fill="rgb(241,71,40)" fg:x="19941" fg:w="4"/><text x="95.6752%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSGenericLowering::Reduce (4 samples, 0.02%)</title><rect x="95.4252%" y="3141" width="0.0191%" height="15" fill="rgb(231,67,39)" fg:x="19941" fg:w="4"/><text x="95.6752%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSGenericLowering::LowerJSStackCheck (4 samples, 0.02%)</title><rect x="95.4252%" y="3125" width="0.0191%" height="15" fill="rgb(222,120,24)" fg:x="19941" fg:w="4"/><text x="95.6752%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::BranchElimination::BranchElimination (4 samples, 0.02%)</title><rect x="95.4443%" y="3189" width="0.0191%" height="15" fill="rgb(248,3,3)" fg:x="19945" fg:w="4"/><text x="95.6943%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::AdvancedReducerWithControlPathState&lt;v8::internal::compiler::BranchCondition,0&gt;::AdvancedReducerWithControlPathState (4 samples, 0.02%)</title><rect x="95.4443%" y="3173" width="0.0191%" height="15" fill="rgb(228,218,5)" fg:x="19945" fg:w="4"/><text x="95.6943%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::BranchElimination::ReduceBranch (4 samples, 0.02%)</title><rect x="95.5257%" y="3125" width="0.0191%" height="15" fill="rgb(212,202,43)" fg:x="19962" fg:w="4"/><text x="95.7757%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::BranchElimination::Reduce (10 samples, 0.05%)</title><rect x="95.5209%" y="3141" width="0.0479%" height="15" fill="rgb(235,183,2)" fg:x="19961" fg:w="10"/><text x="95.7709%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::BranchElimination::ReduceIf (4 samples, 0.02%)</title><rect x="95.5496%" y="3125" width="0.0191%" height="15" fill="rgb(230,165,10)" fg:x="19967" fg:w="4"/><text x="95.7996%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::AdvancedReducerWithControlPathState&lt;v8::internal::compiler::BranchCondition,0&gt;::UpdateStates(v8::internal::compiler::Node*, v8::internal::compiler::ControlPathState (3 samples, 0.01%)</title><rect x="95.5544%" y="3109" width="0.0144%" height="15" fill="rgb(219,54,40)" fg:x="19968" fg:w="3"/><text x="95.8044%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::ControlPathState&lt;v8::internal::compiler::BranchCondition,0&gt;::AddStateInNewBlock (3 samples, 0.01%)</title><rect x="95.5544%" y="3093" width="0.0144%" height="15" fill="rgb(244,73,9)" fg:x="19968" fg:w="3"/><text x="95.8044%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::compiler::DeadCodeElimination::Reduce (5 samples, 0.02%)</title><rect x="95.5687%" y="3141" width="0.0239%" height="15" fill="rgb(212,32,45)" fg:x="19971" fg:w="5"/><text x="95.8187%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::DeadCodeElimination::ReduceNode (3 samples, 0.01%)</title><rect x="95.5783%" y="3125" width="0.0144%" height="15" fill="rgb(205,58,31)" fg:x="19973" fg:w="3"/><text x="95.8283%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::LateEscapeAnalysis::Reduce (5 samples, 0.02%)</title><rect x="95.5927%" y="3141" width="0.0239%" height="15" fill="rgb(250,120,43)" fg:x="19976" fg:w="5"/><text x="95.8427%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::MachineOperatorReducer::Reduce (4 samples, 0.02%)</title><rect x="95.6166%" y="3141" width="0.0191%" height="15" fill="rgb(235,13,10)" fg:x="19981" fg:w="4"/><text x="95.8666%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (40 samples, 0.19%)</title><rect x="95.4635%" y="3173" width="0.1914%" height="15" fill="rgb(232,219,31)" fg:x="19949" fg:w="40"/><text x="95.7135%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (32 samples, 0.15%)</title><rect x="95.5017%" y="3157" width="0.1531%" height="15" fill="rgb(218,157,51)" fg:x="19957" fg:w="32"/><text x="95.7517%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::ValueNumberingReducer::Reduce (4 samples, 0.02%)</title><rect x="95.6357%" y="3141" width="0.0191%" height="15" fill="rgb(211,91,52)" fg:x="19985" fg:w="4"/><text x="95.8857%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LateOptimizationPhase::Run (45 samples, 0.22%)</title><rect x="95.4443%" y="3205" width="0.2153%" height="15" fill="rgb(240,173,1)" fg:x="19945" fg:w="45"/><text x="95.6943%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (41 samples, 0.20%)</title><rect x="95.4635%" y="3189" width="0.1962%" height="15" fill="rgb(248,20,47)" fg:x="19949" fg:w="41"/><text x="95.7135%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LateOptimizationPhase&gt; (47 samples, 0.22%)</title><rect x="95.4443%" y="3221" width="0.2249%" height="15" fill="rgb(217,221,40)" fg:x="19945" fg:w="47"/><text x="95.6943%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::BranchElimination::Reduce (4 samples, 0.02%)</title><rect x="95.7027%" y="3141" width="0.0191%" height="15" fill="rgb(226,149,51)" fg:x="19999" fg:w="4"/><text x="95.9527%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::ConstantFoldingReducer::Reduce (3 samples, 0.01%)</title><rect x="95.7267%" y="3141" width="0.0144%" height="15" fill="rgb(252,193,7)" fg:x="20004" fg:w="3"/><text x="95.9767%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoadElimination::Reduce (5 samples, 0.02%)</title><rect x="95.7410%" y="3141" width="0.0239%" height="15" fill="rgb(205,123,0)" fg:x="20007" fg:w="5"/><text x="95.9910%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::RedundancyElimination::Reduce (3 samples, 0.01%)</title><rect x="95.7649%" y="3141" width="0.0144%" height="15" fill="rgb(233,173,25)" fg:x="20012" fg:w="3"/><text x="96.0149%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (25 samples, 0.12%)</title><rect x="95.6692%" y="3221" width="0.1196%" height="15" fill="rgb(216,63,32)" fg:x="19992" fg:w="25"/><text x="95.9192%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoadEliminationPhase::Run (25 samples, 0.12%)</title><rect x="95.6692%" y="3205" width="0.1196%" height="15" fill="rgb(209,56,45)" fg:x="19992" fg:w="25"/><text x="95.9192%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (24 samples, 0.11%)</title><rect x="95.6740%" y="3189" width="0.1148%" height="15" fill="rgb(226,111,49)" fg:x="19993" fg:w="24"/><text x="95.9240%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (23 samples, 0.11%)</title><rect x="95.6788%" y="3173" width="0.1101%" height="15" fill="rgb(244,181,21)" fg:x="19994" fg:w="23"/><text x="95.9288%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (20 samples, 0.10%)</title><rect x="95.6932%" y="3157" width="0.0957%" height="15" fill="rgb(222,126,15)" fg:x="19997" fg:w="20"/><text x="95.9432%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoopFinderImpl::PropagateBackward (5 samples, 0.02%)</title><rect x="95.7937%" y="3173" width="0.0239%" height="15" fill="rgb(222,95,17)" fg:x="20018" fg:w="5"/><text x="96.0437%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoopFinder::BuildLoopTree (7 samples, 0.03%)</title><rect x="95.7889%" y="3189" width="0.0335%" height="15" fill="rgb(254,46,5)" fg:x="20017" fg:w="7"/><text x="96.0389%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoopPeelingPhase&gt; (8 samples, 0.04%)</title><rect x="95.7889%" y="3221" width="0.0383%" height="15" fill="rgb(236,216,35)" fg:x="20017" fg:w="8"/><text x="96.0389%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoopPeelingPhase::Run (8 samples, 0.04%)</title><rect x="95.7889%" y="3205" width="0.0383%" height="15" fill="rgb(217,187,26)" fg:x="20017" fg:w="8"/><text x="96.0389%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase,v8::internal::compiler::MachineOperatorReducer::SignallingNanPropagation&gt; (14 samples, 0.07%)</title><rect x="95.8272%" y="3221" width="0.0670%" height="15" fill="rgb(207,192,25)" fg:x="20025" fg:w="14"/><text x="96.0772%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::MachineOperatorOptimizationPhase::Run (14 samples, 0.07%)</title><rect x="95.8272%" y="3205" width="0.0670%" height="15" fill="rgb(253,135,27)" fg:x="20025" fg:w="14"/><text x="96.0772%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (14 samples, 0.07%)</title><rect x="95.8272%" y="3189" width="0.0670%" height="15" fill="rgb(211,122,29)" fg:x="20025" fg:w="14"/><text x="96.0772%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (14 samples, 0.07%)</title><rect x="95.8272%" y="3173" width="0.0670%" height="15" fill="rgb(233,162,40)" fg:x="20025" fg:w="14"/><text x="96.0772%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (8 samples, 0.04%)</title><rect x="95.8559%" y="3157" width="0.0383%" height="15" fill="rgb(222,184,47)" fg:x="20031" fg:w="8"/><text x="96.1059%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::ValueNumberingReducer::Reduce (6 samples, 0.03%)</title><rect x="95.8654%" y="3141" width="0.0287%" height="15" fill="rgb(249,99,23)" fg:x="20033" fg:w="6"/><text x="96.1154%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MemoryOptimizationPhase&gt; (10 samples, 0.05%)</title><rect x="95.8941%" y="3221" width="0.0479%" height="15" fill="rgb(214,60,12)" fg:x="20039" fg:w="10"/><text x="96.1441%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::MemoryOptimizationPhase::Run (10 samples, 0.05%)</title><rect x="95.8941%" y="3205" width="0.0479%" height="15" fill="rgb(250,229,36)" fg:x="20039" fg:w="10"/><text x="96.1441%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::MemoryOptimizer::Optimize (5 samples, 0.02%)</title><rect x="95.9181%" y="3189" width="0.0239%" height="15" fill="rgb(232,195,10)" fg:x="20044" fg:w="5"/><text x="96.1681%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::MemoryOptimizer::VisitNode (3 samples, 0.01%)</title><rect x="95.9276%" y="3173" width="0.0144%" height="15" fill="rgb(205,213,31)" fg:x="20046" fg:w="3"/><text x="96.1776%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::RepresentationSelector::RunLowerPhase (4 samples, 0.02%)</title><rect x="95.9516%" y="3173" width="0.0191%" height="15" fill="rgb(237,43,8)" fg:x="20051" fg:w="4"/><text x="96.2016%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::RepresentationSelector::RunPropagatePhase (4 samples, 0.02%)</title><rect x="95.9707%" y="3173" width="0.0191%" height="15" fill="rgb(216,208,3)" fg:x="20055" fg:w="4"/><text x="96.2207%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase,v8::internal::compiler::Linkage *&amp;&gt; (14 samples, 0.07%)</title><rect x="95.9420%" y="3221" width="0.0670%" height="15" fill="rgb(228,179,44)" fg:x="20049" fg:w="14"/><text x="96.1920%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::SimplifiedLoweringPhase::Run (14 samples, 0.07%)</title><rect x="95.9420%" y="3205" width="0.0670%" height="15" fill="rgb(230,192,27)" fg:x="20049" fg:w="14"/><text x="96.1920%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::SimplifiedLowering::LowerAllNodes (14 samples, 0.07%)</title><rect x="95.9420%" y="3189" width="0.0670%" height="15" fill="rgb(251,30,38)" fg:x="20049" fg:w="14"/><text x="96.1920%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::RepresentationSelector::RunRetypePhase (4 samples, 0.02%)</title><rect x="95.9899%" y="3173" width="0.0191%" height="15" fill="rgb(246,55,52)" fg:x="20059" fg:w="4"/><text x="96.2399%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::RepresentationSelector::RetypeNode (4 samples, 0.02%)</title><rect x="95.9899%" y="3157" width="0.0191%" height="15" fill="rgb(249,79,26)" fg:x="20059" fg:w="4"/><text x="96.2399%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphTrimmer::TrimGraph (4 samples, 0.02%)</title><rect x="96.0090%" y="3189" width="0.0191%" height="15" fill="rgb(220,202,16)" fg:x="20063" fg:w="4"/><text x="96.2590%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::StoreStoreEliminationPhase&gt; (9 samples, 0.04%)</title><rect x="96.0090%" y="3221" width="0.0431%" height="15" fill="rgb(250,170,23)" fg:x="20063" fg:w="9"/><text x="96.2590%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::StoreStoreEliminationPhase::Run (9 samples, 0.04%)</title><rect x="96.0090%" y="3205" width="0.0431%" height="15" fill="rgb(230,7,37)" fg:x="20063" fg:w="9"/><text x="96.2590%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::StoreStoreElimination::Run (5 samples, 0.02%)</title><rect x="96.0281%" y="3189" width="0.0239%" height="15" fill="rgb(213,71,1)" fg:x="20067" fg:w="5"/><text x="96.2781%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::`anonymous namespace&apos;::RedundantStoreFinder::Visit (4 samples, 0.02%)</title><rect x="96.0329%" y="3173" width="0.0191%" height="15" fill="rgb(227,87,39)" fg:x="20068" fg:w="4"/><text x="96.2829%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TypedLoweringPhase&gt; (12 samples, 0.06%)</title><rect x="96.0521%" y="3221" width="0.0574%" height="15" fill="rgb(210,41,29)" fg:x="20072" fg:w="12"/><text x="96.3021%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::TypedLoweringPhase::Run (12 samples, 0.06%)</title><rect x="96.0521%" y="3205" width="0.0574%" height="15" fill="rgb(206,191,31)" fg:x="20072" fg:w="12"/><text x="96.3021%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (12 samples, 0.06%)</title><rect x="96.0521%" y="3189" width="0.0574%" height="15" fill="rgb(247,75,54)" fg:x="20072" fg:w="12"/><text x="96.3021%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (12 samples, 0.06%)</title><rect x="96.0521%" y="3173" width="0.0574%" height="15" fill="rgb(208,54,50)" fg:x="20072" fg:w="12"/><text x="96.3021%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (11 samples, 0.05%)</title><rect x="96.0569%" y="3157" width="0.0526%" height="15" fill="rgb(214,90,37)" fg:x="20073" fg:w="11"/><text x="96.3069%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSTypedLowering::Reduce (4 samples, 0.02%)</title><rect x="96.0903%" y="3141" width="0.0191%" height="15" fill="rgb(220,132,6)" fg:x="20080" fg:w="4"/><text x="96.3403%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LoopVariableOptimizer::Run (4 samples, 0.02%)</title><rect x="96.1095%" y="3189" width="0.0191%" height="15" fill="rgb(213,167,7)" fg:x="20084" fg:w="4"/><text x="96.3595%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::Typer::Visitor::TypeNode (3 samples, 0.01%)</title><rect x="96.1382%" y="3109" width="0.0144%" height="15" fill="rgb(243,36,27)" fg:x="20090" fg:w="3"/><text x="96.3882%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceNode (6 samples, 0.03%)</title><rect x="96.1286%" y="3173" width="0.0287%" height="15" fill="rgb(235,147,12)" fg:x="20088" fg:w="6"/><text x="96.3786%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::ReduceTop (6 samples, 0.03%)</title><rect x="96.1286%" y="3157" width="0.0287%" height="15" fill="rgb(212,198,44)" fg:x="20088" fg:w="6"/><text x="96.3786%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::GraphReducer::Reduce (4 samples, 0.02%)</title><rect x="96.1382%" y="3141" width="0.0191%" height="15" fill="rgb(218,68,50)" fg:x="20090" fg:w="4"/><text x="96.3882%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::Typer::Visitor::Reduce (4 samples, 0.02%)</title><rect x="96.1382%" y="3125" width="0.0191%" height="15" fill="rgb(224,79,48)" fg:x="20090" fg:w="4"/><text x="96.3882%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TyperPhase,v8::internal::compiler::Typer *&gt; (11 samples, 0.05%)</title><rect x="96.1095%" y="3221" width="0.0526%" height="15" fill="rgb(213,191,50)" fg:x="20084" fg:w="11"/><text x="96.3595%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::TyperPhase::Run (11 samples, 0.05%)</title><rect x="96.1095%" y="3205" width="0.0526%" height="15" fill="rgb(254,146,10)" fg:x="20084" fg:w="11"/><text x="96.3595%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::Typer::Run(v8::internal::ZoneVector (7 samples, 0.03%)</title><rect x="96.1286%" y="3189" width="0.0335%" height="15" fill="rgb(215,175,11)" fg:x="20088" fg:w="7"/><text x="96.3786%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateFPRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (7 samples, 0.03%)</title><rect x="96.1669%" y="3173" width="0.0335%" height="15" fill="rgb(207,49,7)" fg:x="20096" fg:w="7"/><text x="96.4169%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (7 samples, 0.03%)</title><rect x="96.1669%" y="3157" width="0.0335%" height="15" fill="rgb(234,144,29)" fg:x="20096" fg:w="7"/><text x="96.4169%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::UpdateDeferredFixedRanges (3 samples, 0.01%)</title><rect x="96.1861%" y="3141" width="0.0144%" height="15" fill="rgb(213,222,48)" fg:x="20100" fg:w="3"/><text x="96.4361%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::ComputeStateFromManyPredecessors(v8::internal::compiler::InstructionBlock*, v8::internal::ZoneUnorderedSet (4 samples, 0.02%)</title><rect x="96.2339%" y="3141" width="0.0191%" height="15" fill="rgb(222,8,6)" fg:x="20110" fg:w="4"/><text x="96.4839%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::ForwardStateTo (3 samples, 0.01%)</title><rect x="96.2531%" y="3141" width="0.0144%" height="15" fill="rgb(221,114,49)" fg:x="20114" fg:w="3"/><text x="96.5031%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::PickRegisterThatIsAvailableLongest(v8::internal::compiler::LiveRange*, int, v8::base::Vector (3 samples, 0.01%)</title><rect x="96.2770%" y="3109" width="0.0144%" height="15" fill="rgb(250,140,42)" fg:x="20119" fg:w="3"/><text x="96.5270%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::ProcessCurrentRange (8 samples, 0.04%)</title><rect x="96.2674%" y="3141" width="0.0383%" height="15" fill="rgb(250,150,27)" fg:x="20117" fg:w="8"/><text x="96.5174%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::TryAllocateFreeReg(v8::internal::compiler::LiveRange*, v8::base::Vector (6 samples, 0.03%)</title><rect x="96.2770%" y="3125" width="0.0287%" height="15" fill="rgb(252,159,3)" fg:x="20119" fg:w="6"/><text x="96.5270%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRange::SplitAt (3 samples, 0.01%)</title><rect x="96.2913%" y="3109" width="0.0144%" height="15" fill="rgb(241,182,3)" fg:x="20122" fg:w="3"/><text x="96.5413%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::ReloadLiveRanges(v8::internal::ZoneUnorderedSet (3 samples, 0.01%)</title><rect x="96.3057%" y="3141" width="0.0144%" height="15" fill="rgb(236,3,9)" fg:x="20125" fg:w="3"/><text x="96.5557%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::UpdateDeferredFixedRanges (5 samples, 0.02%)</title><rect x="96.3344%" y="3141" width="0.0239%" height="15" fill="rgb(223,227,51)" fg:x="20131" fg:w="5"/><text x="96.5844%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (34 samples, 0.16%)</title><rect x="96.2004%" y="3173" width="0.1627%" height="15" fill="rgb(232,133,30)" fg:x="20103" fg:w="34"/><text x="96.4504%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (34 samples, 0.16%)</title><rect x="96.2004%" y="3157" width="0.1627%" height="15" fill="rgb(209,93,27)" fg:x="20103" fg:w="34"/><text x="96.4504%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRangeBuilder::AddInitialIntervals (3 samples, 0.01%)</title><rect x="96.3775%" y="3141" width="0.0144%" height="15" fill="rgb(208,108,34)" fg:x="20140" fg:w="3"/><text x="96.6275%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRangeBuilder::Use (3 samples, 0.01%)</title><rect x="96.4253%" y="3125" width="0.0144%" height="15" fill="rgb(215,189,13)" fg:x="20150" fg:w="3"/><text x="96.6753%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRangeBuilder::ProcessInstructions (9 samples, 0.04%)</title><rect x="96.4014%" y="3141" width="0.0431%" height="15" fill="rgb(206,88,23)" fg:x="20145" fg:w="9"/><text x="96.6514%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::BuildLiveRangesPhase&gt; (16 samples, 0.08%)</title><rect x="96.3775%" y="3173" width="0.0766%" height="15" fill="rgb(240,173,0)" fg:x="20140" fg:w="16"/><text x="96.6275%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRangeBuilder::BuildLiveRanges (16 samples, 0.08%)</title><rect x="96.3775%" y="3157" width="0.0766%" height="15" fill="rgb(223,106,52)" fg:x="20140" fg:w="16"/><text x="96.6275%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MeetRegisterConstraintsPhase&gt; (3 samples, 0.01%)</title><rect x="96.4588%" y="3173" width="0.0144%" height="15" fill="rgb(206,130,16)" fg:x="20157" fg:w="3"/><text x="96.7088%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::ConstraintBuilder::MeetRegisterConstraints (3 samples, 0.01%)</title><rect x="96.4588%" y="3157" width="0.0144%" height="15" fill="rgb(220,54,25)" fg:x="20157" fg:w="3"/><text x="96.7088%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::OptimizeMovesPhase&gt; (5 samples, 0.02%)</title><rect x="96.4732%" y="3173" width="0.0239%" height="15" fill="rgb(210,4,38)" fg:x="20160" fg:w="5"/><text x="96.7232%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::MoveOptimizer::Run (5 samples, 0.02%)</title><rect x="96.4732%" y="3157" width="0.0239%" height="15" fill="rgb(238,94,39)" fg:x="20160" fg:w="5"/><text x="96.7232%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::PopulateReferenceMapsPhase&gt; (3 samples, 0.01%)</title><rect x="96.4971%" y="3173" width="0.0144%" height="15" fill="rgb(234,124,34)" fg:x="20165" fg:w="3"/><text x="96.7471%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::ReferenceMapPopulator::PopulateReferenceMaps (3 samples, 0.01%)</title><rect x="96.4971%" y="3157" width="0.0144%" height="15" fill="rgb(221,91,40)" fg:x="20165" fg:w="3"/><text x="96.7471%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ResolveControlFlowPhase&gt; (6 samples, 0.03%)</title><rect x="96.5115%" y="3173" width="0.0287%" height="15" fill="rgb(246,53,28)" fg:x="20168" fg:w="6"/><text x="96.7615%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::LiveRangeConnector::ResolveControlFlow (6 samples, 0.03%)</title><rect x="96.5115%" y="3157" width="0.0287%" height="15" fill="rgb(229,109,7)" fg:x="20168" fg:w="6"/><text x="96.7615%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::TopLevelLiveRange::GetChildCovers (3 samples, 0.01%)</title><rect x="96.5258%" y="3141" width="0.0144%" height="15" fill="rgb(249,117,8)" fg:x="20171" fg:w="3"/><text x="96.7758%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::TopTierRegisterAllocationData::TopTierRegisterAllocationData(v8::internal::RegisterConfiguration const*, v8::internal::Zone*, v8::internal::compiler::Frame*, v8::internal::compiler::InstructionSequence*, v8::base::Flags (4 samples, 0.02%)</title><rect x="96.5450%" y="3173" width="0.0191%" height="15" fill="rgb(210,181,1)" fg:x="20175" fg:w="4"/><text x="96.7950%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (86 samples, 0.41%)</title><rect x="96.1669%" y="3189" width="0.4115%" height="15" fill="rgb(211,66,1)" fg:x="20096" fg:w="86"/><text x="96.4169%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::ZoneStats::ReturnZone (3 samples, 0.01%)</title><rect x="96.5641%" y="3173" width="0.0144%" height="15" fill="rgb(221,90,14)" fg:x="20179" fg:w="3"/><text x="96.8141%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::Zone::~Zone (3 samples, 0.01%)</title><rect x="96.5641%" y="3157" width="0.0144%" height="15" fill="rgb(219,222,44)" fg:x="20179" fg:w="3"/><text x="96.8141%" y="3167.50"></text></g><g><title>deno.exe`_free_base(void*) (3 samples, 0.01%)</title><rect x="96.5641%" y="3141" width="0.0144%" height="15" fill="rgb(246,34,33)" fg:x="20179" fg:w="3"/><text x="96.8141%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::JumpThreading::ApplyForwarding(v8::internal::Zone*, v8::internal::ZoneVector (4 samples, 0.02%)</title><rect x="96.5832%" y="3173" width="0.0191%" height="15" fill="rgb(227,135,41)" fg:x="20183" fg:w="4"/><text x="96.8332%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::AllocateRegisters (94 samples, 0.45%)</title><rect x="96.1669%" y="3205" width="0.4498%" height="15" fill="rgb(226,15,14)" fg:x="20096" fg:w="94"/><text x="96.4169%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::JumpThreadingPhase,bool &amp;&gt; (7 samples, 0.03%)</title><rect x="96.5832%" y="3189" width="0.0335%" height="15" fill="rgb(236,148,47)" fg:x="20183" fg:w="7"/><text x="96.8332%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::JumpThreading::ComputeForwarding(v8::internal::Zone*, v8::internal::ZoneVector (3 samples, 0.01%)</title><rect x="96.6024%" y="3173" width="0.0144%" height="15" fill="rgb(233,162,52)" fg:x="20187" fg:w="3"/><text x="96.8524%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::VisitControl (6 samples, 0.03%)</title><rect x="96.6359%" y="3125" width="0.0287%" height="15" fill="rgb(244,35,28)" fg:x="20194" fg:w="6"/><text x="96.8859%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::VisitWordCompareZero(v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::FlagsContinuationT (3 samples, 0.01%)</title><rect x="96.6502%" y="3109" width="0.0144%" height="15" fill="rgb(205,121,10)" fg:x="20197" fg:w="3"/><text x="96.9002%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::VisitDeoptimizeUnless (5 samples, 0.02%)</title><rect x="96.6646%" y="3125" width="0.0239%" height="15" fill="rgb(250,58,18)" fg:x="20200" fg:w="5"/><text x="96.9146%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::VisitWordCompareZero(v8::internal::compiler::Node*, v8::internal::compiler::Node*, v8::internal::compiler::FlagsContinuationT (5 samples, 0.02%)</title><rect x="96.6646%" y="3109" width="0.0239%" height="15" fill="rgb(216,37,13)" fg:x="20200" fg:w="5"/><text x="96.9146%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::VisitBlock (17 samples, 0.08%)</title><rect x="96.6263%" y="3141" width="0.0814%" height="15" fill="rgb(221,215,42)" fg:x="20192" fg:w="17"/><text x="96.8763%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InstructionSelectionPhase,v8::internal::compiler::Linkage *&amp;&gt; (18 samples, 0.09%)</title><rect x="96.6263%" y="3205" width="0.0861%" height="15" fill="rgb(217,214,19)" fg:x="20192" fg:w="18"/><text x="96.8763%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectionPhase::Run (18 samples, 0.09%)</title><rect x="96.6263%" y="3189" width="0.0861%" height="15" fill="rgb(233,139,13)" fg:x="20192" fg:w="18"/><text x="96.8763%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelector::SelectInstructions (18 samples, 0.09%)</title><rect x="96.6263%" y="3173" width="0.0861%" height="15" fill="rgb(247,168,23)" fg:x="20192" fg:w="18"/><text x="96.8763%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::InstructionSelectorT&lt;v8::internal::compiler::TurbofanAdapter&gt;::SelectInstructions (18 samples, 0.09%)</title><rect x="96.6263%" y="3157" width="0.0861%" height="15" fill="rgb(207,202,1)" fg:x="20192" fg:w="18"/><text x="96.8763%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::SelectInstructions (118 samples, 0.56%)</title><rect x="96.1621%" y="3221" width="0.5647%" height="15" fill="rgb(220,155,48)" fg:x="20095" fg:w="118"/><text x="96.4121%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::ZoneStats::ReturnZone (3 samples, 0.01%)</title><rect x="96.7124%" y="3205" width="0.0144%" height="15" fill="rgb(250,43,26)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::Zone::~Zone (3 samples, 0.01%)</title><rect x="96.7124%" y="3189" width="0.0144%" height="15" fill="rgb(212,190,23)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3199.50"></text></g><g><title>deno.exe`_free_base(void*) (3 samples, 0.01%)</title><rect x="96.7124%" y="3173" width="0.0144%" height="15" fill="rgb(216,39,24)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3183.50"></text></g><g><title>`0x7FFAA21CAB01 (3 samples, 0.01%)</title><rect x="96.7124%" y="3157" width="0.0144%" height="15" fill="rgb(252,113,16)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3167.50"></text></g><g><title>`0x7FFAA21CBE34 (3 samples, 0.01%)</title><rect x="96.7124%" y="3141" width="0.0144%" height="15" fill="rgb(208,113,19)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3151.50"></text></g><g><title>`0x7FFAA21C9718 (3 samples, 0.01%)</title><rect x="96.7124%" y="3125" width="0.0144%" height="15" fill="rgb(234,107,25)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3135.50"></text></g><g><title>`0x7FFAA21D4B0B (3 samples, 0.01%)</title><rect x="96.7124%" y="3109" width="0.0144%" height="15" fill="rgb(234,217,51)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3119.50"></text></g><g><title>`0x7FFAA21D63EA (3 samples, 0.01%)</title><rect x="96.7124%" y="3093" width="0.0144%" height="15" fill="rgb(251,29,42)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3103.50"></text></g><g><title>`0x7FFAA21D6498 (3 samples, 0.01%)</title><rect x="96.7124%" y="3077" width="0.0144%" height="15" fill="rgb(221,62,51)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3087.50"></text></g><g><title>`0x7FFAA21D65D6 (3 samples, 0.01%)</title><rect x="96.7124%" y="3061" width="0.0144%" height="15" fill="rgb(240,192,43)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3071.50"></text></g><g><title>`0x7FFAA222F114 (3 samples, 0.01%)</title><rect x="96.7124%" y="3045" width="0.0144%" height="15" fill="rgb(224,157,47)" fg:x="20210" fg:w="3"/><text x="96.9624%" y="3055.50"></text></g><g><title>deno.exe`v8::internal::OptimizingCompileDispatcher::CompileNext (468 samples, 2.24%)</title><rect x="94.5016%" y="3285" width="2.2396%" height="15" fill="rgb(226,84,45)" fg:x="19748" fg:w="468"/><text x="94.7516%" y="3295.50">d..</text></g><g><title>deno.exe`v8::internal::OptimizedCompilationJob::ExecuteJob (468 samples, 2.24%)</title><rect x="94.5016%" y="3269" width="2.2396%" height="15" fill="rgb(208,207,23)" fg:x="19748" fg:w="468"/><text x="94.7516%" y="3279.50">d..</text></g><g><title>deno.exe`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (468 samples, 2.24%)</title><rect x="94.5016%" y="3253" width="2.2396%" height="15" fill="rgb(253,34,51)" fg:x="19748" fg:w="468"/><text x="94.7516%" y="3263.50">d..</text></g><g><title>deno.exe`v8::internal::compiler::PipelineImpl::OptimizeGraph (415 samples, 1.99%)</title><rect x="94.7552%" y="3237" width="1.9859%" height="15" fill="rgb(227,26,34)" fg:x="19801" fg:w="415"/><text x="95.0052%" y="3247.50">d..</text></g><g><title>deno.exe`v8::internal::compiler::Typer::Typer(v8::internal::compiler::JSHeapBroker*, v8::base::Flags (3 samples, 0.01%)</title><rect x="96.7268%" y="3221" width="0.0144%" height="15" fill="rgb(245,75,19)" fg:x="20213" fg:w="3"/><text x="96.9768%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::OperationTyper::OperationTyper (3 samples, 0.01%)</title><rect x="96.7268%" y="3205" width="0.0144%" height="15" fill="rgb(250,191,31)" fg:x="20213" fg:w="3"/><text x="96.9768%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::OptimizingCompileDispatcher::CompileTask::Run (469 samples, 2.24%)</title><rect x="94.5016%" y="3301" width="2.2443%" height="15" fill="rgb(224,11,50)" fg:x="19748" fg:w="469"/><text x="94.7516%" y="3311.50">d..</text></g><g><title>deno.exe`v8::internal::HeapObject::IterateFast&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (7 samples, 0.03%)</title><rect x="96.7651%" y="3253" width="0.0335%" height="15" fill="rgb(231,171,7)" fg:x="20221" fg:w="7"/><text x="97.0151%" y="3263.50"></text></g><g><title>deno.exe`v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (6 samples, 0.03%)</title><rect x="96.7699%" y="3237" width="0.0287%" height="15" fill="rgb(252,214,10)" fg:x="20222" fg:w="6"/><text x="97.0199%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (5 samples, 0.02%)</title><rect x="96.7747%" y="3221" width="0.0239%" height="15" fill="rgb(249,45,46)" fg:x="20223" fg:w="5"/><text x="97.0247%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::Process (19 samples, 0.09%)</title><rect x="96.7459%" y="3269" width="0.0909%" height="15" fill="rgb(240,173,7)" fg:x="20217" fg:w="19"/><text x="96.9959%" y="3279.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (8 samples, 0.04%)</title><rect x="96.7986%" y="3253" width="0.0383%" height="15" fill="rgb(235,214,13)" fg:x="20228" fg:w="8"/><text x="97.0486%" y="3263.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::Run (26 samples, 0.12%)</title><rect x="96.7459%" y="3301" width="0.1244%" height="15" fill="rgb(245,156,8)" fg:x="20217" fg:w="26"/><text x="96.9959%" y="3311.50"></text></g><g><title>deno.exe`v8::internal::ScavengerCollector::JobTask::ProcessItems (26 samples, 0.12%)</title><rect x="96.7459%" y="3285" width="0.1244%" height="15" fill="rgb(235,46,12)" fg:x="20217" fg:w="26"/><text x="96.9959%" y="3295.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::ScavengePage (7 samples, 0.03%)</title><rect x="96.8369%" y="3269" width="0.0335%" height="15" fill="rgb(221,81,14)" fg:x="20236" fg:w="7"/><text x="97.0869%" y="3279.50"></text></g><g><title>deno.exe`v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (6 samples, 0.03%)</title><rect x="96.8417%" y="3253" width="0.0287%" height="15" fill="rgb(238,207,9)" fg:x="20237" fg:w="6"/><text x="97.0917%" y="3263.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::BaselineCompiler(v8::internal::LocalIsolate*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Handle (8 samples, 0.04%)</title><rect x="96.9039%" y="3253" width="0.0383%" height="15" fill="rgb(224,129,35)" fg:x="20250" fg:w="8"/><text x="97.1539%" y="3263.50"></text></g><g><title>deno.exe`memset() (3 samples, 0.01%)</title><rect x="96.9517%" y="3205" width="0.0144%" height="15" fill="rgb(243,218,34)" fg:x="20260" fg:w="3"/><text x="97.2017%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::Code::RelocateFromDesc (10 samples, 0.05%)</title><rect x="96.9756%" y="3205" width="0.0479%" height="15" fill="rgb(220,166,13)" fg:x="20265" fg:w="10"/><text x="97.2256%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateInLabSlow (3 samples, 0.01%)</title><rect x="97.0235%" y="3189" width="0.0144%" height="15" fill="rgb(227,167,49)" fg:x="20275" fg:w="3"/><text x="97.2735%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateLab (3 samples, 0.01%)</title><rect x="97.0235%" y="3173" width="0.0144%" height="15" fill="rgb(234,142,12)" fg:x="20275" fg:w="3"/><text x="97.2735%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateFromSpaceFreeList (3 samples, 0.01%)</title><rect x="97.0235%" y="3157" width="0.0144%" height="15" fill="rgb(207,100,48)" fg:x="20275" fg:w="3"/><text x="97.2735%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TryAllocationFromFreeListBackground (3 samples, 0.01%)</title><rect x="97.0235%" y="3141" width="0.0144%" height="15" fill="rgb(210,25,14)" fg:x="20275" fg:w="3"/><text x="97.2735%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TryAllocationFromFreeListBackground (3 samples, 0.01%)</title><rect x="97.0379%" y="3157" width="0.0144%" height="15" fill="rgb(246,116,27)" fg:x="20278" fg:w="3"/><text x="97.2879%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::Heap::CreateFillerObjectAtBackground (3 samples, 0.01%)</title><rect x="97.0379%" y="3141" width="0.0144%" height="15" fill="rgb(214,193,42)" fg:x="20278" fg:w="3"/><text x="97.2879%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::Heap::CreateFillerObjectAtRaw (3 samples, 0.01%)</title><rect x="97.0379%" y="3125" width="0.0144%" height="15" fill="rgb(214,122,8)" fg:x="20278" fg:w="3"/><text x="97.2879%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::Factory::CodeBuilder::AllocateInstructionStream (7 samples, 0.03%)</title><rect x="97.0235%" y="3205" width="0.0335%" height="15" fill="rgb(244,173,18)" fg:x="20275" fg:w="7"/><text x="97.2735%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateOutsideLab (4 samples, 0.02%)</title><rect x="97.0379%" y="3189" width="0.0191%" height="15" fill="rgb(232,68,19)" fg:x="20278" fg:w="4"/><text x="97.2879%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateFromSpaceFreeList (4 samples, 0.02%)</title><rect x="97.0379%" y="3173" width="0.0191%" height="15" fill="rgb(236,224,1)" fg:x="20278" fg:w="4"/><text x="97.2879%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::Factory::CodeBuilder::TryBuild (29 samples, 0.14%)</title><rect x="96.9469%" y="3237" width="0.1388%" height="15" fill="rgb(240,11,8)" fg:x="20259" fg:w="29"/><text x="97.1969%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::Factory::CodeBuilder::BuildInternal (29 samples, 0.14%)</title><rect x="96.9469%" y="3221" width="0.1388%" height="15" fill="rgb(244,159,20)" fg:x="20259" fg:w="29"/><text x="97.1969%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::ThreadIsolation::RegisterJitAllocation (4 samples, 0.02%)</title><rect x="97.0666%" y="3205" width="0.0191%" height="15" fill="rgb(240,223,54)" fg:x="20284" fg:w="4"/><text x="97.3166%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::ThreadIsolation::JitPageReference::RegisterAllocation (4 samples, 0.02%)</title><rect x="97.0666%" y="3189" width="0.0191%" height="15" fill="rgb(237,146,5)" fg:x="20284" fg:w="4"/><text x="97.3166%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateFromSpaceFreeList (3 samples, 0.01%)</title><rect x="97.0905%" y="3141" width="0.0144%" height="15" fill="rgb(218,221,32)" fg:x="20289" fg:w="3"/><text x="97.3405%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::PagedSpaceBase::TryAllocationFromFreeListBackground (3 samples, 0.01%)</title><rect x="97.0905%" y="3125" width="0.0144%" height="15" fill="rgb(244,96,26)" fg:x="20289" fg:w="3"/><text x="97.3405%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::Build (36 samples, 0.17%)</title><rect x="96.9421%" y="3253" width="0.1723%" height="15" fill="rgb(245,184,37)" fg:x="20258" fg:w="36"/><text x="97.1921%" y="3263.50"></text></g><g><title>deno.exe`v8::internal::baseline::BytecodeOffsetTableBuilder::ToBytecodeOffsetTable&lt;v8::internal::LocalIsolate&gt; (6 samples, 0.03%)</title><rect x="97.0857%" y="3237" width="0.0287%" height="15" fill="rgb(248,91,47)" fg:x="20288" fg:w="6"/><text x="97.3357%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::LocalFactory&gt;::NewByteArray (6 samples, 0.03%)</title><rect x="97.0857%" y="3221" width="0.0287%" height="15" fill="rgb(243,199,8)" fg:x="20288" fg:w="6"/><text x="97.3357%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::LocalFactory::AllocateRaw (6 samples, 0.03%)</title><rect x="97.0857%" y="3205" width="0.0287%" height="15" fill="rgb(249,12,15)" fg:x="20288" fg:w="6"/><text x="97.3357%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::LocalHeap::AllocateRaw (6 samples, 0.03%)</title><rect x="97.0857%" y="3189" width="0.0287%" height="15" fill="rgb(245,97,12)" fg:x="20288" fg:w="6"/><text x="97.3357%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateInLabSlow (5 samples, 0.02%)</title><rect x="97.0905%" y="3173" width="0.0239%" height="15" fill="rgb(244,61,1)" fg:x="20289" fg:w="5"/><text x="97.3405%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::ConcurrentAllocator::AllocateLab (5 samples, 0.02%)</title><rect x="97.0905%" y="3157" width="0.0239%" height="15" fill="rgb(222,194,10)" fg:x="20289" fg:w="5"/><text x="97.3405%" y="3167.50"></text></g><g><title>deno.exe`__security_check_cookie() (3 samples, 0.01%)</title><rect x="97.1958%" y="3221" width="0.0144%" height="15" fill="rgb(226,178,8)" fg:x="20311" fg:w="3"/><text x="97.4458%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::PreVisitSingleBytecode (7 samples, 0.03%)</title><rect x="97.1814%" y="3237" width="0.0335%" height="15" fill="rgb(241,32,34)" fg:x="20308" fg:w="7"/><text x="97.4314%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::VisitCallUndefinedReceiver1 (3 samples, 0.01%)</title><rect x="97.2388%" y="3237" width="0.0144%" height="15" fill="rgb(254,26,6)" fg:x="20320" fg:w="3"/><text x="97.4888%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::CallBuiltin&lt;380,v8::internal::interpreter::Register,v8::internal::Handle&lt;v8::internal::Name&gt;,v8::internal::TaggedIndex&gt;(v8::internal::interpreter::Register, v8::internal::Handle (4 samples, 0.02%)</title><rect x="97.2676%" y="3221" width="0.0191%" height="15" fill="rgb(249,71,11)" fg:x="20326" fg:w="4"/><text x="97.5176%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::VisitGetNamedProperty (6 samples, 0.03%)</title><rect x="97.2676%" y="3237" width="0.0287%" height="15" fill="rgb(232,170,27)" fg:x="20326" fg:w="6"/><text x="97.5176%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::VisitJumpIfToBooleanFalse (3 samples, 0.01%)</title><rect x="97.3058%" y="3237" width="0.0144%" height="15" fill="rgb(214,223,17)" fg:x="20334" fg:w="3"/><text x="97.5558%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::VisitSingleBytecode (15 samples, 0.07%)</title><rect x="97.3633%" y="3237" width="0.0718%" height="15" fill="rgb(250,18,15)" fg:x="20346" fg:w="15"/><text x="97.6133%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BytecodeOffsetTableBuilder::AddPosition (6 samples, 0.03%)</title><rect x="97.4494%" y="3237" width="0.0287%" height="15" fill="rgb(212,153,51)" fg:x="20364" fg:w="6"/><text x="97.6994%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompiler::GenerateCode (79 samples, 0.38%)</title><rect x="97.1144%" y="3253" width="0.3780%" height="15" fill="rgb(219,194,12)" fg:x="20294" fg:w="79"/><text x="97.3644%" y="3263.50"></text></g><g><title>deno.exe`v8::internal::baseline::ConcurrentBaselineCompiler::JobDispatcher::Run (132 samples, 0.63%)</title><rect x="96.8704%" y="3301" width="0.6317%" height="15" fill="rgb(212,58,17)" fg:x="20243" fg:w="132"/><text x="97.1204%" y="3311.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineBatchCompilerJob::Compile (129 samples, 0.62%)</title><rect x="96.8847%" y="3285" width="0.6173%" height="15" fill="rgb(254,5,10)" fg:x="20246" fg:w="129"/><text x="97.1347%" y="3295.50"></text></g><g><title>deno.exe`v8::internal::baseline::BaselineCompilerTask::Compile (128 samples, 0.61%)</title><rect x="96.8895%" y="3269" width="0.6125%" height="15" fill="rgb(246,91,7)" fg:x="20247" fg:w="128"/><text x="97.1395%" y="3279.50"></text></g><g><title>deno.exe`v8::internal::LocalIsolate::LocalIsolate (3 samples, 0.01%)</title><rect x="97.5068%" y="3285" width="0.0144%" height="15" fill="rgb(218,108,49)" fg:x="20376" fg:w="3"/><text x="97.7568%" y="3295.50"></text></g><g><title>deno.exe`v8::internal::LocalHeap::LocalHeap(v8::internal::Heap*, v8::internal::ThreadKind, std::Cr::unique_ptr&lt;v8::internal::PersistentHandles,std::Cr::default_delete (3 samples, 0.01%)</title><rect x="97.5068%" y="3269" width="0.0144%" height="15" fill="rgb(238,123,20)" fg:x="20376" fg:w="3"/><text x="97.7568%" y="3279.50"></text></g><g><title>deno.exe`v8::internal::maglev::GraphProcessor&lt;v8::internal::maglev::MaglevPhiRepresentationSelector,0&gt;::ProcessNodeBase (3 samples, 0.01%)</title><rect x="97.5403%" y="3221" width="0.0144%" height="15" fill="rgb(231,69,23)" fg:x="20383" fg:w="3"/><text x="97.7903%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevPhiRepresentationSelector::PreparePhiTaggings (6 samples, 0.03%)</title><rect x="97.5547%" y="3221" width="0.0287%" height="15" fill="rgb(230,209,3)" fg:x="20386" fg:w="6"/><text x="97.8047%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevPhiRepresentationSelector::UpdateNodeInputs&lt;v8::internal::maglev::CallKnownJSFunction&gt; (3 samples, 0.01%)</title><rect x="97.5930%" y="3221" width="0.0144%" height="15" fill="rgb(231,19,0)" fg:x="20394" fg:w="3"/><text x="97.8430%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::GraphProcessor&lt;v8::internal::maglev::MaglevPhiRepresentationSelector,0&gt;::ProcessGraph (17 samples, 0.08%)</title><rect x="97.5355%" y="3237" width="0.0814%" height="15" fill="rgb(226,192,25)" fg:x="20382" fg:w="17"/><text x="97.7855%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::maglev::GraphProcessor&lt;v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::ValueLocationConstraintProcessor,v8::internal::maglev::MaxCallDepthProcessor,v8::internal::maglev::UseMarkingProcessor,v8::internal::maglev::DecompressedUseMarkingProcessor&gt;,0&gt;::ProcessNodeBase (3 samples, 0.01%)</title><rect x="97.6360%" y="3221" width="0.0144%" height="15" fill="rgb(223,175,53)" fg:x="20403" fg:w="3"/><text x="97.8860%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::MaxCallDepthProcessor,v8::internal::maglev::UseMarkingProcessor,v8::internal::maglev::DecompressedUseMarkingProcessor&gt;::Process&lt;v8::internal::maglev::CallKnownJSFunction&gt; (3 samples, 0.01%)</title><rect x="97.6647%" y="3221" width="0.0144%" height="15" fill="rgb(248,35,51)" fg:x="20409" fg:w="3"/><text x="97.9147%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::UseMarkingProcessor::Process&lt;v8::internal::maglev::CallKnownJSFunction&gt; (3 samples, 0.01%)</title><rect x="97.6647%" y="3205" width="0.0144%" height="15" fill="rgb(230,37,26)" fg:x="20409" fg:w="3"/><text x="97.9147%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::MaxCallDepthProcessor,v8::internal::maglev::UseMarkingProcessor,v8::internal::maglev::DecompressedUseMarkingProcessor&gt;::Process&lt;v8::internal::maglev::CheckMaps&gt; (3 samples, 0.01%)</title><rect x="97.6839%" y="3221" width="0.0144%" height="15" fill="rgb(206,120,22)" fg:x="20413" fg:w="3"/><text x="97.9339%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::ValueLocationConstraintProcessor,v8::internal::maglev::MaxCallDepthProcessor,v8::internal::maglev::UseMarkingProcessor,v8::internal::maglev::DecompressedUseMarkingProcessor&gt;::Process&lt;v8::internal::maglev::BranchIfInt32Compare&gt; (3 samples, 0.01%)</title><rect x="97.7078%" y="3221" width="0.0144%" height="15" fill="rgb(207,165,28)" fg:x="20418" fg:w="3"/><text x="97.9578%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::GraphProcessor&lt;v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::ValueLocationConstraintProcessor,v8::internal::maglev::MaxCallDepthProcessor,v8::internal::maglev::UseMarkingProcessor,v8::internal::maglev::DecompressedUseMarkingProcessor&gt;,0&gt;::ProcessGraph (30 samples, 0.14%)</title><rect x="97.6169%" y="3237" width="0.1436%" height="15" fill="rgb(226,23,46)" fg:x="20399" fg:w="30"/><text x="97.8669%" y="3247.50"></text></g><g><title>deno.exe`memset() (6 samples, 0.03%)</title><rect x="97.7652%" y="3173" width="0.0287%" height="15" fill="rgb(208,130,44)" fg:x="20430" fg:w="6"/><text x="98.0152%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::Code::CopyFromNoFlush (4 samples, 0.02%)</title><rect x="97.7939%" y="3173" width="0.0191%" height="15" fill="rgb(231,67,8)" fg:x="20436" fg:w="4"/><text x="98.0439%" y="3183.50"></text></g><g><title>deno.exe`memcpy_repmovs() (3 samples, 0.01%)</title><rect x="97.7987%" y="3157" width="0.0144%" height="15" fill="rgb(205,183,22)" fg:x="20437" fg:w="3"/><text x="98.0487%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::Factory::CodeBuilder::TryBuild (16 samples, 0.08%)</title><rect x="97.7652%" y="3205" width="0.0766%" height="15" fill="rgb(224,47,9)" fg:x="20430" fg:w="16"/><text x="98.0152%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::Factory::CodeBuilder::BuildInternal (16 samples, 0.08%)</title><rect x="97.7652%" y="3189" width="0.0766%" height="15" fill="rgb(250,183,49)" fg:x="20430" fg:w="16"/><text x="98.0152%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::ThreadIsolation::RegisterJitAllocation (3 samples, 0.01%)</title><rect x="97.8274%" y="3173" width="0.0144%" height="15" fill="rgb(220,151,39)" fg:x="20443" fg:w="3"/><text x="98.0774%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::ThreadIsolation::JitPageReference::RegisterAllocation (3 samples, 0.01%)</title><rect x="97.8274%" y="3157" width="0.0144%" height="15" fill="rgb(220,118,20)" fg:x="20443" fg:w="3"/><text x="98.0774%" y="3167.50"></text></g><g><title>deno.exe`std::Cr::__tree_balance_after_insert&lt;std::Cr::__tree_node_base&lt;void *&gt; *&gt;(std::Cr::__tree_node_base&lt;void *&gt;*, std::Cr::__tree_node_base (3 samples, 0.01%)</title><rect x="97.8274%" y="3141" width="0.0144%" height="15" fill="rgb(231,65,51)" fg:x="20443" fg:w="3"/><text x="98.0774%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::DeoptimizationData::New (3 samples, 0.01%)</title><rect x="97.8418%" y="3189" width="0.0144%" height="15" fill="rgb(253,125,37)" fg:x="20446" fg:w="3"/><text x="98.0918%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::LocalFactory&gt;::NewFixedArray (3 samples, 0.01%)</title><rect x="97.8418%" y="3173" width="0.0144%" height="15" fill="rgb(232,102,6)" fg:x="20446" fg:w="3"/><text x="98.0918%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::FactoryBase&lt;v8::internal::LocalFactory&gt;::NewFixedArrayWithFiller(v8::internal::Handle&lt;v8::internal::Map&gt;, int, v8::internal::Handle (3 samples, 0.01%)</title><rect x="97.8418%" y="3157" width="0.0144%" height="15" fill="rgb(251,105,13)" fg:x="20446" fg:w="3"/><text x="98.0918%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::LocalFactory::AllocateRaw (3 samples, 0.01%)</title><rect x="97.8418%" y="3141" width="0.0144%" height="15" fill="rgb(222,179,29)" fg:x="20446" fg:w="3"/><text x="98.0918%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::LocalHeap::AllocateRaw (3 samples, 0.01%)</title><rect x="97.8418%" y="3125" width="0.0144%" height="15" fill="rgb(229,180,53)" fg:x="20446" fg:w="3"/><text x="98.0918%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevCodeGenerator::BuildCodeObject (25 samples, 0.12%)</title><rect x="97.7604%" y="3221" width="0.1196%" height="15" fill="rgb(238,104,13)" fg:x="20429" fg:w="25"/><text x="98.0104%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevCodeGenerator::GenerateDeoptimizationData (8 samples, 0.04%)</title><rect x="97.8418%" y="3205" width="0.0383%" height="15" fill="rgb(210,130,5)" fg:x="20446" fg:w="8"/><text x="98.0918%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::GraphProcessor&lt;v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::(anonymous namespace)::SafepointingNodeProcessor,v8::internal::maglev::(anonymous namespace)::MaglevCodeGeneratingNodeProcessor&gt;,0&gt;::ProcessNodeBase (3 samples, 0.01%)</title><rect x="97.8992%" y="3205" width="0.0144%" height="15" fill="rgb(233,87,49)" fg:x="20458" fg:w="3"/><text x="98.1492%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevTranslationArrayBuilder::BuildDeoptFrameValues (5 samples, 0.02%)</title><rect x="97.9519%" y="3189" width="0.0239%" height="15" fill="rgb(243,34,9)" fg:x="20469" fg:w="5"/><text x="98.2019%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevTranslationArrayBuilder::BuildDeoptFrameSingleValue (3 samples, 0.01%)</title><rect x="97.9614%" y="3173" width="0.0144%" height="15" fill="rgb(235,225,10)" fg:x="20471" fg:w="3"/><text x="98.2114%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::TranslationArrayBuilder::Add&lt;&gt; (3 samples, 0.01%)</title><rect x="98.0093%" y="3157" width="0.0144%" height="15" fill="rgb(212,0,30)" fg:x="20481" fg:w="3"/><text x="98.2593%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevTranslationArrayBuilder::BuildDeoptFrameValues (12 samples, 0.06%)</title><rect x="97.9997%" y="3173" width="0.0574%" height="15" fill="rgb(211,177,0)" fg:x="20479" fg:w="12"/><text x="98.2497%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevTranslationArrayBuilder::BuildDeoptFrameSingleValue (7 samples, 0.03%)</title><rect x="98.0236%" y="3157" width="0.0335%" height="15" fill="rgb(225,220,11)" fg:x="20484" fg:w="7"/><text x="98.2736%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevCodeGenerator::EmitDeopts (29 samples, 0.14%)</title><rect x="97.9231%" y="3205" width="0.1388%" height="15" fill="rgb(215,10,13)" fg:x="20463" fg:w="29"/><text x="98.1731%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevTranslationArrayBuilder::RecursiveBuildDeoptFrame (18 samples, 0.09%)</title><rect x="97.9758%" y="3189" width="0.0861%" height="15" fill="rgb(240,177,14)" fg:x="20474" fg:w="18"/><text x="98.2258%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::(anonymous namespace)::SafepointingNodeProcessor,v8::internal::maglev::(anonymous namespace)::MaglevCodeGeneratingNodeProcessor&gt;::Process&lt;v8::internal::maglev::CallKnownJSFunction&gt; (5 samples, 0.02%)</title><rect x="98.0906%" y="3205" width="0.0239%" height="15" fill="rgb(243,7,39)" fg:x="20498" fg:w="5"/><text x="98.3406%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::CallKnownJSFunction::GenerateCode (5 samples, 0.02%)</title><rect x="98.0906%" y="3189" width="0.0239%" height="15" fill="rgb(212,99,0)" fg:x="20498" fg:w="5"/><text x="98.3406%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::(anonymous namespace)::SafepointingNodeProcessor,v8::internal::maglev::(anonymous namespace)::MaglevCodeGeneratingNodeProcessor&gt;::Process&lt;v8::internal::maglev::CheckString&gt; (3 samples, 0.01%)</title><rect x="98.1193%" y="3205" width="0.0144%" height="15" fill="rgb(225,162,48)" fg:x="20504" fg:w="3"/><text x="98.3693%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::CheckString::GenerateCode (3 samples, 0.01%)</title><rect x="98.1193%" y="3189" width="0.0144%" height="15" fill="rgb(246,16,25)" fg:x="20504" fg:w="3"/><text x="98.3693%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::NodeMultiProcessor&lt;v8::internal::maglev::(anonymous namespace)::SafepointingNodeProcessor,v8::internal::maglev::(anonymous namespace)::MaglevCodeGeneratingNodeProcessor&gt;::Process&lt;v8::internal::maglev::Jump&gt; (11 samples, 0.05%)</title><rect x="98.1720%" y="3205" width="0.0526%" height="15" fill="rgb(220,150,2)" fg:x="20515" fg:w="11"/><text x="98.4220%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::MaglevCodeGeneratingNodeProcessor::EmitBlockEndGapMoves (11 samples, 0.05%)</title><rect x="98.1720%" y="3189" width="0.0526%" height="15" fill="rgb(237,113,11)" fg:x="20515" fg:w="11"/><text x="98.4220%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::detail::DeferredCodeInfoImpl&lt;`lambda at ../../../../v8/src/maglev/maglev-assembler.cc:392:7&apos;&gt;::Generate (3 samples, 0.01%)</title><rect x="98.2486%" y="3205" width="0.0144%" height="15" fill="rgb(236,70,20)" fg:x="20531" fg:w="3"/><text x="98.4986%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevAssembler::CheckAndEmitDeferredWriteBarrier&lt;0&gt;::&lt;lambda_1&gt;::__invoke (3 samples, 0.01%)</title><rect x="98.2486%" y="3189" width="0.0144%" height="15" fill="rgb(234,94,7)" fg:x="20531" fg:w="3"/><text x="98.4986%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevAssembler::CheckAndEmitDeferredWriteBarrier&lt;0&gt;::&lt;lambda_1&gt;::operator() (3 samples, 0.01%)</title><rect x="98.2486%" y="3173" width="0.0144%" height="15" fill="rgb(250,221,0)" fg:x="20531" fg:w="3"/><text x="98.4986%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::MacroAssembler::CallRuntime (3 samples, 0.01%)</title><rect x="98.2916%" y="3173" width="0.0144%" height="15" fill="rgb(245,149,46)" fg:x="20540" fg:w="3"/><text x="98.5416%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevCodeGenerator::Assemble (116 samples, 0.56%)</title><rect x="97.7604%" y="3237" width="0.5551%" height="15" fill="rgb(215,37,27)" fg:x="20429" fg:w="116"/><text x="98.0104%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevCodeGenerator::EmitCode (91 samples, 0.44%)</title><rect x="97.8801%" y="3221" width="0.4355%" height="15" fill="rgb(232,65,3)" fg:x="20454" fg:w="91"/><text x="98.1301%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::detail::DeferredCodeInfoImpl&lt;void (&amp;)(v8::internal::maglev::MaglevAssembler *, v8::internal::maglev::ZoneLabelRef, v8::internal::maglev::Node *, v8::internal::maglev::(anonymous namespace)::ReduceInterruptBudgetType, v8::internal::Register)&gt;::Generate (5 samples, 0.02%)</title><rect x="98.2916%" y="3205" width="0.0239%" height="15" fill="rgb(214,2,16)" fg:x="20540" fg:w="5"/><text x="98.5416%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::`anonymous namespace&apos;::HandleInterruptsAndTiering (5 samples, 0.02%)</title><rect x="98.2916%" y="3189" width="0.0239%" height="15" fill="rgb(227,131,50)" fg:x="20540" fg:w="5"/><text x="98.5416%" y="3199.50"></text></g><g><title>deno.exe`std::Cr::__tree&lt;std::Cr::__value_type&lt;v8::internal::maglev::ValueNode *,v8::internal::maglev::NodeInfo&gt;,std::Cr::__map_value_compare&lt;v8::internal::maglev::ValueNode *,std::Cr::__value_type&lt;v8::internal::maglev::ValueNode *,v8::internal::maglev::NodeInfo&gt;,std::Cr::less&lt;v8::internal::maglev::ValueNode *&gt;,1&gt;,v8::internal::ZoneAllocator&lt;std::Cr::__value_type&lt;v8::internal::maglev::ValueNode *,v8::internal::maglev::NodeInfo&gt; &gt; &gt;::__emplace_hint_unique_key_args&lt;v8::internal::maglev::ValueNode *,const std::Cr::pair&lt;v8::internal::maglev::ValueNode *const,v8::internal::maglev::NodeInfo&gt; &amp;&gt;(std::Cr::__tree_const_iterator&lt;std::Cr::__value_type&lt;v8::internal::maglev::ValueNode *,v8::internal::maglev::NodeInfo&gt;,std::Cr::__tree_node&lt;std::Cr::__value_type&lt;v8::internal::maglev::ValueNode *,v8::internal::maglev::NodeInfo&gt;,void *&gt; *,long long&gt;, v8::internal::maglev::ValueNode* const&amp;, std::Cr::pair (3 samples, 0.01%)</title><rect x="98.3730%" y="3141" width="0.0144%" height="15" fill="rgb(247,131,45)" fg:x="20557" fg:w="3"/><text x="98.6230%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildBranchIfToBooleanTrue (7 samples, 0.03%)</title><rect x="98.3586%" y="3189" width="0.0335%" height="15" fill="rgb(215,97,47)" fg:x="20554" fg:w="7"/><text x="98.6086%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MergePointInterpreterFrameState::New (5 samples, 0.02%)</title><rect x="98.3682%" y="3173" width="0.0239%" height="15" fill="rgb(233,143,12)" fg:x="20556" fg:w="5"/><text x="98.6182%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::KnownNodeAspects::KnownNodeAspects (4 samples, 0.02%)</title><rect x="98.3730%" y="3157" width="0.0191%" height="15" fill="rgb(222,57,17)" fg:x="20557" fg:w="4"/><text x="98.6230%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallFromRegisterList (4 samples, 0.02%)</title><rect x="98.3921%" y="3189" width="0.0191%" height="15" fill="rgb(214,119,38)" fg:x="20561" fg:w="4"/><text x="98.6421%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallWithFeedback (4 samples, 0.02%)</title><rect x="98.3921%" y="3173" width="0.0191%" height="15" fill="rgb(217,28,47)" fg:x="20561" fg:w="4"/><text x="98.6421%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCall (4 samples, 0.02%)</title><rect x="98.3921%" y="3157" width="0.0191%" height="15" fill="rgb(231,14,52)" fg:x="20561" fg:w="4"/><text x="98.6421%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCallForConstant (4 samples, 0.02%)</title><rect x="98.3921%" y="3141" width="0.0191%" height="15" fill="rgb(220,158,18)" fg:x="20561" fg:w="4"/><text x="98.6421%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction (4 samples, 0.02%)</title><rect x="98.3921%" y="3125" width="0.0191%" height="15" fill="rgb(222,143,46)" fg:x="20561" fg:w="4"/><text x="98.6421%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction(v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (3 samples, 0.01%)</title><rect x="98.3969%" y="3109" width="0.0144%" height="15" fill="rgb(227,165,5)" fg:x="20562" fg:w="3"/><text x="98.6469%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::AttachExtraInfoAndAddToGraph&lt;v8::internal::maglev::CallKnownJSFunction&gt; (3 samples, 0.01%)</title><rect x="98.4448%" y="3093" width="0.0144%" height="15" fill="rgb(216,222,49)" fg:x="20572" fg:w="3"/><text x="98.6948%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::maglev::DeoptInfo::DeoptInfo (3 samples, 0.01%)</title><rect x="98.4448%" y="3077" width="0.0144%" height="15" fill="rgb(238,73,39)" fg:x="20572" fg:w="3"/><text x="98.6948%" y="3087.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallFromRegisters (4 samples, 0.02%)</title><rect x="98.4878%" y="2869" width="0.0191%" height="15" fill="rgb(252,115,9)" fg:x="20581" fg:w="4"/><text x="98.7378%" y="2879.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallWithFeedback (4 samples, 0.02%)</title><rect x="98.4878%" y="2853" width="0.0191%" height="15" fill="rgb(238,202,4)" fg:x="20581" fg:w="4"/><text x="98.7378%" y="2863.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCall (3 samples, 0.01%)</title><rect x="98.4926%" y="2837" width="0.0144%" height="15" fill="rgb(252,153,44)" fg:x="20582" fg:w="3"/><text x="98.7426%" y="2847.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCallForConstant (3 samples, 0.01%)</title><rect x="98.4926%" y="2821" width="0.0144%" height="15" fill="rgb(235,128,27)" fg:x="20582" fg:w="3"/><text x="98.7426%" y="2831.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction (3 samples, 0.01%)</title><rect x="98.4926%" y="2805" width="0.0144%" height="15" fill="rgb(221,121,47)" fg:x="20582" fg:w="3"/><text x="98.7426%" y="2815.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildBody (7 samples, 0.03%)</title><rect x="98.4878%" y="2901" width="0.0335%" height="15" fill="rgb(247,211,47)" fg:x="20581" fg:w="7"/><text x="98.7378%" y="2911.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitSingleBytecode (7 samples, 0.03%)</title><rect x="98.4878%" y="2885" width="0.0335%" height="15" fill="rgb(252,47,49)" fg:x="20581" fg:w="7"/><text x="98.7378%" y="2895.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildInlined (8 samples, 0.04%)</title><rect x="98.4878%" y="2917" width="0.0383%" height="15" fill="rgb(219,119,53)" fg:x="20581" fg:w="8"/><text x="98.7378%" y="2927.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction (10 samples, 0.05%)</title><rect x="98.4830%" y="2965" width="0.0479%" height="15" fill="rgb(243,165,53)" fg:x="20580" fg:w="10"/><text x="98.7330%" y="2975.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction(v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (9 samples, 0.04%)</title><rect x="98.4878%" y="2949" width="0.0431%" height="15" fill="rgb(230,12,35)" fg:x="20581" fg:w="9"/><text x="98.7378%" y="2959.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildInlinedCall(v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (9 samples, 0.04%)</title><rect x="98.4878%" y="2933" width="0.0431%" height="15" fill="rgb(239,57,49)" fg:x="20581" fg:w="9"/><text x="98.7378%" y="2943.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallWithFeedback (11 samples, 0.05%)</title><rect x="98.4830%" y="3013" width="0.0526%" height="15" fill="rgb(231,154,7)" fg:x="20580" fg:w="11"/><text x="98.7330%" y="3023.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCall (11 samples, 0.05%)</title><rect x="98.4830%" y="2997" width="0.0526%" height="15" fill="rgb(248,81,34)" fg:x="20580" fg:w="11"/><text x="98.7330%" y="3007.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCallForConstant (11 samples, 0.05%)</title><rect x="98.4830%" y="2981" width="0.0526%" height="15" fill="rgb(247,9,5)" fg:x="20580" fg:w="11"/><text x="98.7330%" y="2991.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallFromRegisters (13 samples, 0.06%)</title><rect x="98.4783%" y="3029" width="0.0622%" height="15" fill="rgb(228,172,27)" fg:x="20579" fg:w="13"/><text x="98.7283%" y="3039.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitCompareOperation&lt;17&gt; (3 samples, 0.01%)</title><rect x="98.5500%" y="3029" width="0.0144%" height="15" fill="rgb(230,57,44)" fg:x="20594" fg:w="3"/><text x="98.8000%" y="3039.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitGetNamedProperty (3 samples, 0.01%)</title><rect x="98.5692%" y="3029" width="0.0144%" height="15" fill="rgb(249,35,22)" fg:x="20598" fg:w="3"/><text x="98.8192%" y="3039.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildBody (27 samples, 0.13%)</title><rect x="98.4639%" y="3061" width="0.1292%" height="15" fill="rgb(250,137,27)" fg:x="20576" fg:w="27"/><text x="98.7139%" y="3071.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitSingleBytecode (27 samples, 0.13%)</title><rect x="98.4639%" y="3045" width="0.1292%" height="15" fill="rgb(251,57,31)" fg:x="20576" fg:w="27"/><text x="98.7139%" y="3055.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildInlined (29 samples, 0.14%)</title><rect x="98.4639%" y="3077" width="0.1388%" height="15" fill="rgb(238,60,0)" fg:x="20576" fg:w="29"/><text x="98.7139%" y="3087.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis(v8::internal::Handle (6 samples, 0.03%)</title><rect x="98.6075%" y="3061" width="0.0287%" height="15" fill="rgb(242,185,39)" fg:x="20606" fg:w="6"/><text x="98.8575%" y="3071.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::Analyze (6 samples, 0.03%)</title><rect x="98.6075%" y="3045" width="0.0287%" height="15" fill="rgb(240,63,43)" fg:x="20606" fg:w="6"/><text x="98.8575%" y="3055.50"></text></g><g><title>deno.exe`v8::internal::interpreter::BytecodeArrayRandomIterator::BytecodeArrayRandomIterator(v8::internal::Handle (3 samples, 0.01%)</title><rect x="98.6218%" y="3029" width="0.0144%" height="15" fill="rgb(236,155,6)" fg:x="20609" fg:w="3"/><text x="98.8718%" y="3039.50"></text></g><g><title>deno.exe`v8::internal::interpreter::BytecodeArrayRandomIterator::Initialize (3 samples, 0.01%)</title><rect x="98.6218%" y="3013" width="0.0144%" height="15" fill="rgb(215,11,29)" fg:x="20609" fg:w="3"/><text x="98.8718%" y="3023.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::MaglevGraphBuilder (8 samples, 0.04%)</title><rect x="98.6027%" y="3077" width="0.0383%" height="15" fill="rgb(228,180,48)" fg:x="20605" fg:w="8"/><text x="98.8527%" y="3087.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallFromRegisters (54 samples, 0.26%)</title><rect x="98.4113%" y="3189" width="0.2584%" height="15" fill="rgb(241,102,12)" fg:x="20565" fg:w="54"/><text x="98.6613%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCallWithFeedback (54 samples, 0.26%)</title><rect x="98.4113%" y="3173" width="0.2584%" height="15" fill="rgb(246,213,4)" fg:x="20565" fg:w="54"/><text x="98.6613%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCall (51 samples, 0.24%)</title><rect x="98.4256%" y="3157" width="0.2441%" height="15" fill="rgb(218,134,35)" fg:x="20568" fg:w="51"/><text x="98.6756%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ReduceCallForConstant (50 samples, 0.24%)</title><rect x="98.4304%" y="3141" width="0.2393%" height="15" fill="rgb(251,117,35)" fg:x="20569" fg:w="50"/><text x="98.6804%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction (48 samples, 0.23%)</title><rect x="98.4400%" y="3125" width="0.2297%" height="15" fill="rgb(206,156,45)" fg:x="20571" fg:w="48"/><text x="98.6900%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildCallKnownJSFunction(v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (47 samples, 0.22%)</title><rect x="98.4448%" y="3109" width="0.2249%" height="15" fill="rgb(218,52,27)" fg:x="20572" fg:w="47"/><text x="98.6948%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildInlinedCall(v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::maglev::ValueNode*, v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (44 samples, 0.21%)</title><rect x="98.4591%" y="3093" width="0.2106%" height="15" fill="rgb(238,83,36)" fg:x="20575" fg:w="44"/><text x="98.7091%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ShouldInlineCall(v8::internal::compiler::SharedFunctionInfoRef, v8::internal::compiler::OptionalRef (6 samples, 0.03%)</title><rect x="98.6410%" y="3077" width="0.0287%" height="15" fill="rgb(218,53,43)" fg:x="20613" fg:w="6"/><text x="98.8910%" y="3087.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::ProcessMergePoint (4 samples, 0.02%)</title><rect x="98.6697%" y="3189" width="0.0191%" height="15" fill="rgb(239,54,39)" fg:x="20619" fg:w="4"/><text x="98.9197%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitCompareOperation&lt;17&gt; (11 samples, 0.05%)</title><rect x="98.7223%" y="3189" width="0.0526%" height="15" fill="rgb(212,198,13)" fg:x="20630" fg:w="11"/><text x="98.9723%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildBranchFor&lt;v8::internal::maglev::BranchIfInt32Compare,0,Operation&gt;(std::initializer_list (8 samples, 0.04%)</title><rect x="98.7367%" y="3173" width="0.0383%" height="15" fill="rgb(234,54,46)" fg:x="20633" fg:w="8"/><text x="98.9867%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildFusedBranch&lt;v8::internal::maglev::BranchIfInt32Compare,Operation&gt;(int, int, bool, std::initializer_list (8 samples, 0.04%)</title><rect x="98.7367%" y="3157" width="0.0383%" height="15" fill="rgb(217,120,7)" fg:x="20633" fg:w="8"/><text x="98.9867%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MergePointInterpreterFrameState::New (5 samples, 0.02%)</title><rect x="98.7510%" y="3141" width="0.0239%" height="15" fill="rgb(246,39,15)" fg:x="20636" fg:w="5"/><text x="99.0010%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::maglev::KnownNodeAspects::KnownNodeAspects (4 samples, 0.02%)</title><rect x="98.7558%" y="3125" width="0.0191%" height="15" fill="rgb(242,143,31)" fg:x="20637" fg:w="4"/><text x="99.0058%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitCreateArrayLiteral (4 samples, 0.02%)</title><rect x="98.7845%" y="3189" width="0.0191%" height="15" fill="rgb(252,60,24)" fg:x="20643" fg:w="4"/><text x="99.0345%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildFastCreateObjectOrArrayLiteral (3 samples, 0.01%)</title><rect x="98.7893%" y="3173" width="0.0144%" height="15" fill="rgb(249,220,7)" fg:x="20644" fg:w="3"/><text x="99.0393%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryReadBoilerplateForFastLiteral (3 samples, 0.01%)</title><rect x="98.7893%" y="3157" width="0.0144%" height="15" fill="rgb(236,67,13)" fg:x="20644" fg:w="3"/><text x="99.0393%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::GetFeedbackForPropertyAccess(v8::internal::compiler::FeedbackSource const&amp;, v8::internal::compiler::AccessMode, v8::internal::compiler::OptionalRef (3 samples, 0.01%)</title><rect x="98.8132%" y="3173" width="0.0144%" height="15" fill="rgb(210,62,39)" fg:x="20649" fg:w="3"/><text x="99.0632%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::ReadFeedbackForPropertyAccess(v8::internal::compiler::FeedbackSource const&amp;, v8::internal::compiler::AccessMode, v8::internal::compiler::OptionalRef (3 samples, 0.01%)</title><rect x="98.8132%" y="3157" width="0.0144%" height="15" fill="rgb(219,122,53)" fg:x="20649" fg:w="3"/><text x="99.0632%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::GetPropertyAccessInfo (5 samples, 0.02%)</title><rect x="98.8515%" y="3157" width="0.0239%" height="15" fill="rgb(218,87,25)" fg:x="20657" fg:w="5"/><text x="99.1015%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::AccessInfoFactory::ComputePropertyAccessInfo (3 samples, 0.01%)</title><rect x="98.8611%" y="3141" width="0.0144%" height="15" fill="rgb(234,179,48)" fg:x="20659" fg:w="3"/><text x="99.1111%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::AccessInfoFactory::ComputeDataFieldAccessInfo(v8::internal::compiler::MapRef, v8::internal::compiler::MapRef, v8::internal::compiler::NameRef, v8::internal::compiler::OptionalRef (3 samples, 0.01%)</title><rect x="98.8611%" y="3125" width="0.0144%" height="15" fill="rgb(248,90,0)" fg:x="20659" fg:w="3"/><text x="99.1111%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildCheckMaps(v8::internal::maglev::ValueNode*, v8::base::Vector (3 samples, 0.01%)</title><rect x="98.8802%" y="3157" width="0.0144%" height="15" fill="rgb(207,228,37)" fg:x="20663" fg:w="3"/><text x="99.1302%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildPropertyLoad (4 samples, 0.02%)</title><rect x="98.8946%" y="3157" width="0.0191%" height="15" fill="rgb(235,214,15)" fg:x="20666" fg:w="4"/><text x="99.1446%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildLoadField (3 samples, 0.01%)</title><rect x="98.8994%" y="3141" width="0.0144%" height="15" fill="rgb(210,144,39)" fg:x="20667" fg:w="3"/><text x="99.1494%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitGetNamedProperty (22 samples, 0.11%)</title><rect x="98.8132%" y="3189" width="0.1053%" height="15" fill="rgb(222,67,41)" fg:x="20649" fg:w="22"/><text x="99.0632%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TryBuildNamedAccess (17 samples, 0.08%)</title><rect x="98.8372%" y="3173" width="0.0814%" height="15" fill="rgb(205,35,37)" fg:x="20654" fg:w="17"/><text x="99.0872%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitJump (3 samples, 0.01%)</title><rect x="98.9185%" y="3189" width="0.0144%" height="15" fill="rgb(216,125,40)" fg:x="20671" fg:w="3"/><text x="99.1685%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitLdaImmutableContextSlot (3 samples, 0.01%)</title><rect x="98.9472%" y="3189" width="0.0144%" height="15" fill="rgb(228,227,20)" fg:x="20677" fg:w="3"/><text x="99.1972%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildLoadContextSlot (3 samples, 0.01%)</title><rect x="98.9472%" y="3173" width="0.0144%" height="15" fill="rgb(242,173,45)" fg:x="20677" fg:w="3"/><text x="99.1972%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TrySpecializeLoadContextSlotToFunctionContext (3 samples, 0.01%)</title><rect x="98.9472%" y="3157" width="0.0144%" height="15" fill="rgb(215,79,24)" fg:x="20677" fg:w="3"/><text x="99.1972%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::Heap::IsPendingAllocation (3 samples, 0.01%)</title><rect x="98.9664%" y="3093" width="0.0144%" height="15" fill="rgb(238,164,38)" fg:x="20681" fg:w="3"/><text x="99.2164%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::Heap::IsPendingAllocationInternal(v8::internal::Tagged (3 samples, 0.01%)</title><rect x="98.9664%" y="3077" width="0.0144%" height="15" fill="rgb(245,196,38)" fg:x="20681" fg:w="3"/><text x="99.2164%" y="3087.50"></text></g><g><title>`0x7FFAA21B6783 (3 samples, 0.01%)</title><rect x="98.9664%" y="3061" width="0.0144%" height="15" fill="rgb(231,217,29)" fg:x="20681" fg:w="3"/><text x="99.2164%" y="3071.50"></text></g><g><title>deno.exe`v8::internal::Zone::New&lt;v8::internal::compiler::JSFunctionData,v8::internal::compiler::JSHeapBroker *,v8::internal::compiler::ObjectData **,const v8::internal::Handle&lt;v8::internal::JSFunction&gt;,v8::internal::compiler::ObjectDataKind&gt;(v8::internal::compiler::JSHeapBroker*&amp;&amp;, v8::internal::compiler::ObjectData**&amp;&amp;, v8::internal::Handle (4 samples, 0.02%)</title><rect x="98.9807%" y="3093" width="0.0191%" height="15" fill="rgb(245,6,4)" fg:x="20684" fg:w="4"/><text x="99.2307%" y="3103.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSFunctionData::Cache (4 samples, 0.02%)</title><rect x="98.9807%" y="3077" width="0.0191%" height="15" fill="rgb(214,76,49)" fg:x="20684" fg:w="4"/><text x="99.2307%" y="3087.50"></text></g><g><title>deno.exe`v8::internal::compiler::TryMakeRef&lt;v8::internal::SharedFunctionInfo,void&gt;(v8::internal::compiler::JSHeapBroker*, v8::internal::Tagged&lt;v8::internal::SharedFunctionInfo&gt;, v8::base::Flags (3 samples, 0.01%)</title><rect x="98.9855%" y="3061" width="0.0144%" height="15" fill="rgb(205,96,12)" fg:x="20685" fg:w="3"/><text x="99.2355%" y="3071.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::TryGetOrCreateData(v8::internal::Object, v8::base::Flags (3 samples, 0.01%)</title><rect x="98.9855%" y="3045" width="0.0144%" height="15" fill="rgb(243,131,4)" fg:x="20685" fg:w="3"/><text x="99.2355%" y="3055.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::CanonicalPersistentHandle&lt;v8::internal::Object&gt;(v8::internal::Tagged (3 samples, 0.01%)</title><rect x="98.9855%" y="3029" width="0.0144%" height="15" fill="rgb(214,114,4)" fg:x="20685" fg:w="3"/><text x="99.2355%" y="3039.50"></text></g><g><title>deno.exe`v8::internal::compiler::ContextRef::get (9 samples, 0.04%)</title><rect x="98.9616%" y="3157" width="0.0431%" height="15" fill="rgb(234,215,15)" fg:x="20680" fg:w="9"/><text x="99.2116%" y="3167.50"></text></g><g><title>deno.exe`v8::internal::compiler::TryMakeRef&lt;v8::internal::Object,void&gt;(v8::internal::compiler::JSHeapBroker*, v8::internal::Tagged&lt;v8::internal::Object&gt;, v8::base::Flags (8 samples, 0.04%)</title><rect x="98.9664%" y="3141" width="0.0383%" height="15" fill="rgb(250,216,45)" fg:x="20681" fg:w="8"/><text x="99.2164%" y="3151.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::TryGetOrCreateData(v8::internal::Object, v8::base::Flags (8 samples, 0.04%)</title><rect x="98.9664%" y="3125" width="0.0383%" height="15" fill="rgb(236,128,4)" fg:x="20681" fg:w="8"/><text x="99.2164%" y="3135.50"></text></g><g><title>deno.exe`v8::internal::compiler::JSHeapBroker::TryGetOrCreateData(v8::internal::Handle&lt;v8::internal::Object&gt;, v8::base::Flags (8 samples, 0.04%)</title><rect x="98.9664%" y="3109" width="0.0383%" height="15" fill="rgb(234,50,33)" fg:x="20681" fg:w="8"/><text x="99.2164%" y="3119.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitLdaImmutableCurrentContextSlot (10 samples, 0.05%)</title><rect x="98.9616%" y="3189" width="0.0479%" height="15" fill="rgb(253,131,37)" fg:x="20680" fg:w="10"/><text x="99.2116%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::TrySpecializeLoadContextSlotToFunctionContext (10 samples, 0.05%)</title><rect x="98.9616%" y="3173" width="0.0479%" height="15" fill="rgb(218,55,27)" fg:x="20680" fg:w="10"/><text x="99.2116%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::BuildBody (149 samples, 0.71%)</title><rect x="98.3347%" y="3221" width="0.7130%" height="15" fill="rgb(241,220,28)" fg:x="20549" fg:w="149"/><text x="98.5847%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::VisitSingleBytecode (146 samples, 0.70%)</title><rect x="98.3490%" y="3205" width="0.6987%" height="15" fill="rgb(241,90,48)" fg:x="20552" fg:w="146"/><text x="98.5990%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::Build (155 samples, 0.74%)</title><rect x="98.3251%" y="3237" width="0.7417%" height="15" fill="rgb(216,43,37)" fg:x="20547" fg:w="155"/><text x="98.5751%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis(v8::internal::Handle (31 samples, 0.15%)</title><rect x="99.0812%" y="3221" width="0.1483%" height="15" fill="rgb(207,173,9)" fg:x="20705" fg:w="31"/><text x="99.3312%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::compiler::BytecodeAnalysis::Analyze (31 samples, 0.15%)</title><rect x="99.0812%" y="3205" width="0.1483%" height="15" fill="rgb(240,126,30)" fg:x="20705" fg:w="31"/><text x="99.3312%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::interpreter::BytecodeArrayRandomIterator::BytecodeArrayRandomIterator(v8::internal::Handle (6 samples, 0.03%)</title><rect x="99.2008%" y="3189" width="0.0287%" height="15" fill="rgb(228,178,53)" fg:x="20730" fg:w="6"/><text x="99.4508%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::interpreter::BytecodeArrayRandomIterator::Initialize (4 samples, 0.02%)</title><rect x="99.2104%" y="3173" width="0.0191%" height="15" fill="rgb(217,33,4)" fg:x="20732" fg:w="4"/><text x="99.4604%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::MaglevGraphBuilder::MaglevGraphBuilder (36 samples, 0.17%)</title><rect x="99.0669%" y="3237" width="0.1723%" height="15" fill="rgb(206,124,34)" fg:x="20702" fg:w="36"/><text x="99.3169%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::InitializeBranchTargetRegisterValues (5 samples, 0.02%)</title><rect x="99.2870%" y="3189" width="0.0239%" height="15" fill="rgb(208,122,53)" fg:x="20748" fg:w="5"/><text x="99.5370%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::InitializeEmptyBlockRegisterValues (3 samples, 0.01%)</title><rect x="99.3205%" y="3189" width="0.0144%" height="15" fill="rgb(215,202,26)" fg:x="20755" fg:w="3"/><text x="99.5705%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AllocateControlNode (17 samples, 0.08%)</title><rect x="99.2726%" y="3205" width="0.0814%" height="15" fill="rgb(232,198,31)" fg:x="20745" fg:w="17"/><text x="99.5226%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::MergeRegisterValues (4 samples, 0.02%)</title><rect x="99.3348%" y="3189" width="0.0191%" height="15" fill="rgb(222,23,35)" fg:x="20758" fg:w="4"/><text x="99.5848%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AllocateEagerDeopt (4 samples, 0.02%)</title><rect x="99.3588%" y="3189" width="0.0191%" height="15" fill="rgb(242,27,53)" fg:x="20763" fg:w="4"/><text x="99.6088%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::detail::DeepForEachInputImpl&lt;`lambda at ../../../../v8/src/maglev/maglev-regalloc.cc:648:20&apos; &amp;&gt;(v8::internal::maglev::DeoptFrame const&amp;, v8::internal::maglev::InputLocation*, int&amp;, v8::internal::maglev::StraightForwardRegisterAllocator::AllocateEagerDeopt:: (3 samples, 0.01%)</title><rect x="99.3635%" y="3173" width="0.0144%" height="15" fill="rgb(210,216,42)" fg:x="20764" fg:w="3"/><text x="99.6135%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AssignArbitraryRegisterInput (4 samples, 0.02%)</title><rect x="99.3970%" y="3173" width="0.0191%" height="15" fill="rgb(234,39,38)" fg:x="20771" fg:w="4"/><text x="99.6470%" y="3183.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AssignInputs (10 samples, 0.05%)</title><rect x="99.3827%" y="3189" width="0.0479%" height="15" fill="rgb(235,126,54)" fg:x="20768" fg:w="10"/><text x="99.6327%" y="3199.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AllocateNode (19 samples, 0.09%)</title><rect x="99.3540%" y="3205" width="0.0909%" height="15" fill="rgb(235,150,33)" fg:x="20762" fg:w="19"/><text x="99.6040%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::AllocateRegisters (46 samples, 0.22%)</title><rect x="99.2391%" y="3221" width="0.2201%" height="15" fill="rgb(249,49,53)" fg:x="20738" fg:w="46"/><text x="99.4891%" y="3231.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::InitializeRegisterValues (3 samples, 0.01%)</title><rect x="99.4449%" y="3205" width="0.0144%" height="15" fill="rgb(238,60,50)" fg:x="20781" fg:w="3"/><text x="99.6949%" y="3215.50"></text></g><g><title>deno.exe`v8::internal::OptimizedCompilationJob::ExecuteJob (407 samples, 1.95%)</title><rect x="97.5260%" y="3285" width="1.9476%" height="15" fill="rgb(210,5,2)" fg:x="20380" fg:w="407"/><text x="97.7760%" y="3295.50">d..</text></g><g><title>deno.exe`v8::internal::maglev::MaglevCompilationJob::ExecuteJobImpl (406 samples, 1.94%)</title><rect x="97.5307%" y="3269" width="1.9429%" height="15" fill="rgb(214,207,24)" fg:x="20381" fg:w="406"/><text x="97.7807%" y="3279.50">d..</text></g><g><title>deno.exe`v8::internal::maglev::MaglevCompiler::Compile (406 samples, 1.94%)</title><rect x="97.5307%" y="3253" width="1.9429%" height="15" fill="rgb(228,173,2)" fg:x="20381" fg:w="406"/><text x="97.7807%" y="3263.50">d..</text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::StraightForwardRegisterAllocator (49 samples, 0.23%)</title><rect x="99.2391%" y="3237" width="0.2345%" height="15" fill="rgb(244,26,8)" fg:x="20738" fg:w="49"/><text x="99.4891%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::maglev::StraightForwardRegisterAllocator::ComputePostDominatingHoles (3 samples, 0.01%)</title><rect x="99.4593%" y="3221" width="0.0144%" height="15" fill="rgb(249,153,35)" fg:x="20784" fg:w="3"/><text x="99.7093%" y="3231.50"></text></g><g><title>`0x7FFAA21C9718 (24 samples, 0.11%)</title><rect x="99.4784%" y="3221" width="0.1148%" height="15" fill="rgb(221,215,40)" fg:x="20788" fg:w="24"/><text x="99.7284%" y="3231.50"></text></g><g><title>`0x7FFAA21D4B0B (22 samples, 0.11%)</title><rect x="99.4880%" y="3205" width="0.1053%" height="15" fill="rgb(238,106,35)" fg:x="20790" fg:w="22"/><text x="99.7380%" y="3215.50"></text></g><g><title>`0x7FFAA21D63EA (22 samples, 0.11%)</title><rect x="99.4880%" y="3189" width="0.1053%" height="15" fill="rgb(207,195,21)" fg:x="20790" fg:w="22"/><text x="99.7380%" y="3199.50"></text></g><g><title>`0x7FFAA21D6498 (22 samples, 0.11%)</title><rect x="99.4880%" y="3173" width="0.1053%" height="15" fill="rgb(205,43,29)" fg:x="20790" fg:w="22"/><text x="99.7380%" y="3183.50"></text></g><g><title>`0x7FFAA21D65D6 (22 samples, 0.11%)</title><rect x="99.4880%" y="3157" width="0.1053%" height="15" fill="rgb(236,35,21)" fg:x="20790" fg:w="22"/><text x="99.7380%" y="3167.50"></text></g><g><title>`0x7FFAA222F114 (22 samples, 0.11%)</title><rect x="99.4880%" y="3141" width="0.1053%" height="15" fill="rgb(244,74,8)" fg:x="20790" fg:w="22"/><text x="99.7380%" y="3151.50"></text></g><g><title>`0x7FFAA21CBE34 (27 samples, 0.13%)</title><rect x="99.4784%" y="3237" width="0.1292%" height="15" fill="rgb(241,229,7)" fg:x="20788" fg:w="27"/><text x="99.7284%" y="3247.50"></text></g><g><title>deno.exe`v8::internal::Zone::~Zone (31 samples, 0.15%)</title><rect x="99.4736%" y="3285" width="0.1483%" height="15" fill="rgb(212,223,25)" fg:x="20787" fg:w="31"/><text x="99.7236%" y="3295.50"></text></g><g><title>deno.exe`_free_base(void*) (30 samples, 0.14%)</title><rect x="99.4784%" y="3269" width="0.1436%" height="15" fill="rgb(234,58,53)" fg:x="20788" fg:w="30"/><text x="99.7284%" y="3279.50"></text></g><g><title>`0x7FFAA21CAB01 (30 samples, 0.14%)</title><rect x="99.4784%" y="3253" width="0.1436%" height="15" fill="rgb(244,36,1)" fg:x="20788" fg:w="30"/><text x="99.7284%" y="3263.50"></text></g><g><title>deno.exe`_free_base(void*) (3 samples, 0.01%)</title><rect x="99.6220%" y="3269" width="0.0144%" height="15" fill="rgb(222,40,54)" fg:x="20818" fg:w="3"/><text x="99.8720%" y="3279.50"></text></g><g><title>`0x7FFAA21CAB01 (3 samples, 0.01%)</title><rect x="99.6220%" y="3253" width="0.0144%" height="15" fill="rgb(210,207,39)" fg:x="20818" fg:w="3"/><text x="99.8720%" y="3263.50"></text></g><g><title>deno.exe`v8::platform::DefaultJobWorker::Run (1,075 samples, 5.14%)</title><rect x="94.5016%" y="3317" width="5.1443%" height="15" fill="rgb(234,52,14)" fg:x="19748" fg:w="1075"/><text x="94.7516%" y="3327.50">deno.e..</text></g><g><title>deno.exe`v8::internal::maglev::MaglevConcurrentDispatcher::JobTask::Run (448 samples, 2.14%)</title><rect x="97.5020%" y="3301" width="2.1438%" height="15" fill="rgb(239,108,46)" fg:x="20375" fg:w="448"/><text x="97.7520%" y="3311.50">d..</text></g><g><title>deno.exe`v8::internal::maglev::MaglevCompilationInfo::~MaglevCompilationInfo (5 samples, 0.02%)</title><rect x="99.6220%" y="3285" width="0.0239%" height="15" fill="rgb(252,223,5)" fg:x="20818" fg:w="5"/><text x="99.8720%" y="3295.50"></text></g><g><title>`0x7FFAA21EAA68 (20,823 samples, 99.65%)</title><rect x="0.0239%" y="3397" width="99.6459%" height="15" fill="rgb(227,181,11)" fg:x="5" fg:w="20823"/><text x="0.2739%" y="3407.50">`0x7FFAA21EAA68</text></g><g><title>`0x7FFAA0D126AD (20,823 samples, 99.65%)</title><rect x="0.0239%" y="3381" width="99.6459%" height="15" fill="rgb(248,126,40)" fg:x="5" fg:w="20823"/><text x="0.2739%" y="3391.50">`0x7FFAA0D126AD</text></g><g><title>deno.exe`thread_start&lt;unsigned int (__cdecl*)(void *),1&gt;(void* const) (1,097 samples, 5.25%)</title><rect x="94.4203%" y="3365" width="5.2496%" height="15" fill="rgb(243,1,18)" fg:x="19731" fg:w="1097"/><text x="94.6703%" y="3375.50">deno.e..</text></g><g><title>deno.exe`v8::base::ThreadEntry (1,095 samples, 5.24%)</title><rect x="94.4298%" y="3349" width="5.2400%" height="15" fill="rgb(214,145,23)" fg:x="19733" fg:w="1095"/><text x="94.6798%" y="3359.50">deno.e..</text></g><g><title>deno.exe`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (1,095 samples, 5.24%)</title><rect x="94.4298%" y="3333" width="5.2400%" height="15" fill="rgb(241,218,11)" fg:x="19733" fg:w="1095"/><text x="94.6798%" y="3343.50">deno.e..</text></g><g><title>deno.exe`v8::platform::DelayedTaskQueue::TryGetNext (5 samples, 0.02%)</title><rect x="99.6459%" y="3317" width="0.0239%" height="15" fill="rgb(214,219,24)" fg:x="20823" fg:w="5"/><text x="99.8959%" y="3327.50"></text></g><g><title>deno.exe`v8::platform::`anonymous namespace&apos;::DefaultTimeFunction (4 samples, 0.02%)</title><rect x="99.6507%" y="3301" width="0.0191%" height="15" fill="rgb(235,32,7)" fg:x="20824" fg:w="4"/><text x="99.9007%" y="3311.50"></text></g><g><title>deno.exe`v8::base::TimeTicks::Now (3 samples, 0.01%)</title><rect x="99.6555%" y="3285" width="0.0144%" height="15" fill="rgb(227,121,28)" fg:x="20825" fg:w="3"/><text x="99.9055%" y="3295.50"></text></g><g><title>deno.exe`v8::base::`anonymous namespace&apos;::QPCNow (3 samples, 0.01%)</title><rect x="99.6555%" y="3269" width="0.0144%" height="15" fill="rgb(216,129,49)" fg:x="20825" fg:w="3"/><text x="99.9055%" y="3279.50"></text></g><g><title>`0x7FFAA2203F8F (7 samples, 0.03%)</title><rect x="99.6746%" y="3365" width="0.0335%" height="15" fill="rgb(207,194,50)" fg:x="20829" fg:w="7"/><text x="99.9246%" y="3375.50"></text></g><g><title>`0x7FFAA21B846F (5 samples, 0.02%)</title><rect x="99.6842%" y="3349" width="0.0239%" height="15" fill="rgb(207,4,18)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3359.50"></text></g><g><title>`0x7FFAA21B868F (5 samples, 0.02%)</title><rect x="99.6842%" y="3333" width="0.0239%" height="15" fill="rgb(213,50,30)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3343.50"></text></g><g><title>`0x7FFA9F7EC2FD (5 samples, 0.02%)</title><rect x="99.6842%" y="3317" width="0.0239%" height="15" fill="rgb(208,77,22)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3327.50"></text></g><g><title>`0x7FFA9F7EC570 (5 samples, 0.02%)</title><rect x="99.6842%" y="3301" width="0.0239%" height="15" fill="rgb(244,204,34)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3311.50"></text></g><g><title>`0x7FFA9F7ED280 (5 samples, 0.02%)</title><rect x="99.6842%" y="3285" width="0.0239%" height="15" fill="rgb(230,20,17)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3295.50"></text></g><g><title>`0x7FFA9F7ED5BC (5 samples, 0.02%)</title><rect x="99.6842%" y="3269" width="0.0239%" height="15" fill="rgb(237,83,15)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3279.50"></text></g><g><title>`0x7FFA9F7ED6B1 (5 samples, 0.02%)</title><rect x="99.6842%" y="3253" width="0.0239%" height="15" fill="rgb(221,109,25)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3263.50"></text></g><g><title>`0x7FFAA222EE34 (5 samples, 0.02%)</title><rect x="99.6842%" y="3237" width="0.0239%" height="15" fill="rgb(205,194,52)" fg:x="20831" fg:w="5"/><text x="99.9342%" y="3247.50"></text></g><g><title>`0x7FFAA21B88A6 (3 samples, 0.01%)</title><rect x="99.7320%" y="3301" width="0.0144%" height="15" fill="rgb(244,173,54)" fg:x="20841" fg:w="3"/><text x="99.9820%" y="3311.50"></text></g><g><title>`0x7FFAA21BDD99 (3 samples, 0.01%)</title><rect x="99.7320%" y="3285" width="0.0144%" height="15" fill="rgb(227,181,18)" fg:x="20841" fg:w="3"/><text x="99.9820%" y="3295.50"></text></g><g><title>`0x7FFAA21BCE19 (3 samples, 0.01%)</title><rect x="99.7320%" y="3269" width="0.0144%" height="15" fill="rgb(238,36,30)" fg:x="20841" fg:w="3"/><text x="99.9820%" y="3279.50"></text></g><g><title>`0x7FFA9F7EC2FD (3 samples, 0.01%)</title><rect x="99.7464%" y="3205" width="0.0144%" height="15" fill="rgb(254,85,0)" fg:x="20844" fg:w="3"/><text x="99.9964%" y="3215.50"></text></g><g><title>`0x7FFAA226E13F (7 samples, 0.03%)</title><rect x="99.7320%" y="3349" width="0.0335%" height="15" fill="rgb(247,63,33)" fg:x="20841" fg:w="7"/><text x="99.9820%" y="3359.50"></text></g><g><title>`0x7FFAA21BA24A (7 samples, 0.03%)</title><rect x="99.7320%" y="3333" width="0.0335%" height="15" fill="rgb(220,7,54)" fg:x="20841" fg:w="7"/><text x="99.9820%" y="3343.50"></text></g><g><title>`0x7FFAA21A8C9C (7 samples, 0.03%)</title><rect x="99.7320%" y="3317" width="0.0335%" height="15" fill="rgb(238,227,21)" fg:x="20841" fg:w="7"/><text x="99.9820%" y="3327.50"></text></g><g><title>`0x7FFAA21B8930 (4 samples, 0.02%)</title><rect x="99.7464%" y="3301" width="0.0191%" height="15" fill="rgb(237,29,31)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3311.50"></text></g><g><title>`0x7FFAA21BD61D (4 samples, 0.02%)</title><rect x="99.7464%" y="3285" width="0.0191%" height="15" fill="rgb(211,21,50)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3295.50"></text></g><g><title>`0x7FFAA21FCE80 (4 samples, 0.02%)</title><rect x="99.7464%" y="3269" width="0.0191%" height="15" fill="rgb(239,119,2)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3279.50"></text></g><g><title>`0x7FFAA21FCE0E (4 samples, 0.02%)</title><rect x="99.7464%" y="3253" width="0.0191%" height="15" fill="rgb(250,2,39)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3263.50"></text></g><g><title>`0x7FFAA21FD05D (4 samples, 0.02%)</title><rect x="99.7464%" y="3237" width="0.0191%" height="15" fill="rgb(244,46,53)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3247.50"></text></g><g><title>`0x7FFAA21B868F (4 samples, 0.02%)</title><rect x="99.7464%" y="3221" width="0.0191%" height="15" fill="rgb(209,21,19)" fg:x="20844" fg:w="4"/><text x="99.9964%" y="3231.50"></text></g><g><title>`0x7FFAA226E46F (13 samples, 0.06%)</title><rect x="99.7703%" y="3349" width="0.0622%" height="15" fill="rgb(236,145,4)" fg:x="20849" fg:w="13"/><text x="100.0203%" y="3359.50"></text></g><g><title>`0x7FFAA21B46AB (12 samples, 0.06%)</title><rect x="99.7751%" y="3333" width="0.0574%" height="15" fill="rgb(220,133,36)" fg:x="20850" fg:w="12"/><text x="100.0251%" y="3343.50"></text></g><g><title>`0x7FFAA21B48F6 (12 samples, 0.06%)</title><rect x="99.7751%" y="3317" width="0.0574%" height="15" fill="rgb(244,18,3)" fg:x="20850" fg:w="12"/><text x="100.0251%" y="3327.50"></text></g><g><title>`0x7FFAA21B58B4 (12 samples, 0.06%)</title><rect x="99.7751%" y="3301" width="0.0574%" height="15" fill="rgb(232,171,48)" fg:x="20850" fg:w="12"/><text x="100.0251%" y="3311.50"></text></g><g><title>`0x7FFAA21BCE19 (12 samples, 0.06%)</title><rect x="99.7751%" y="3285" width="0.0574%" height="15" fill="rgb(223,223,53)" fg:x="20850" fg:w="12"/><text x="100.0251%" y="3295.50"></text></g><g><title>`0x7FFAA21BC3E8 (11 samples, 0.05%)</title><rect x="99.7799%" y="3269" width="0.0526%" height="15" fill="rgb(246,92,13)" fg:x="20851" fg:w="11"/><text x="100.0299%" y="3279.50"></text></g><g><title>`0x7FFAA21B46AB (10 samples, 0.05%)</title><rect x="99.7847%" y="3253" width="0.0479%" height="15" fill="rgb(229,171,10)" fg:x="20852" fg:w="10"/><text x="100.0347%" y="3263.50"></text></g><g><title>`0x7FFAA21B48F6 (10 samples, 0.05%)</title><rect x="99.7847%" y="3237" width="0.0479%" height="15" fill="rgb(213,131,26)" fg:x="20852" fg:w="10"/><text x="100.0347%" y="3247.50"></text></g><g><title>`0x7FFAA21B58B4 (7 samples, 0.03%)</title><rect x="99.7990%" y="3221" width="0.0335%" height="15" fill="rgb(242,87,54)" fg:x="20855" fg:w="7"/><text x="100.0490%" y="3231.50"></text></g><g><title>`0x7FFAA21BCE19 (7 samples, 0.03%)</title><rect x="99.7990%" y="3205" width="0.0335%" height="15" fill="rgb(237,21,35)" fg:x="20855" fg:w="7"/><text x="100.0490%" y="3215.50"></text></g><g><title>`0x7FFAA21BC3E8 (4 samples, 0.02%)</title><rect x="99.8134%" y="3189" width="0.0191%" height="15" fill="rgb(253,13,47)" fg:x="20858" fg:w="4"/><text x="100.0634%" y="3199.50"></text></g><g><title>`0x7FFAA21B46AB (4 samples, 0.02%)</title><rect x="99.8134%" y="3173" width="0.0191%" height="15" fill="rgb(215,122,49)" fg:x="20858" fg:w="4"/><text x="100.0634%" y="3183.50"></text></g><g><title>`0x7FFAA21B48F6 (4 samples, 0.02%)</title><rect x="99.8134%" y="3157" width="0.0191%" height="15" fill="rgb(209,179,30)" fg:x="20858" fg:w="4"/><text x="100.0634%" y="3167.50"></text></g><g><title>`0x7FFAA21B58B4 (3 samples, 0.01%)</title><rect x="99.8182%" y="3141" width="0.0144%" height="15" fill="rgb(235,100,24)" fg:x="20859" fg:w="3"/><text x="100.0682%" y="3151.50"></text></g><g><title>`0x7FFAA21BCE19 (3 samples, 0.01%)</title><rect x="99.8182%" y="3125" width="0.0144%" height="15" fill="rgb(209,67,24)" fg:x="20859" fg:w="3"/><text x="100.0682%" y="3135.50"></text></g><g><title>`0x7FFAA226E477 (6 samples, 0.03%)</title><rect x="99.8325%" y="3349" width="0.0287%" height="15" fill="rgb(206,74,32)" fg:x="20862" fg:w="6"/><text x="100.0825%" y="3359.50"></text></g><g><title>`0x7FFAA21BA090 (6 samples, 0.03%)</title><rect x="99.8325%" y="3333" width="0.0287%" height="15" fill="rgb(212,45,25)" fg:x="20862" fg:w="6"/><text x="100.0825%" y="3343.50"></text></g><g><title>`0x7FFAA21A0F80 (5 samples, 0.02%)</title><rect x="99.8373%" y="3317" width="0.0239%" height="15" fill="rgb(239,26,3)" fg:x="20863" fg:w="5"/><text x="100.0873%" y="3327.50"></text></g><g><title>`0x7FFAA21A0BB8 (3 samples, 0.01%)</title><rect x="99.8469%" y="3301" width="0.0144%" height="15" fill="rgb(218,36,15)" fg:x="20865" fg:w="3"/><text x="100.0969%" y="3311.50"></text></g><g><title>`0x7FFAA10C8FAA (3 samples, 0.01%)</title><rect x="99.8852%" y="3269" width="0.0144%" height="15" fill="rgb(206,108,24)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3279.50"></text></g><g><title>`0x7FFAA10C8E12 (3 samples, 0.01%)</title><rect x="99.8852%" y="3253" width="0.0144%" height="15" fill="rgb(234,204,42)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3263.50"></text></g><g><title>`0x7FFA9F684EAD (3 samples, 0.01%)</title><rect x="99.8852%" y="3237" width="0.0144%" height="15" fill="rgb(229,2,11)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3247.50"></text></g><g><title>`0x7FFAA0FF39D9 (3 samples, 0.01%)</title><rect x="99.8852%" y="3221" width="0.0144%" height="15" fill="rgb(221,20,48)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3231.50"></text></g><g><title>`0x7FFAA10A5322 (3 samples, 0.01%)</title><rect x="99.8852%" y="3205" width="0.0144%" height="15" fill="rgb(244,164,10)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3215.50"></text></g><g><title>`0x7FFA9F80139D (3 samples, 0.01%)</title><rect x="99.8852%" y="3189" width="0.0144%" height="15" fill="rgb(243,229,2)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3199.50"></text></g><g><title>`0x7FFAA21B2045 (3 samples, 0.01%)</title><rect x="99.8852%" y="3173" width="0.0144%" height="15" fill="rgb(232,131,37)" fg:x="20873" fg:w="3"/><text x="100.1352%" y="3183.50"></text></g><g><title>`0x7FFAA21FCE0E (8 samples, 0.04%)</title><rect x="99.8660%" y="3317" width="0.0383%" height="15" fill="rgb(217,156,11)" fg:x="20869" fg:w="8"/><text x="100.1160%" y="3327.50"></text></g><g><title>`0x7FFAA21FD05D (8 samples, 0.04%)</title><rect x="99.8660%" y="3301" width="0.0383%" height="15" fill="rgb(239,99,48)" fg:x="20869" fg:w="8"/><text x="100.1160%" y="3311.50"></text></g><g><title>`0x7FFAA21B868F (8 samples, 0.04%)</title><rect x="99.8660%" y="3285" width="0.0383%" height="15" fill="rgb(231,209,9)" fg:x="20869" fg:w="8"/><text x="100.1160%" y="3295.50"></text></g><g><title>`0x7FFA9FE3F4BC (5 samples, 0.02%)</title><rect x="99.9234%" y="3237" width="0.0239%" height="15" fill="rgb(254,97,27)" fg:x="20881" fg:w="5"/><text x="100.1734%" y="3247.50"></text></g><g><title>`0x7FFA9F7870F4 (5 samples, 0.02%)</title><rect x="99.9234%" y="3221" width="0.0239%" height="15" fill="rgb(223,151,38)" fg:x="20881" fg:w="5"/><text x="100.1734%" y="3231.50"></text></g><g><title>`0x7FFAA2232D94 (3 samples, 0.01%)</title><rect x="99.9330%" y="3205" width="0.0144%" height="15" fill="rgb(219,206,35)" fg:x="20883" fg:w="3"/><text x="100.1830%" y="3215.50"></text></g><g><title>`0x7FFAA18141A9 (3 samples, 0.01%)</title><rect x="99.9330%" y="3189" width="0.0144%" height="15" fill="rgb(216,130,31)" fg:x="20883" fg:w="3"/><text x="100.1830%" y="3199.50"></text></g><g><title>`0x7FFAA181B7FF (6 samples, 0.03%)</title><rect x="99.9234%" y="3253" width="0.0287%" height="15" fill="rgb(251,97,34)" fg:x="20881" fg:w="6"/><text x="100.1734%" y="3263.50"></text></g><g><title>`0x7FFAA181BAFF (3 samples, 0.01%)</title><rect x="99.9521%" y="3253" width="0.0144%" height="15" fill="rgb(246,159,47)" fg:x="20887" fg:w="3"/><text x="100.2021%" y="3263.50"></text></g><g><title>`0x7FFAA21FCE0E (16 samples, 0.08%)</title><rect x="99.9043%" y="3301" width="0.0766%" height="15" fill="rgb(232,87,10)" fg:x="20877" fg:w="16"/><text x="100.1543%" y="3311.50"></text></g><g><title>`0x7FFAA21FD05D (16 samples, 0.08%)</title><rect x="99.9043%" y="3285" width="0.0766%" height="15" fill="rgb(249,1,37)" fg:x="20877" fg:w="16"/><text x="100.1543%" y="3295.50"></text></g><g><title>`0x7FFAA21B868F (16 samples, 0.08%)</title><rect x="99.9043%" y="3269" width="0.0766%" height="15" fill="rgb(239,135,14)" fg:x="20877" fg:w="16"/><text x="100.1543%" y="3279.50"></text></g><g><title>`0x7FFAA2203EC3 (66 samples, 0.32%)</title><rect x="99.6746%" y="3381" width="0.3158%" height="15" fill="rgb(253,116,46)" fg:x="20829" fg:w="66"/><text x="99.9246%" y="3391.50"></text></g><g><title>`0x7FFAA2259B44 (59 samples, 0.28%)</title><rect x="99.7081%" y="3365" width="0.2823%" height="15" fill="rgb(222,217,37)" fg:x="20836" fg:w="59"/><text x="99.9581%" y="3375.50"></text></g><g><title>`0x7FFAA226E5F5 (26 samples, 0.12%)</title><rect x="99.8660%" y="3349" width="0.1244%" height="15" fill="rgb(252,96,8)" fg:x="20869" fg:w="26"/><text x="100.1160%" y="3359.50"></text></g><g><title>`0x7FFAA21FCE80 (26 samples, 0.12%)</title><rect x="99.8660%" y="3333" width="0.1244%" height="15" fill="rgb(254,103,41)" fg:x="20869" fg:w="26"/><text x="100.1160%" y="3343.50"></text></g><g><title>`0x7FFAA21FCE80 (18 samples, 0.09%)</title><rect x="99.9043%" y="3317" width="0.0861%" height="15" fill="rgb(218,213,19)" fg:x="20877" fg:w="18"/><text x="100.1543%" y="3327.50"></text></g><g><title>`0x7FFAA2203DEE (67 samples, 0.32%)</title><rect x="99.6746%" y="3397" width="0.3206%" height="15" fill="rgb(253,95,21)" fg:x="20829" fg:w="67"/><text x="99.9246%" y="3407.50"></text></g><g><title>all (20,897 samples, 100%)</title><rect x="0.0000%" y="3413" width="100.0000%" height="15" fill="rgb(229,26,28)" fg:x="0" fg:w="20897"/><text x="0.2500%" y="3423.50"></text></g></svg></svg>